{"version":3,"sources":["Modules/login.js","Components/Header.js","Pages/Common/MainPage.js","Components/AsideMenuBar.js","Components/Footer.js","Modules/modal.js","Utils/tokens.js","Modules/user.js","Utils/api.js","Components/ModalComponents/CategoryModal.js","Components/ModalComponents/UserInfoModal.js","Components/ModalComponents/AxisCategoryModal.js","Components/SearchBar.js","Components/ModalComponents/HostSelectModal.js","Components/Editor.js","Components/ModalComponents/CurationWorkContentModal.js","Components/ModalComponents/GlobalModal.js","Components/TopButton.js","Pages/Common/Login/Login.js","Pages/Common/Login/LoginContainer.js","Route/PrivateRoute.js","Components/CrawlDataForm.js","Components/FormHeader.js","Components/Button.js","Pages/Worker/CrawlDataDetail/CrawlDataDetail.js","Pages/Worker/CrawlDataDetail/CrawlDataDetailContainer.js","Components/Pagination.js","Components/NoData.js","Components/DataFilter.js","Components/DataTable.js","Components/ToggleButton.js","Pages/Worker/CrawlDataScreening/CrawlDataScreening.js","Pages/Worker/CrawlDataScreening/CrawlDataScreeningContainer.js","Components/LegacyComponents/CrawlDataCard.js","Components/LegacyComponents/Tab.js","Pages/Worker/CrawlDataList/CrawlDataList.js","Pages/Worker/CrawlDataList/CrawlDataListContainer.js","Pages/Worker/ArchiveDataList/ArchiveDataList.js","Pages/Worker/ArchiveDataList/ArchiveDataListContainer.js","Components/CurationDataCard.js","Components/CurationDataCard2.js","Pages/Common/CurationDataList/CurationDataList.js","Pages/Common/CurationDataList/CurationDataListContainer.js","Pages/Common/CurationDataDetail/CurationDataDetail.js","Pages/Common/CurationDataDetail/CurationDataDetailContainer.js","Pages/Worker/AdminCurationDataList.js","Pages/Worker/WorkerSection.js","Pages/User/UserOnlyDataLookUpPage/UserArchiveDataList.js","Pages/User/UserOnlyDataLookUpPage/UserOnlyDataLookUpPage.js","Modules/custom.js","Pages/User/UserOnlyDataLookUpPage/UserOnlyDataLookUpPageContainer.js","Pages/User/UserSection.js","Pages/Manager/ExcelDataRegister/ExcelDataRegister.js","Pages/Manager/ExcelDataRegister/ExcelDataRegisterContainer.js","Pages/Manager/UserManagement/UserManagement.js","Pages/Manager/UserManagement/UserManagementContainer.js","Components/DashboardComponents/TitleCard.js","Components/DashboardComponents/DocumentStatCard.js","Components/DashboardComponents/UserSelectCard.js","Components/DashboardComponents/WorkStatCard.js","Components/DashboardComponents/ChartCard.js","Components/DashboardComponents/ProcessMenu.js","Components/DashboardComponents/DateRange.js","Pages/Manager/Dashboard/Map.js","Pages/Manager/Dashboard/LineGraph.js","Components/DashboardComponents/Duration.js","Pages/Manager/Dashboard/Dashboard.js","Pages/Manager/Dashboard/DashboardContainer.js","Pages/Manager/CategoryManagement/CategoryManagement.js","Pages/Manager/CategoryManagement/CategoryManagementContainer.js","Pages/Manager/HostManagement/HostManagement.js","Pages/Manager/HostManagement/HostManagementContainer.js","Pages/Manager/MultilingualDictionary/MultilingualDictionary.js","Pages/Manager/MultilingualDictionary/MultilingualDictionaryContainer.js","Pages/Manager/UserCustomMenu/UserCustomMenu.js","Pages/Manager/UserCustomMenu/UserCustomMenuContainer.js","Pages/Manager/ManagerSection.js","Route/PublicRoute.js","App.js","reportWebVitals.js","Modules/index.js","Components/ScrollToTop.js","Components/Loading.js","index.js"],"names":["SET_LOGIN","SET_LOGOUT","setLogout","logout_type","type","initialState","isLogin","localStorage","getItem","HeaderContainer","styled","header","ContentWrapper","div","Logo","img","LoginInfo","Header","name","dispatch","useDispatch","history","useHistory","onClick","push","src","className","Wrapper","MainPage","title","width","height","AsideMenuBarContainer","aside","AsideMenuBarWrapper","ul","AsideMenuGroup","AsideMenuBarItem","NavLink","AsideMenuBar","permission","PERMISSON_DATA","to","activeClassName","size","footer","FooterContainer","FooterContent","Footer","SET_MODAL","SET_MODAL_DATA","CLEAR_AXIS_CATEGORY","SET_CATEGORY_MODAL_TYPE","setModal","modalType","setModalData","modalData","dataType","setCategoryModalType","categoryModalType","doc_country","doc_publish_country","doc_category","doc_content_category","doc_content_type","doc_custom","doc_language","doc_topic","doc_host","modal_user","axis_category","curation_work_content","getToken","SET_USER","setUser","user","headers","authorization","refreshHeaders","refresh","getRefreshToken","ScreeningDataFetchApi","listSize","pageNo","isKeep","searchObj","config","params","keep","axios","get","ScreeningDataStageApi","stageDataList","body","list","put","ScreeningDataKeepApi","keepDataList","post","ScreeningDataDeleteApi","deleteDataList","delete","CrawlDataListFetchApi","statusCode","CrawlDataDetailFetchApi","_id","LoginApi","userID","userPW","a","userAuthApi","sessionHandler","err","Promise","resolve","reject","response","status","RefreshTokenApi","then","res","setItem","data","token","refreshToken","setTokens","Name","Number","Category","catch","FetchUsersApi","categoryListFetchApi","length","code","MultilingualDictionaryApi","method","config2","HostManagementApi","userCustomCurationDataFetchApi","axis","archive","crawlHostDataFetchApi","host_id","router","crawlSumDataFetchApi","userWorkLogFetchApi","dataObj","curationWorkListFetchApi","countryWorkListFetchApi","process","workAllLogFetchApi","ModalWrapper","Modalheader","ModalTitle","ModalSubTitle","ModalBody","ModalActions","Button","button","props","color","ListBody","ListContainer","ListHeader","ListWrapper","ListItem","li","active","css","CategoryList","CategoryModal","executeModal","closeModal","useSelector","state","modal","categoryModalData","CATEGORY_TYPE_DATA","subTitle","useState","categoryList","setCategoryList","upperCode","setUpperCode","setLength","selectedCategoryList","setSelectedCategoryList","clickHandler","e","item","detail","_upperCode","upperCodeHandler","lengthHandler","addCategory","some","ele","CODE","alert","dataCleansing","rawData","index","findIndex","i","_categoryList","useEffect","dataFetch","map","category","index2","value","CT_NM","filter","IDX","InputWrapper","InputTitle","required","InputFieldWrapper","InputField","input","SelectField","select","Message","UserInfoModal","id","setID","setUserID","idMsg","setIdMsg","setUserPW","userPWCheck","setUserPWCheck","salt","setSalt","Tel","setTel","Position","setPosition","setName","Email","setEmail","setCategory","Company","setCompany","confirm","setConfirm","userInfo","Confirm","_confirmCheck","onChange","target","userId","verifyUserIdApi","permission_code","permission_name","addUserApi","window","location","reload","uid","modifyUserInfoApi","CategoryBtnWrapper","selectedCategory","setSelectedCategory","currentCategoryType","setCurrentCategoryType","find","SearchBarContainer","OptionWrapper","SearchBtn","SearchBar","keywordHandler","searchAction","placeholder","SearchResultWrapper","SearchResultRow","HostSelectModal","keyword","setKeyword","hostList","setHostList","selectHost","setSelectHost","like","NAME","HOST","editorConfiguration","plugins","ImageUploadEditing","PasteFromOffice","Essentials","Paragraph","Bold","Italic","Heading","Underline","Strikethrough","BlockQuote","Link","MediaEmbed","Font","Image","ImageStyle","ImageToolbar","ImageUpload","ImageCaption","ImageResize","ImageResizeEditing","Clipboard","ImageResizeHandles","LinkImage","List","Alignment","Table","TableToolbar","TextTransformation","TableProperties","TableCellProperties","Indent","IndentBlock","Base64UploadAdapter","InlineEditor","HorizontalLine","toolbar","heading","options","model","view","class","fontSize","alignment","table","contentToolbar","image","resizeUnit","resizeOptions","icon","typing","transformations","remove","fontFamily","CustomCKEditor","Editor","_docContentHandler","readOnly","paste","event","editor","dataTransfer","files","deleteContent","document","selection","file","images","FormData","append","imageForm","result","change","writer","imageElement","createElement","insertContent","stop","disabled","ClassicEditor","getData","onReady","documentView","editing","on","priority","toolbarElement","ui","element","style","display","CurationWorkContentModal","MODAL_TYPES","MODAL_COMPONENTS","AxisCategoryModal","Background","GlobalModal","ModalComponent","renderComponent","Top","TopButton","scrollTo","ErrorMsg","p","PageIngoContainer","BackgroundContainer","LoginContainer","form","LogoContainer","CustomInput","LoginButton","Login","_inputIDHandler","_inputPWHandler","loginFunc","errorMsg","onKeyPress","href","inputID","setInputID","inputPW","setInputPW","setErrorMsg","_token","_refreshToken","tokens","key","PrivateRoute","Component","component","rest","login","CrawlDataForm","ref","docs","itemId","setItemId","docCategory","docContentCategory","docContentType","docCountry","docPublishCountry","docCustom","docLanguage","docTopic","docHost","docContent","setDocContent","docKeyword","setDocKeyword","docKorSummary","setDocKorSummary","docOriginSummary","setDocOriginSummary","docKorTitle","setDocKorTitle","docOriginTitle","setDocOriginTitle","docMemo","setDocMemo","docPage","setDocPage","docBiblio","setDocBiblio","docPublisher","setDocPublisher","docPublishing","setDocPublishing","docRecomment","setDocRecomment","docPublishDate","setDocPublishDate","docWriteDate","setDocWriteDate","docRegisterDate","setDocRegisterDate","docCollectDate","setDocCollectDate","docBundleTitle","setDocBundleTitle","docBundleUrl","setDocBundleUrl","docRelateTitle","setDocRelateTitle","docRelateUrl","setDocRelateUrl","docThumbnail","setDocThumbnail","docUrl","setDocUrl","docUrlIntro","setDocUrlIntro","docProject","setDocProject","docThumbnailSelect","setDocThumbnailSelect","docKeywordString","setDocKeywordString","docCategoryIndexList","setDocCategoryIndexList","docCountryIndexList","setDocCountryIndexList","docPublishCountryIndexList","setDocPublishCountryIndexList","docLanguageIndexList","setDocLanguageIndexList","docContentCategoryIndexList","setDocContentCategoryIndexList","docContentTypeIndexList","setDocContentTypeIndexList","docCustomIndexList","setDocCustomIndexList","docTopicIndexList","setDocTopicIndexList","_docThumbnailSelectHandler","_openCategoryModal","useImperativeHandle","getCrawlFormData","_docs","charCodeAt","Object","keys","item_id","doc_content","replaceAll","doc_write_date","substring","doc_register_date","doc_publish_date","doc_collect_date","doc_keyword","join","doc_thumbnail","doc_origin_summary","doc_kor_summary","doc_publisher","doc_publishing","doc_page","doc_origin_title","doc_kor_title","doc_url","doc_url_intro","doc_relate_title","doc_relate_url","doc_bundle_title","doc_bundle_url","doc_recomment","doc_biblio","doc_memo","split","trim","_list","CustomFormRow","CustomFormItem","CustomList","min","replace","maxlength","ImageContainer","checked","htmlFor","forwardRef","HeaderWrapper","FormHeader","CustomButton","children","ButtonWrapper","CrawlDataDetail","crawlDataFormRef","dataKeep","dataReject","dataStage","cancel","STATUS_CODE_SET","CrawlDataDetailContainer","useParams","useRef","setDocs","_rawStatusDetailData","doc_keyowrd","doc_project","String","fromCharCode","imageDetachHandler","leaveSetting","preventDefault","returnValue","addEventListener","removeEventListener","trackPromise","CrawlDataKeepApi","CrawlDataRejectApi","_crawlDataFormDocs","current","CrawlDataStageApi","PaginationContainer","PaginationButton","NextPrevButton","Pagination","dcCount","setPageNo","pageCount","setPageCount","pageNoArray","setPageNoArray","currentPageNoArray","setCurrentPageNoArray","currentPage","setCurrentPage","_handlerPageNo","_currentPageNo","calcCurrentPageNoArray","_start","_end","_currentPageNoArray","slice","_pageCount","Math","ceil","_pageNoArray","Array","from","v","_currentPageNext","NoData","SearchResultNotthingContainer","FilterHeader","Title","FilterBody","FilterActions","FilterBodyWrapper","ActionButton","OptionContainer","OptionRow","OptionCol","OptionTitle","OptionInput","OptionSelect","Chip","DataFilter","dataFilterFetch","optionIsOpen","setOptionIsOpen","isCrawled","setIsCrawled","sort","setSort","dateRange","setDateRange","isDateRange","setIsDateRange","sortType","setSortType","dateGte","setDateGte","Date","toISOString","dateLte","setDateLte","pageGte","setPageGte","pageLte","setPageLte","screeningHost","setScreeningHost","screeningLanguage","setScreeningLanguage","_calcDateDifference","start","end","parse","searchReset","_dateGte","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","default","last","TableWrapper","Badge","is_crawled","CustomTable","CustomRadio","DataTable","tableData","onChangeCheckedAll","checkedAll","onChangeEach","doc_country_list","doc_category_list","includes","ToggleButtonWrapper","ToggleButton","mode1","mode2","action","ScreeningButton","BottomWrap","RowContainer","Row","CrawlDataScreening","setListSize","screeningData","stageScreeningData","onChangeKeepToggle","CrawlDataScreeningContainer","setScreeningData","setSearchObj","setDcCount","setIsKeep","itemList","setItemList","setCheckedAll","setStageDataList","setKeepDataList","setDeleteDataList","_newItemList","_screeningData","_rawScreeningData","_dcCount","forEach","obj","console","log","_itemList","_item_id","_index","SearchResult","CrawlDataList","crawlDataList","mainTitle","CrawlDataListContainer","setCrawlDataList","currentCode","setCurrentCode","_crawlDataList","_rawCrawlDataList","stat","ArchiveDataList","archiveDataList","onChangeRequestToggle","isRequest","ArchiveDataListContainer","setArchiveDataList","setIsRequest","_archiveDataList","_rawArchiveDataList","x","CardWrapper","ContentContainer","SubTitle","Info","CategoryBadge","CountryBadge","PageBadge","PublisherBadge","RegiDateBadge","Content","CurationDataCard","curationDataItem","doc_publish_country_list","UrlPreview","CurationDataCard2","CurationList","curationData","handleRowClick","CurationListTable","doc_content_type_list","ViewType","CurationListWrapper","CurationCard1Wrapper","CurationCard2Wrapper","CustomLink","CurationDataList","curationDataList","viewType","viewTypeHandler","CurationDataListContainer","setCurationDataList","axisObj","custom","setViewType","_curationDataList","_rawCurationDataList","X","Y","customDataFetch","ArticleActions","ArticleInfoWrapper","ArticleHeader","ArticleInfoContainer","ArticleInfo","ContentRow","CurationDataDetail","goDataManage","dc_hits","doc_language_list","doc_content_category_list","doc_topic_list","CurationDataDetailContainer","AdminCurationDataList","WorkerSection","path","exact","ArchiveDataTable","UserArchiveDataList","listSizeHandler","archiveData","curationRequest","ModeSwitchButton","AxisTitle","AxisMenuBar","ContentBody","UserOnlyDataLookUpPage","axisMenu","menuClickHandler","dataMode","modeSwitchHandler","ct_nm","SET_AXIS","setAxis","UserOnlyDataLookUpPageContainer","setAxisMenu","setDataMode","setArchiveData","menuDataFetch","userAxisMenuFetchApi","axis_x","axis_y","lengtth","_axisMenu","setting","_axisObj","x_type","x_code","y_type","y_code","initAxisObj","archiveDataFetch","requested","curationRequestApi","UserSection","ButtonContainer","FileList","FileCard","UploadContainer","BodyContainer","ExcelDataRegister","readExcel","nextStep","prevStep","step","setExcelData","readPdf","pdfMetaData","deletePdf","excelData","excelFilename","setExcelFilename","pdfFilename","setPdfFilename","accept","multiple","available","ExcelDataRegisterContainer","pdfData","setPdfData","setPdfMetaData","setStep","getfileSize","floor","pow","toFixed","upload","formData","pdf","JSON","stringify","_pdfData","_pdfMetaData","_obj","reader","FileReader","onload","_excelData","excelFile","XLSX","read","sheetName","SheetNames","firstSheet","Sheets","utils","sheet_to_json","defval","doc_file","doc_hit","doc_modify_date","readAsBinaryString","regiExcel","prev","_newPdfData","_newPdfMetaData","UserManagement","userData","openUserModifyModal","deleteUser","restrictUser","openUserAddModal","CreateAt","UserManagementContainer","setUserData","deleteUserByIdApi","restrict","restrictUserApi","TitleCard","subtitle","DocumentStatCard","countryDocumentData","country","collect","screening","refine","register","curation","UserSelectCard","currentUserIdHandler","setCurrentUserId","userList","setUserList","StatContainer","WorkStatCard","workAllLogData","workAllStatusHandler","workAllStatus","ChartCard","MenuItem","ProcessMenu","processHandler","_processHandler","DateRangeContainer","DateRange","dateRangeHandler","Map","getCountryMapChartData","useLayoutEffect","root","am5","new","setThemes","am5themes_Animated","chart","container","am5map","projection","polygonSeries","series","geoJSON","am5geodata_worldLow","geodataNames","am5geodata_lang_KO","exclude","mapPolygons","template","setAll","tooltipText","interactive","states","create","fill","stroke","events","ev","dataItem","dataContext","zoomToDataItem","hide","show","set","dispose","LineGraph","lineGraphData","duration","divName","graphDuration","setGraphDuration","am5xy","panX","panY","wheelX","wheelY","layout","verticalLayout","maxTooltipDistance","yAxis","yAxes","extraMax","maxDeviation","extraTooltipPrecision","renderer","xAxis","xAxes","baseInterval","timeUnit","count","minGridDistance","valueYField","valueXField","tooltip","bullets","sprite","radius","strokes","label","values","cursor","lineY","getPrivate","y","positionToDate","positionToValue","orientation","Duration","setDuration","currentDuration","setCurrentDuration","currentDurationHandler","CountryContentWrapper","Tab","TabButton","CrawlFileTypeWrapper","CrawlFileTypeStatCard","CrawlStatusTable","LineGraphOnlyOneWrapper","LineGraphWrapper","Dashboard","countryPieChartData","menuType","menuHandler","rowClickHandler","crawlHostList","selectedHostId","currentCrawlHostLog","crawlSum","curationWorkModalOpen","curationWorkList","userWorkAllData","processTitle","crawlCountSort","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","colors","scheme","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","defs","background","padding","stagger","rotation","lineWidth","spacing","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","ES_ID","DT","QUALITY","CONTENT_BEF","CONTENT_CUR","url","html","word","excel","ppt","etc","rowSpan","colSpan","job_id","host","created_at","fontWeight","toUpperCase","start_time","end_time","DashboardContainer","setMenuType","setCrawlHostList","setCurrentCrawlHostLog","setSelectedHostId","setCrawlSum","setProcess","currentUserId","setLineGraphData","setCurationWorkList","setUserWorkAllData","setCountryPieChartData","setCountryDocumentData","setWorkAllLogData","setWorkAllStatus","sortDataType","setSortDataType","graphDataCleansing","date","getTime","cnt","_getUserWorkAllLog","_rawData","_tmp","getUserWorkAllLog","screeningResult","refineResult","registerResult","curationResult","pieChartDataCleansing","_pieChart","random","toString","countryName","_collect","_screening","_refine","_register","_curation","_data","wid","getUserWorkLog","getCurationWorkList","reverse","sortResult","b","LineBox","MenuContainer","Menu","ViewItem","EditItem","AddItem","CategoryManagement","CATEGOROY_CODE_LIST","typeHandler","editableCode","editCategoryName","categoryEdit","categoryEditConfirm","categoryEditCancel","onChangeEditInput","onChangeAddInput","categoryAdd","categoryDelete","정책분류","유형분류","국가분류","언어","토픽분류","기관맞춤형분류","CategoryManagementContainer","setEditableCode","addCategoryName","setAddCategoryName","setEditCategoryName","setType","categoryItemEditApi","categoryItemAddApi","categoryItemDeleteApi","DictionaryFunctionWrapper","DictionaryFunctionBtnWrapper","DictonaryDataTable","FilterWrapper","HostRegisterContainer","HostManagement","currentHostList","filterOpen","_filterOpenHandler","_filterInputsHandler","_registerHostOpenHandler","filterSearch","excelUpload","excelDownload","selectedHost","hostRegisterUpload","_hostPublisherHandler","_hostWorkCycleHandler","hostWorkCycle","hostPublisher","nextrendSync","hostTestList","running_time","test_end","is_registered","idx","lang","workCycle","HostManagementContainer","setCurrentHostList","setSelectedHost","filterInputs","setFilterInputs","setFilterOpen","setHostPublisher","setHostWorkCycle","_arr","LANG","COUNTRY","CATEGORY","WORK_CYCLE","_result","book","book_new","_hostArray","aoa_to_sheet","book_append_sheet","writeFile","eachHostModify","hostSyncApi","ShortSearchBar","DataAddContainer","MultilingualDictionary","dataAddOpen","dataAddOpenHandler","currentWordData","editWordIndex","editWordData","editWordOpen","editWordCancel","editWordHandler","saveWord","deleteWord","search","addWord","addWordDataHandler","wordDataUpload","wordDataDownload","MULTI_TEXT","MultilingualDictionaryContainer","wordData","setWordData","setCurrentWordData","setDataAddOpen","setEditWordIndex","setEditWordData","addWordData","setAddWordData","multi_text","flat","Infinity","PreviewMenuWrapper","MenuCustomCard","SaveButton","UserListCard","UserCard","AxisCardWrapper","AxisCard","UserCustomMenu","openCategoryModal","previewAxisMenu","axisCategoryInfo","saveUserAxisData","category_type","select_category_name","UserCustomMenuContainer","CATEGORY_TYPE_LIST","isNewSetting","setIsNewSetting","currentAxis","setCurrentAxis","currentCategory","setAxisCategoryInfo","axisMenuData","setAxisMenuData","setPreviewAxisMenu","getAxisMenuUserSetting","userAxisMenuSettingFetchApi","userSettingObj","x_name","y_name","x_cid","TYPE","y_cid","previewSetting","cid","axisMenuPreviewFetchApi","_userList","axisSetObj","saveType","userAxisMenuSaveApi","xaxis","yaxis","PublicRoute","restricted","AdminBody","UserBody","Section","section","App","shallowEqual","ManagerSection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","_type","removeItem","_modalData","ScrollToTop","pathname","useLocation","LoaderContainer","Loading","promiseInProgress","usePromiseTracker","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0fd8408.chunk.js","sourcesContent":["const SET_LOGIN = \"login/SET_LOGIN\";\r\nconst SET_LOGOUT = \"login/SET_LOGOUT\";\r\n\r\n/* \r\n    token - 로그인한 유저의 token 정보\r\n    refreshToken - 로그인한 유저의 refreshToken 정보. \r\n    여기서 refreshToken은 로그인 연장에 사용함.\r\n    token 만료 시 refreshToken만료 검사\r\n    refreshToken이 만료되지 않았다면 로그인 연장.\r\n    refreshToken이 만료되었다면 로그아웃 후 재로그인 요청\r\n*/\r\n/* \r\n    로그아웃 에서 일반 로그아웃과 세션만료 로그아웃을 구분함.\r\n    normal_logout - 일반 로그아웃\r\n    expired_logout - 세션 만료 로그아웃\r\n*/\r\n\r\nexport const setLogin = (tokens) => ({ type: SET_LOGIN, tokens });\r\nexport const setLogout = (logout_type) => ({ type: SET_LOGOUT, logout_type });\r\n\r\nconst initialState = {\r\n  isLogin: !!localStorage.getItem(\"token\"), // 로그인 상태를 담고 있는 state\r\n};\r\n\r\nexport default function login(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOGIN:\r\n      const _token = action.tokens.token;\r\n      const _refreshToken = action.tokens.refreshToken;\r\n      localStorage.setItem(\"token\", _token);\r\n      localStorage.setItem(\"refreshToken\", _refreshToken);\r\n      return {\r\n        ...state,\r\n        isLogin: true,\r\n      };\r\n\r\n    case SET_LOGOUT:\r\n      const _type = action.logout_type;\r\n      if (_type === \"NORMAL_LOGOUT\") {\r\n        alert(\"성공적으로 로그아웃 되었습니다.\");\r\n      } else if (_type === \"EXPIRED_LOGOUT\") {\r\n        alert(\"세션이 만료되어 로그아웃 되었습니다.\");\r\n      }\r\n      localStorage.removeItem(\"token\"); // 로컬스토리지에서 데이터 삭제\r\n      localStorage.removeItem(\"refreshToken\"); // 로컬스토리지에서 데이터 삭제\r\n      window.location.href = \"/\";\r\n      return {\r\n        ...state,\r\n        isLogin: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/* \r\n    로그인 처리 관련 함수를 여기서 모두 관리하도록 할 예정.\r\n    로그인 처리 함수가 흩어져 있으면 보기가 어려움 ...\r\n    action 함수가 state 관리를 위해서 있는 거긴 한데    \r\n    여기에서 localStorage 접근을 좀 해야겠음..\r\n*/\r\n\r\n/* \r\n    로그인을 하면 로컬스토리지에 token값과 refreshToken 값을 저장하며 , \r\n    저장한 token값은 서버와 통신을 할 때 로그인 유효 여부를 판단하기 위해 사용한다.\r\n\r\n    저장한 token값은 로그아웃을 하지 않는 이상 localStorage에서 삭제되지 않지만,\r\n    통신 과정에서 token값이 유효하지 않거나 만료되었다면 서버에서 401에러를 반환한다.\r\n    \r\n    이 401 인증실패 에러를 받았다면 로그아웃 처리 하고 재로그인을 하도록 유도한다. \r\n\r\n    그리고 프론트엔드 에서는 토큰 외의 유저 정보를 따로 저장하지 않아도 된다. \r\n\r\n    사용자가 로그인을 했을 때, 백엔드에서 해당 유저에 대한 토큰을 생성하고, \r\n    그 때 로그인한 유저에 대한 정보를 전역으로 관리하도록 한다. \r\n\r\n    프론트엔드에서 통신할 때 헤더로 보내는 토큰을 백엔드에서 받아 \r\n    1. 토큰의 유효성 검사 => 유효하지 않거나 만료되었을 경우 401 에러 반환\r\n    2. 로그인한 사용자에 대한 정보를 전역에서 가져와서 사용함. (post요청 등... DB에 무언갈르 기록할 일이 있을 때.)\r\n*/\r\n\r\n/* \r\n    로컬스토리지에 token key에 대한 value가 존재한다면 true값을 반환하며,\r\n    로컬스토리지에 token key에 대한 value가 undefined 이거나 null .. 등 falsy한 값을 가지면 false를 반환한다 (!! 연산자)\r\n*/\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogout } from \"../Modules/login\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Header({ name }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const go메인페이지 = () => {\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  /* process.env.PUBLIC_URL 은 /public/ .... 의 경로를 절대경로로 나타냄. 환경변수에요*/\r\n\r\n  const logout = () => {\r\n    dispatch(setLogout(\"NORMAL_LOGOUT\"));\r\n  };\r\n  return (\r\n    <>\r\n      <HeaderContainer>\r\n        <ContentWrapper>\r\n          <Logo\r\n            onClick={go메인페이지}\r\n            src={process.env.PUBLIC_URL + \"/img/logo4.png\"}\r\n          />\r\n          <LoginInfo>\r\n            <p className=\"userName\">{name}</p>\r\n            <p className=\"greetings\">님 안녕하세요.</p>\r\n            <button onClick={logout}>로그아웃</button>\r\n          </LoginInfo>\r\n        </ContentWrapper>\r\n      </HeaderContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 6rem;\r\n  border-bottom: solid 0.5rem #435269;\r\n  align-items: center;\r\n  position: fixed; // 상단고정\r\n  background-color: white;\r\n  width: 100%;\r\n  z-index: 9; // 맨 위에\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 4rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LoginInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  .userName {\r\n    font-weight: bold;\r\n  }\r\n  button {\r\n    margin-left: 1rem;\r\n    height: 2rem;\r\n    border: none;\r\n    padding: 0 1rem 0 1rem;\r\n    border-radius: 5px;\r\n    background-color: #435269;\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <Wrapper>\r\n      <h1>Nextrend.kr 임시 메인페이지. 이 곳에 페이지 메인 기능 설명</h1>\r\n      <iframe src=\"http://knlab.co.kr/?act=info.page&pcode=sub3_1\" title=\"nextrend서비스 개요\" width=\"100%\" height=\"700px\"></iframe>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { RiUserSettingsFill } from \"react-icons/ri\";\r\nimport {\r\n  MdOutlineDashboard,\r\n  MdOutlineCategory,\r\n  MdWebAsset,\r\n  MdOutlineAdd,\r\n  MdSettings,\r\n  MdUpload,\r\n  MdManageSearch,\r\n  MdCalendarViewDay,\r\n} from \"react-icons/md\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FaBook } from \"react-icons/fa\";\r\nfunction AsideMenuBar({ permission }) {\r\n  const PERMISSON_DATA = {\r\n    0: \"사용자\",\r\n    1: \"스크리닝 작업자\",\r\n    2: \"정제 작업자\",\r\n    3: \"등록 작업자\",\r\n    4: \"큐레이션 작업자\",\r\n    9: \"관리자\",\r\n  };\r\n  return (\r\n    <>\r\n      <AsideMenuBarContainer>\r\n        <AsideMenuBarWrapper>\r\n          <AsideMenuGroup>\r\n            <div className=\"group-title\">DASH BOARD</div>\r\n            <div className=\"group-menu\">\r\n              {PERMISSON_DATA[permission] === \"관리자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem to=\"/dashboard\" activeClassName=\"active\">\r\n                    <div className=\"icon-container\">\r\n                      <MdOutlineDashboard size=\"16\" />\r\n                    </div>\r\n                    대시보드\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n            </div>\r\n          </AsideMenuGroup>\r\n          <AsideMenuGroup>\r\n            <div className=\"group-title\">DATA UPLOAD</div>\r\n            <div className=\"group-menu\">\r\n              {PERMISSON_DATA[permission] === \"관리자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem\r\n                    to=\"/excel/register\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <div className=\"icon-container\">\r\n                      <MdUpload className=\"icon\" size=\"16\" />\r\n                    </div>\r\n                    엑셀 데이터 등록\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n            </div>\r\n          </AsideMenuGroup>\r\n          <AsideMenuGroup>\r\n            <div className=\"group-title\">CRAWL DATA WORK</div>\r\n            <div className=\"group-menu\">\r\n              {PERMISSON_DATA[permission] !== \"사용자\" &&\r\n                PERMISSON_DATA[permission] !== \"정제 작업자\" && (\r\n                  <li>\r\n                    <AsideMenuBarItem\r\n                      to=\"/crawl/screening\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <div className=\"icon-container\">\r\n                        <MdManageSearch size=\"16\" />\r\n                      </div>\r\n                      크롤 데이터 스크리닝\r\n                    </AsideMenuBarItem>\r\n                  </li>\r\n                )}\r\n              {PERMISSON_DATA[permission] !== \"사용자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem\r\n                    to=\"/crawl/2\"\r\n                    activeClassName=\"active\"\r\n                    \r\n                  >\r\n                    <div className=\"icon-container\">\r\n                      <MdSettings size=\"16\" />\r\n                    </div>\r\n                    크롤 데이터 정제\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n              {PERMISSON_DATA[permission] !== \"사용자\" &&\r\n                PERMISSON_DATA[permission] !== \"정제 작업자\" && (\r\n                  <li>\r\n                    <AsideMenuBarItem\r\n                      to=\"/crawl/4\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <div className=\"icon-container\">\r\n                        <MdOutlineAdd size=\"16\" />\r\n                      </div>\r\n                      크롤 데이터 등록 (아카이빙)\r\n                    </AsideMenuBarItem>\r\n                  </li>\r\n                )}\r\n              {(PERMISSON_DATA[permission] === \"관리자\" ||\r\n                PERMISSON_DATA[permission] === \"큐레이션 작업자\") && (\r\n                <li>\r\n                  <AsideMenuBarItem to=\"/archive\" activeClassName=\"active\">\r\n                    <div className=\"icon-container\">\r\n                      <MdCalendarViewDay size=\"16\" />\r\n                    </div>\r\n                    큐레이션 데이터 등록 (아카이브 데이터 조회)\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n              {(PERMISSON_DATA[permission] === \"관리자\" ||\r\n                PERMISSON_DATA[permission] === \"큐레이션 작업자\") && (\r\n                <li>\r\n                  <AsideMenuBarItem\r\n                    to=\"/curation\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <div className=\"icon-container\">\r\n                      <MdOutlineAdd size=\"16\" />\r\n                    </div>\r\n                    큐레이션\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n            </div>\r\n          </AsideMenuGroup>\r\n          <AsideMenuGroup>\r\n            <div className=\"group-title\">CATEGORY MANAGE</div>\r\n            <div className=\"group-menu\">\r\n              {PERMISSON_DATA[permission] === \"관리자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem to=\"/category\" activeClassName=\"active\">\r\n                    <div className=\"icon-container\">\r\n                      <MdOutlineCategory size=\"16\" />\r\n                    </div>\r\n                    카테고리 관리\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n              {PERMISSON_DATA[permission] === \"관리자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem to=\"/host\" activeClassName=\"active\">\r\n                    <div className=\"icon-container\">\r\n                      <MdWebAsset size=\"16\" />\r\n                    </div>\r\n                    HOST 목록 관리\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n              {PERMISSON_DATA[permission] === \"관리자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem to=\"/dictionary\" activeClassName=\"active\">\r\n                    <div className=\"icon-container\">\r\n                      <FaBook size=\"16\" />\r\n                    </div>\r\n                    다국어 사전 관리\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n            </div>\r\n          </AsideMenuGroup>\r\n          <AsideMenuGroup>\r\n            <div className=\"group-title\">SETTING</div>\r\n            <div className=\"group-menu\">\r\n              {PERMISSON_DATA[permission] === \"관리자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem to=\"/user\" activeClassName=\"active\">\r\n                    <div className=\"icon-container\">\r\n                      <RiUserSettingsFill size=\"16\" />\r\n                    </div>\r\n                    사용자 관리\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n\r\n              {PERMISSON_DATA[permission] === \"관리자\" && (\r\n                <li>\r\n                  <AsideMenuBarItem to=\"/user-custom-menu\" activeClassName=\"active\">\r\n                    <div className=\"icon-container\">\r\n                      <MdSettings size=\"16\" />\r\n                    </div>\r\n                    맟춤형 화면 생성\r\n                  </AsideMenuBarItem>\r\n                </li>\r\n              )}\r\n            </div>\r\n          </AsideMenuGroup>\r\n\r\n          {PERMISSON_DATA[permission] === \"사용자\" && (\r\n            <li>\r\n              <AsideMenuBarItem to=\"/curation\" activeClassName=\"active\">\r\n                <div className=\"icon-container\">\r\n                  <MdOutlineAdd size=\"16\" />\r\n                </div>\r\n                큐레이션\r\n              </AsideMenuBarItem>\r\n            </li>\r\n          )}\r\n        </AsideMenuBarWrapper>\r\n      </AsideMenuBarContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst AsideMenuBarContainer = styled.aside`\r\n  width: 100%;\r\n`;\r\nconst AsideMenuBarWrapper = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  background-color: #435269;\r\n  height: 100%;\r\n`;\r\nconst AsideMenuGroup = styled.div`\r\n  padding: 1rem;\r\n\r\n  .group-title {\r\n    padding: 0 1rem 1rem 1rem;\r\n    color: white;\r\n    font-size: 12px;\r\n  }\r\n  .group-menu {\r\n    color: white;\r\n    border-bottom: solid 1px rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nconst AsideMenuBarItem = styled(NavLink)`\r\n  cursor: pointer;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  padding: 1rem;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  transition: all 0.2s;\r\n  color: #eee;\r\n  word-break: keep-all;\r\n  text-decoration: none;\r\n\r\n  .icon-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-width: 32px;\r\n    min-height: 32px;\r\n    border-radius: 32px;\r\n    background-color: white;\r\n    margin-right: 1rem;\r\n    color: #435269;\r\n  }\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  &.active {\r\n    border-radius: 4px;\r\n    background-color: white;\r\n    color: #435269;\r\n    .icon-container {\r\n      color: white;\r\n      background-color: #435269;\r\n    }\r\n  }\r\n`;\r\n\r\n/*\r\nconst AsideMenuBarItem = styled.li`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  background-color: #bfbfbf;\r\n  padding: 1.5rem 1rem 1.5rem 1rem;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  border-bottom: dotted 1px #eee;\r\n  transition: all 0.2s;\r\n  .icon {\r\n    margin-right: 0.5rem;\r\n  }\r\n  &:hover {\r\n    background-color: #d6d6d6;\r\n  }\r\n`;\r\n\r\n*/\r\nexport default AsideMenuBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <FooterContent>\r\n          <Logo src={process.env.PUBLIC_URL + \"/img/logo3.jpg\"} />\r\n          <FooterContainer>\r\n            <ContentWrapper>\r\n              <div className=\"title\">회사명</div>\r\n              <div>케이앤랩 (KNlab)</div>\r\n            </ContentWrapper>\r\n            <ContentWrapper>\r\n              <div className=\"title\">본사 소재지</div>\r\n              <div>경상북도 구미시 대학로 61, 산학협력관 710호</div>\r\n            </ContentWrapper>\r\n            <ContentWrapper>\r\n              <div className=\"title\">기업부설연구소</div>\r\n              <div>서울특별시 금천구 디지털로 121, 에이스가산타워 601-1호</div>\r\n            </ContentWrapper>\r\n            <ContentWrapper>\r\n              <div>Copyright ⓒ 케이엔랩 All rights reserved. </div>\r\n            </ContentWrapper>\r\n          </FooterContainer>\r\n        </FooterContent>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.footer`\r\n  padding: 3rem 0 3rem 0;\r\n  background-color: #435269;\r\n  color: white;\r\n  height: 13rem;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 3rem;\r\n`;\r\nconst FooterContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst FooterContent = styled.div` \r\nwidth: 90%;\r\n  margin: 0 auto;\r\n  & * {\r\n    margin-right:3rem;\r\n  }\r\n`\r\nconst ContentWrapper = styled.div`\r\n  \r\n  display: flex;\r\n  align-items: right;\r\n  font-size: 14px;\r\n  padding-top: 1rem;\r\n  .title {\r\n    font-weight: bold;\r\n    min-width: 8rem;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport default Footer;\r\n","const SET_MODAL = \"modal/SET_MODAL\";\r\nconst SET_MODAL_DATA = \"modal/SET_MODAL_DATA\";\r\nconst CLEAR_AXIS_CATEGORY = \"modal/CLEAR_AXIS_CATEGORY\";\r\nconst SET_CATEGORY_MODAL_TYPE = \"modal/SET_CATEGORY_MODAL_TYPE\";\r\n\r\nexport const setModal = (modalType) => ({ type: SET_MODAL, modalType });\r\nexport const setModalData = (modalData, dataType) => ({\r\n  type: SET_MODAL_DATA,\r\n  modalData,\r\n  dataType,\r\n});\r\nexport const clearCategoryData = () => ({ type: CLEAR_AXIS_CATEGORY });\r\nexport const setCategoryModalType = (categoryModalType) => ({\r\n  type: SET_CATEGORY_MODAL_TYPE,\r\n  categoryModalType,\r\n});\r\nconst initialState = {\r\n  modalType: null,\r\n  categoryModalType: null,\r\n  modalData: {\r\n    doc_country:[],\r\n    doc_publish_country:[],\r\n    doc_category:[],\r\n    doc_content_category:[],\r\n    doc_content_type:[],\r\n    doc_custom:[],\r\n    doc_language:[],\r\n    doc_topic:[],\r\n    doc_host:null, // host와 publisher 를 동시에 담는 객체\r\n\r\n    modal_user: [],\r\n    axis_category:null,\r\n    curation_work_content:\"\", // 큐레이션 작업 내용을 저장하는 변수\r\n  },\r\n};\r\n\r\nexport default function modal(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_MODAL:\r\n      return {\r\n        ...state,\r\n        modalType: action.modalType,\r\n      };\r\n    case SET_MODAL_DATA:\r\n      const _modalData = { ...state.modalData };\r\n      _modalData[action.dataType] = action.modalData;\r\n      return {\r\n        ...state,\r\n        modalData: _modalData,\r\n      };\r\n    case CLEAR_AXIS_CATEGORY:\r\n      _modalData[action.axis_category] = null;\r\n      return {\r\n        ...state,\r\n        modalData: _modalData,\r\n      };\r\n    case SET_CATEGORY_MODAL_TYPE:\r\n      return {\r\n        ...state,\r\n        categoryModalType: action.categoryModalType,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const getToken = () => {\r\n  if (!!localStorage.getItem(\"token\")) {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n};\r\nconst getRefreshToken = () => {\r\n  if (!!localStorage.getItem(\"refreshToken\")) {\r\n    return localStorage.getItem(\"refreshToken\");\r\n  }\r\n};\r\n\r\nconst setTokens = (res) => {\r\n  return new Promise((resolve, reject) => {\r\n    localStorage.setItem(\"token\", res.data.token);\r\n    localStorage.setItem(\"refreshToken\", res.data.refreshToken);\r\n    resolve(null);\r\n  });\r\n};\r\nexport { getToken, getRefreshToken, setTokens };\r\n","const SET_USER = \"user/SET_USER\";\r\n\r\nexport const setUser = (user) => ({ type: SET_USER, user });\r\n\r\nconst initialState = {\r\n  user: null, // 로그인한 유저의 정보를 담고 있는 state`\r\n};\r\n\r\nexport default function user(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/* \r\n    그리고 프론트엔드 에서는 토큰 외의 유저 정보를 따로 저장하지 않아도 된다. \r\n\r\n    사용자가 로그인을 했을 때, 백엔드에서 해당 유저에 대한 토큰을 생성하고, \r\n    그 때 로그인한 유저에 대한 정보를 전역으로 관리하도록 한다. \r\n\r\n    프론트엔드에서 통신할 때 헤더로 보내는 토큰을 백엔드에서 받아 \r\n    1. 토큰의 유효성 검사 => 유효하지 않거나 만료되었을 경우 401 에러 반환\r\n    2. 로그인한 사용자에 대한 정보를 전역에서 가져와서 사용함. (post요청 등... DB에 무언갈르 기록할 일이 있을 때.)\r\n*/\r\n","import axios from \"axios\";\r\nimport { getToken, getRefreshToken, setTokens } from \"./tokens\";\r\nimport { setUser } from \"../Modules/user\";\r\nimport { setLogout } from \"../Modules/login\";\r\n\r\n/* \r\n    get 요청에서 headers와 params를 동시에 보내려면 아래와 같이 config 객체를 생성한 후 얘를 담아야 함\r\n    https://stackoverflow.com/questions/48261227/use-axios-get-with-params-and-config-together\r\n  */\r\n\r\n/* \r\n  로그인 상태가 아니라면 아래의  통신 함수들은 모두 사용할 일이 없음. \r\n  로그인에 성공하였다면 그 때 토큰을 받아와서 통신 때마다 토큰의 유효성을 검사함. \r\n*/\r\nconst headers = { authorization: `Bearer ${getToken()}` };\r\n\r\nconst refreshHeaders = {\r\n  authorization: `Bearer ${getToken()}`,\r\n  refresh: getRefreshToken(),\r\n};\r\n\r\n/* 크롤데이터 스크리닝 데이터 받아오기 */\r\nconst ScreeningDataFetchApi = (listSize, pageNo, isKeep, searchObj = null) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: {\r\n      listSize: listSize,\r\n      pageNo: pageNo,\r\n      ...searchObj,\r\n    },\r\n  };\r\n  if (isKeep) {\r\n    config.params.keep = 1;\r\n  }\r\n  return axios.get(`/crawl/screening`, config);\r\n};\r\n\r\n/* 크롤데이터 스크리닝에서 정제 단계로 넘기기 */\r\nconst ScreeningDataStageApi = (stageDataList) => {\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  let body = {\r\n    list: stageDataList,\r\n  };\r\n  return axios.put(`/crawl/screening`, body, config);\r\n};\r\n\r\n/* 크롤데이터 스크리닝 단계에서 보류하기 */\r\nconst ScreeningDataKeepApi = (keepDataList) => {\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  let body = {\r\n    list: keepDataList,\r\n  };\r\n  return axios.post(`/crawl/screening`, body, config);\r\n};\r\n/* 크롤데이터 스크리닝 단계에서 버리기 */\r\nconst ScreeningDataDeleteApi = (deleteDataList) => {\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: {\r\n      list: deleteDataList,\r\n    },\r\n  };\r\n  return axios.delete(`/crawl/screening`, config);\r\n};\r\n\r\n/* 크롤데이터 리스트 받아오기 */\r\nconst CrawlDataListFetchApi = (\r\n  statusCode,\r\n  listSize,\r\n  pageNo,\r\n  searchObj = null\r\n) => {\r\n  const params = { listSize: listSize, pageNo: pageNo, ...searchObj };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params,\r\n  };\r\n  return axios.get(`/crawl/list/${statusCode}`, config);\r\n};\r\n\r\n/* 크롤데이터 버리기 */\r\nconst CrawlDataRejectApi = (_id, statusCode) => {\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: {\r\n      statusCode,\r\n    },\r\n  };\r\n  return axios.delete(`/crawl/detail/${_id}`, config);\r\n};\r\n\r\n/* 크롤데이터 보류 하기*/\r\n\r\nconst CrawlDataKeepApi = (_id, statusCode) => {\r\n  let body = {\r\n    statusCode,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.put(`/crawl/detail/${_id}`, body, config);\r\n};\r\n/* 크롤데이터 넘기기*/\r\nconst CrawlDataStageApi = (statusCode, _id, docs) => {\r\n  const body = {\r\n    statusCode,\r\n    _id,\r\n    docs,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  \r\n  return axios.post(`/crawl/detail/${_id}`, body, config);\r\n};\r\n\r\n/* 크롤데이터 상세조회에서 사용하는 통신 함수 */\r\nconst CrawlDataDetailFetchApi = (statusCode, _id) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: {\r\n      statusCode: statusCode,\r\n    },\r\n  };\r\n  return axios.get(`/crawl/detail/${_id}`, config);\r\n};\r\n\r\n/* 본문 이미지 첨부 후 url 받아오는 함수 */\r\nconst documentPastedImageApi = (imageForm) => {\r\n  return axios.post(`/file/docImageAttach/`, imageForm, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\nconst uploadExcelDataApi = (formData) => {\r\n  return axios.post(`/file/uploadExcelData/`, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      authorization: `Bearer ${getToken()}`,\r\n    },\r\n  });\r\n};\r\n\r\nconst documentDetachImageApi = (_id) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: { _id },\r\n  };\r\n  return axios.get(`/file/docImageDetach/`, config);\r\n};\r\n\r\n/* 대륙 리스트 전체 받아오는 함수 */\r\nconst ContinentsListDataFetchApi = () => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.get(`/nextrend/continents`, config);\r\n};\r\n\r\n/* 대륙 별 국가 리스트를 받아오는 함수 */\r\nconst CountrysListDataFetchApi = (continent) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n\r\n  return axios.get(`/nextrend/countrys/${continent}`, config);\r\n};\r\n\r\n/* 주제 분류 리스트를 받아오는 함수 */\r\nconst CategorysListDataFetchApi = (upperCode = null) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: { upperCode },\r\n  };\r\n  return axios.get(`/nextrend/categorys`, config);\r\n};\r\n\r\n/* 주제 분류 리스트를 모두 받아오는 함수 */\r\nconst CategoryOptionFetchApi = (type) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: { type },\r\n  };\r\n  return axios.get(\"/nextrend/categorys/dict\", config);\r\n};\r\n\r\n/* 로그인 할 때 사용하는 통신 함수 */\r\nconst LoginApi = async (userID, userPW) => {\r\n  const body = {\r\n    userID,\r\n    userPW,\r\n  };\r\n\r\n  return axios.post(`/nextrend/login`, body);\r\n};\r\n\r\n/* 일반 token 만료 후 refreshToken 검증 하는 함수 */\r\n\r\nconst RefreshTokenApi = () => {\r\n  const config = {\r\n    headers: refreshHeaders,\r\n  };\r\n  return axios.get(`/nextrend/refresh`, config);\r\n};\r\n\r\n/* user 토큰 인증 및 유저 정보 가져오기 */\r\nconst userAuthApi = () => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.get(`/nextrend/user`, config);\r\n};\r\n\r\n/* 데이터 요청 시 토큰 만료 및 리프레시 토큰 만료 세션 처리 함수 */\r\nconst sessionHandler = (err, dispatch) => {\r\n  /* dispatch 를 사용하기 위해서 인자로 받아옴 */\r\n  return new Promise((resolve, reject) => {\r\n    if (err.response.status === 401) {\r\n      RefreshTokenApi()\r\n        .then((res) => {\r\n          setTokens(res);\r\n          userAuthApi().then((res) => {\r\n            dispatch(\r\n              setUser({\r\n                name: res.data.Name,\r\n                permission: Number(res.data.Category),\r\n              })\r\n            );\r\n            resolve(\"세션유효\");\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 401) {\r\n            dispatch(setLogout(\"EXPIRED_LOGOUT\"));\r\n          }\r\n        });\r\n    }\r\n  });\r\n};\r\n\r\nconst FetchUsersApi = () => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.get(`/nextrend/user/list`, config);\r\n};\r\n\r\nconst getUserInfoApi = (uid) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: {\r\n      uid: uid,\r\n    },\r\n  };\r\n  return axios.get(`/nextrend/user/get`, config);\r\n};\r\n\r\nconst modifyUserInfoApi = (userInfo, uid) => {\r\n  const body = {\r\n    userInfo,\r\n    uid,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.post(`/nextrend/user/modify`, body, config);\r\n};\r\n\r\nconst deleteUserByIdApi = (uid) => {\r\n  const body = {\r\n    uid,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.post(`/nextrend/user/delete`, body, config);\r\n};\r\nconst verifyUserIdApi = (userId, id) => {\r\n  const body = {\r\n    userId,\r\n    id,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.post(`/nextrend/user/verify`, body, config);\r\n};\r\n\r\nconst addUserApi = (userInfo) => {\r\n  const body = {\r\n    userInfo,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.post(`/nextrend/user/add`, body, config);\r\n};\r\n\r\nconst restrictUserApi = (uid, restrict) => {\r\n  const body = {\r\n    uid,\r\n    restrict,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.post(`/nextrend/user/restrict`, body, config);\r\n};\r\n\r\n/* 카테고리 관리 */\r\n\r\n/* 카테고리 데이터 받아오기 */\r\nconst categoryListFetchApi = (type, length, code = null) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: {\r\n      type,\r\n      length,\r\n      code,\r\n    },\r\n  };\r\n  return axios.get(`/nextrend/cat`, config);\r\n};\r\n/* 카테고리 추가하기 */\r\nconst categoryItemAddApi = (type, length, ct_nm, code = null) => {\r\n  const body = {\r\n    type,\r\n    length,\r\n    ct_nm,\r\n    code,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.post(`/nextrend/cat`, body, config);\r\n};\r\n/* 카테고리 수정하기 */\r\nconst categoryItemEditApi = (type, code, ct_nm) => {\r\n  let body = {\r\n    type,\r\n    code,\r\n    ct_nm,\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.put(`/nextrend/cat`, body, config);\r\n};\r\n/* 카테고리 삭제하기 */\r\nconst categoryItemDeleteApi = (type, code) => {\r\n  const config = {\r\n    headers: headers,\r\n    params: {\r\n      type,\r\n      code,\r\n    },\r\n  };\r\n  return axios.delete(`/nextrend/cat`, config);\r\n};\r\n\r\n/* 사용자 맞춤형 메뉴 관련 api */\r\n\r\n/* 특정 카테고리의 하위 카테고리 목록을 받아오는 기능을 함. */\r\nconst axisMenuPreviewFetchApi = (cid) => {\r\n  const config = {\r\n    headers: headers,\r\n    params: { cid },\r\n  };\r\n  return axios.get(`/nextrend/custom/test`, config);\r\n};\r\n/* uid에 해당하는 유저의 설정된 x축, y축 의 하위 메뉴 정보를 받아옴. (사용자화면 출력용?? ) */\r\nconst userAxisMenuFetchApi = (uid) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: { uid },\r\n  };\r\n  return axios.get(`/nextrend/custom/load`, config);\r\n};\r\n/* uid에 해당하는 유저의 메뉴 세팅 정보를 받아옴.*/\r\nconst userAxisMenuSettingFetchApi = (uid) => {\r\n  let config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: { uid },\r\n  };\r\n  return axios.get(`/nextrend/custom`, config);\r\n};\r\nconst userAxisMenuSaveApi = (axisSetObj, saveType) => {\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  if (saveType === \"create\") {\r\n    return axios.post(`/nextrend/custom`, axisSetObj,config);\r\n  }\r\n  if (saveType === \"update\") {\r\n    return axios.put(`/nextrend/custom`, axisSetObj, config);\r\n  }\r\n};\r\n\r\n//data와 method 형태로 변경..\r\nconst MultilingualDictionaryApi = (data = null, method) => {\r\n    const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  if (method === \"GET\") {\r\n    const config = {\r\n      headers: { authorization: `Bearer ${getToken()}` },\r\n    };\r\n    return axios.get(`/nextrend/multilingual`, config);\r\n  }\r\n  if (method === \"POST\") {\r\n    if(\"multi_text\" in data){\r\n      return axios.post(`/nextrend/multilingual`, data, config);\r\n    }\r\n    if(\"list\" in data){\r\n      return axios.post(`/nextrend/multilingual/upload`, data,config);\r\n    }\r\n  }\r\n  if (method === \"PUT\") {\r\n    return axios.put(`/nextrend/multilingual`, data, config);\r\n  }\r\n  if (method === \"DELETE\") {\r\n    const config2 = {\r\n      headers: { authorization: `Bearer ${getToken()}` },\r\n      params: {\r\n        ...data,\r\n      },\r\n    };\r\n    return axios.delete(`/nextrend/multilingual`, config2);\r\n  }\r\n};\r\n\r\nconst HostManagementApi = (data = null, method) => {\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  if (method === \"GET\") {\r\n    if (data !== null) {\r\n      // 검색 쿼리가 있다면?\r\n      config[\"params\"] = { ...data };\r\n    }\r\n    return axios.get(`/nextrend/host`, config);\r\n  }\r\n  if (method === \"POST\") {\r\n    return axios.post(`/nextrend/host`, data, config);\r\n  }\r\n};\r\nconst HostTestApi = (data = null, method)=>{\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  if (method === \"GET\") {\r\n    return axios.get(`/nextrend/host/test`, config);\r\n  }\r\n  if (method === \"POST\") {\r\n    return axios.post(`/nextrend/host/test`, data, config);\r\n  }\r\n}\r\n\r\nconst userCustomCurationDataFetchApi = (axis, archive = null) => {\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n    params: { axis, statusCode: archive ? 6 : 8 },\r\n  };\r\n  return axios.get(`/nextrend/custom/search`, config);\r\n};\r\n\r\nconst curationRequestApi = (_id) => {\r\n  const body = {\r\n    statusCode: 6,\r\n    _id,\r\n    requested: true,\r\n    docs: {},\r\n  };\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  return axios.post(`/crawl/detail/${_id}`, body, config);\r\n};\r\n\r\nconst crawlHostDataFetchApi = (host_id=null) =>{\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` },\r\n  };\r\n  const router = host_id?`/crawl/host/${host_id}`:`/crawl/host`\r\n\r\n  return axios.get(router,config)\r\n}\r\n\r\nconst crawlSumDataFetchApi = ()=>{\r\n  return axios.get(`/crawl/sum`, {headers: { headers }});\r\n}\r\nconst userWorkLogFetchApi = (dataObj)=>{\r\n  const config = {\r\n    headers: { headers },\r\n    params:{...dataObj}\r\n  };\r\n  return axios.get(`/nextrend/board/work`, config);\r\n}\r\nconst curationWorkListFetchApi = (dataObj)=>{\r\n  const config = {\r\n    headers: { headers },\r\n    params:{...dataObj}\r\n  };\r\n  return axios.get(`/nextrend/board/curation`, config)\r\n}\r\n\r\nconst countryWorkListFetchApi = (process)=>{\r\n  const config = {\r\n    headers: { headers },\r\n    params:{status:process}\r\n  };\r\n  return axios.get(`/nextrend/board`,config)\r\n}\r\n\r\nconst workAllLogFetchApi = (process)=>{\r\n  return axios.get(`/nextrend/board/all`,{headers: { headers }})\r\n}\r\n\r\nconst hostSyncApi = ()=>{\r\n  const config = {\r\n    headers: { authorization: `Bearer ${getToken()}` }\r\n  };\r\n  return axios.put(`/nextrend/host/sync/ `,config)\r\n \r\n}\r\nexport {\r\n  LoginApi,\r\n  RefreshTokenApi,\r\n  CrawlDataListFetchApi,\r\n  CrawlDataDetailFetchApi,\r\n  CrawlDataRejectApi,\r\n  CrawlDataStageApi,\r\n  CrawlDataKeepApi,\r\n  ScreeningDataDeleteApi,\r\n  ScreeningDataKeepApi,\r\n  ScreeningDataStageApi,\r\n  ScreeningDataFetchApi,\r\n  ContinentsListDataFetchApi,\r\n  CountrysListDataFetchApi,\r\n  FetchUsersApi,\r\n  getUserInfoApi,\r\n  modifyUserInfoApi,\r\n  deleteUserByIdApi,\r\n  addUserApi,\r\n  CategorysListDataFetchApi,\r\n  CategoryOptionFetchApi,\r\n  userAuthApi,\r\n  sessionHandler,\r\n  documentPastedImageApi,\r\n  documentDetachImageApi,\r\n  uploadExcelDataApi,\r\n  restrictUserApi,\r\n  verifyUserIdApi,\r\n  categoryListFetchApi,\r\n  categoryItemAddApi,\r\n  categoryItemDeleteApi,\r\n  categoryItemEditApi,\r\n  axisMenuPreviewFetchApi,\r\n  userAxisMenuFetchApi,\r\n  userAxisMenuSettingFetchApi,\r\n  userAxisMenuSaveApi,\r\n  MultilingualDictionaryApi,\r\n  HostManagementApi,\r\n  HostTestApi,\r\n  userCustomCurationDataFetchApi,\r\n  curationRequestApi,\r\n  crawlHostDataFetchApi,\r\n  crawlSumDataFetchApi,\r\n  userWorkLogFetchApi,\r\n  curationWorkListFetchApi,\r\n  countryWorkListFetchApi,\r\n  workAllLogFetchApi,\r\n  hostSyncApi,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { sessionHandler, categoryListFetchApi } from \"../../Utils/api\";\r\n\r\nimport styled,{css} from \"styled-components\";\r\n\r\nfunction CategoryModal({ executeModal, closeModal }) {\r\n  const dispatch = useDispatch();\r\n  const categoryModalType = useSelector(\r\n    (state) => state.modal.categoryModalType\r\n  );\r\n  const categoryModalData = useSelector((state)=>state.modal.modalData[categoryModalType])\r\n  const CATEGORY_TYPE_DATA = {\r\n    doc_category: {\r\n      type: 1,\r\n      title: \"정책 분류 설정\",\r\n      subTitle:\r\n        \"정책 분류를 선택해주세요. 항목을 더블클릭하면 추가됩니다. 추가된 정책 분류는 아래의 리스트에서 미리 볼 수 있으며, 추가된 칩을 클릭하면 목록에서 삭제됩니다.\",\r\n    },\r\n    doc_content_type: {\r\n      type: 2,\r\n      title: \"문서 유형 설정\",\r\n      subTitle: \"문서 유형을 선택해주세요.\",\r\n    },\r\n    doc_content_category: {\r\n      type: 2,\r\n      title: \"내용 구분 설정\",\r\n      subTitle: \"내용 구분을 선택해주세요.\",\r\n    },\r\n    doc_country: {\r\n      type: 3,\r\n      title: \"문서 대상 국가 설정\",\r\n      subTitle:\r\n        \"대상 국가를 선택해주세요. 항목을 더블클릭하면 추가됩니다. 추가된 국가는 아래의 리스트에서 미리 볼 수 있으며, 추가된 칩을 클릭하면 목록에서 삭제됩니다.\",\r\n    },\r\n    doc_publish_country: {\r\n      type: 3,\r\n      title: \"문서 발행 국가 설정\",\r\n      subTitle:\r\n        \"발행 국가를 선택해주세요. 항목을 더블클릭하면 추가됩니다. 추가된 국가는 아래의 리스트에서 미리 볼 수 있으며, 추가된 칩을 클릭하면 목록에서 삭제됩니다. 발행 국가는 1개만 선택 가능 합니다.\",\r\n    },\r\n    doc_language: {\r\n      type: 4,\r\n      title: \"언어 설정\",\r\n      subTitle:\r\n        \"언어를 선택해주세요. 항목을 더블클릭하면 추가되며, 하나의 언어만 선택 가능합니다.\",\r\n    },\r\n    doc_topic: {\r\n      type: 5,\r\n      title: \"토픽 분류 설정\",\r\n      subTitle: \"토픽 분류를 선택해주세요..\",\r\n    },\r\n    doc_custom: {\r\n      type: 6,\r\n      title: \"기관맞춤형 분류 설정\",\r\n      subTitle:\r\n        \"기관맞춤형 분류를 설정해주세요. 항목을 더블클릭하면 추가되며, 추가된 칩을 클릭하면 목록에서 삭제됩니다. 설정된 기관맞춤형 분류는 사용자 페이지에 표출할 때 사용됩니다.\",\r\n    },\r\n  };\r\n\r\n  const [categoryList, setCategoryList] = useState([\r\n    { length: 2, list: [] },\r\n    { length: 4, list: [] },\r\n    { length: 6, list: [] },\r\n  ]);\r\n  const [upperCode, setUpperCode] = useState({ 2: null, 4: null, 6: null });\r\n  const [length, setLength] = useState(2); // 대분류 (2) 중분류 (4) 소분류 (6)\r\n\r\n  const [selectedCategoryList, setSelectedCategoryList] = useState([]);\r\n\r\n  const upperCodeHandler = (code, length) => {\r\n    let _upperCode = { ...upperCode };\r\n    _upperCode[length] = code;\r\n    setUpperCode(_upperCode);\r\n  };\r\n  const lengthHandler = (length) => {\r\n    setLength(length);\r\n  };\r\n  const clickHandler = (e, item, code, length) => {\r\n    //console.log(e.detail) // 1 : 원클릭 2: 더블클릭\r\n    if (e.detail === 1) {\r\n      upperCodeHandler(code, length);\r\n      lengthHandler(length + 2);\r\n    } else if (e.detail === 2) {\r\n      addCategory(item);\r\n    }\r\n  };\r\n\r\n  const addCategory = (item) => {\r\n    if (\r\n      selectedCategoryList.some((ele) => {\r\n        return ele.CODE === item.CODE;\r\n      })\r\n    ) {\r\n      alert(\"이미 선택된 항목 입니다.\");\r\n    } else if (\r\n      (categoryModalType === \"doc_language\") || (categoryModalType===\"doc_publish_country\"))\r\n     {\r\n      \r\n      setSelectedCategoryList([item]);\r\n    } else {\r\n      setSelectedCategoryList([...selectedCategoryList, item]);\r\n    }\r\n  };\r\n\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = () => {\r\n    const type = CATEGORY_TYPE_DATA[categoryModalType].type;\r\n      categoryListFetchApi(type, length, upperCode[length - 2])\r\n        .then((res) => {\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            categoryListFetchApi(type, length, upperCode[length - 2]).then(\r\n              (res) => {\r\n                dataCleansing(res.data);\r\n              }\r\n            );\r\n          });\r\n        })\r\n  };\r\n  const saveCategory = () => {\r\n    executeModal(selectedCategoryList, categoryModalType);\r\n    closeModal();\r\n  };\r\n  const deleteCategory = (code) => {\r\n    setSelectedCategoryList(\r\n      selectedCategoryList.filter((item) => item.CODE !== code)\r\n    );\r\n  };\r\n\r\n  const dataCleansing = (rawData) => {\r\n    const index = categoryList.findIndex((i) => i.length == length);\r\n    let _categoryList = [...categoryList];\r\n    _categoryList[index] = { length, list: rawData };\r\n    setCategoryList(_categoryList);\r\n  };\r\n\r\n  const listInit = () => {\r\n    setCategoryList([\r\n      { length: 2, list: [] },\r\n      { length: 4, list: [] },\r\n      { length: 6, list: [] },\r\n    ]);\r\n    setUpperCode({ 2: null, 4: null, 6: null });\r\n    setLength(2);\r\n    setSelectedCategoryList(categoryModalData)\r\n  };\r\n  useEffect(() => {\r\n    listInit();\r\n  }, [categoryModalType]);\r\n  useEffect(() => {\r\n    dataFetch();\r\n  }, [length, upperCode]);\r\n  return (\r\n    <>\r\n      <ModalWrapper>\r\n        <Modalheader>\r\n          <ModalTitle>{CATEGORY_TYPE_DATA[categoryModalType].title}</ModalTitle>\r\n          <ModalSubTitle>\r\n            {CATEGORY_TYPE_DATA[categoryModalType].subTitle}\r\n          </ModalSubTitle>\r\n        </Modalheader>\r\n        <ModalBody>\r\n          <ListContainer>\r\n            <ListHeader>\r\n              <div>대분류</div>\r\n              <div>중분류</div>\r\n              <div>소분류</div>\r\n            </ListHeader>\r\n            <ListBody>\r\n              {categoryList.map((category, index) => {\r\n                return (\r\n                  <ListWrapper>\r\n                    {category.list.length === 0 ? (\r\n                      <ListItem>상위분류를 먼저 선택하세요</ListItem>\r\n                    ) : (\r\n                      category.list.map((item, index2) => {\r\n                        return (\r\n                          <>\r\n                            <ListItem active={upperCode[index+(2+index)] === item.CODE}>\r\n                              <div\r\n                                className=\"title\"\r\n                                value={item.CODE}\r\n                                onClick={(e) => {\r\n                                  clickHandler(\r\n                                    e,\r\n                                    item,\r\n                                    item.CODE,\r\n                                    category.length\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {item.CT_NM}\r\n                              </div>\r\n                            </ListItem>\r\n                          </>\r\n                        );\r\n                      })\r\n                    )}\r\n                  </ListWrapper>\r\n                );\r\n              })}\r\n            </ListBody>\r\n          </ListContainer>\r\n          <CategoryList>\r\n            {selectedCategoryList.map((item) => {\r\n              return (\r\n                <div\r\n                  key={item.IDX}\r\n                  onClick={() => {\r\n                    deleteCategory(item.CODE);\r\n                  }}\r\n                >\r\n                  {item.CT_NM}\r\n                </div>\r\n              );\r\n            })}\r\n          </CategoryList>\r\n        </ModalBody>\r\n        <ModalActions>\r\n          <Button color=\"#435269\" onClick={saveCategory}>\r\n            <p>저장</p>\r\n          </Button>\r\n          <Button color=\"#bfbfbf\" onClick={closeModal}>\r\n            <p>취소</p>\r\n          </Button>\r\n        </ModalActions>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n/* 모달 디자인 관련 컴포넌트 ... 나중에 전역 관리 할 수 있음 좋겠네 ㅠ */\r\nconst ModalWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  border-radius: 0.25rem;\r\n  padding: 1.5rem;\r\n`;\r\nconst Modalheader = styled.div`\r\n  justify-content: left;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ModalTitle = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n  color: rgba(0, 0, 0, 0.7);\r\n`;\r\nconst ModalSubTitle = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 0.5rem;\r\n`;\r\nconst ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ModalActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  cursor: pointer;\r\n  min-width: 5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\n/* 리스트 관리 스타일 */\r\n\r\nconst ListBody = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n`;\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ListHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  background-color: #435269;\r\n  div {\r\n    padding: 0.5rem 0 0.5rem 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst ListWrapper = styled.ul`\r\n  width: 100%;\r\n  list-style-type: none;\r\n  height: 30rem;\r\n  overflow: auto;\r\n  margin: 0;\r\n  padding: 0;\r\n  border: solid 1px #eeeeee;\r\n  overflow-x: hidden;\r\n`;\r\nconst ListItem = styled.li`\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n  min-height: 1.5rem;\r\n  border-bottom: dotted 1px #eeeeee;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: rgba(67,82,105,0.1);\r\n      font-weight:bold;\r\n    `};\r\n`;\r\n\r\nconst CategoryList = styled.div`\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: left;\r\n  border: solid 1px #eee;\r\n  flex-wrap: wrap;\r\n\r\n  div {\r\n    cursor: pointer;\r\n    margin: 0.5rem;\r\n    background-color: #eee;\r\n    padding: 0.5rem;\r\n    border-radius: 1rem;\r\n    font-size: 12px;\r\n  }\r\n`;\r\nexport default CategoryModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport {\r\n  modifyUserInfoApi,\r\n  addUserApi,\r\n  verifyUserIdApi,\r\n} from \"../../Utils/api\";\r\nimport permission from \"../../Data/permission.json\";\r\n\r\nfunction UserInfoModal({ closeModal, executeModal }) {\r\n  const [id, setID] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [idMsg, setIdMsg] = useState(null);\r\n\r\n  const [userPW, setUserPW] = useState(\"\");\r\n  const [userPWCheck, setUserPWCheck] = useState(\"\");\r\n  const [salt, setSalt] = useState(\"\");\r\n  const [Tel, setTel] = useState(\"\");\r\n  const [Position, setPosition] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Category, setCategory] = useState(0); // 최초 설정은 일반사용자 ...\r\n  const [Company, setCompany] = useState(\"\");\r\n\r\n  const [confirm, setConfirm] = useState(false);\r\n\r\n  const userInfo = useSelector(\r\n    (state) => state.modal.modalData.modal_user.user\r\n  );\r\n  const type = useSelector((state) => state.modal.modalData.modal_user.type);\r\n\r\n  const _userUserIDHandler = (e) => {\r\n    setUserID(e.target.value);\r\n  };\r\n  const _userTelHandler = (e) => {\r\n    setTel(e.target.value);\r\n  };\r\n  const _userNameHandler = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const _userUserPWHandler = (e) => {\r\n    setUserPW(e.target.value);\r\n  };\r\n  const _userPWCheckHandler = (e) => {\r\n    setUserPWCheck(e.target.value);\r\n  };\r\n  const _userPositionHandler = (e) => {\r\n    setPosition(e.target.value);\r\n  };\r\n  const _userEmailHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const _userCategoryHandler = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n  const _userCompanyHandler = (e) => {\r\n    setCompany(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    setUserID(userInfo.userID || \"\");\r\n    setID(userInfo.id || \"\");\r\n    setUserPW(userInfo.userPW || \"\");\r\n    setTel(userInfo.Tel || \"\");\r\n    setPosition(userInfo.Position || \"\");\r\n    setName(userInfo.Name || \"\");\r\n    setEmail(userInfo.Email || \"\");\r\n    setCategory(userInfo.Category || 0);\r\n    setSalt(userInfo.salt || \"\");\r\n    setConfirm(userInfo.Confirm || \"\");\r\n    setCompany(userInfo.Company || \"\");\r\n  }, []);\r\n\r\n  const _userIDdVerify = () => {\r\n    if (userID !== \"\") {\r\n      verifyUserIdApi(userID, id)\r\n        .then(() => {\r\n          setIdMsg(\"사용가능한 ID입니다.\");\r\n          setConfirm(true);\r\n        })\r\n        .catch((err) => {\r\n          setIdMsg(\"이미 존재하는 ID입니다.\");\r\n        });\r\n    } else {\r\n      setIdMsg(\"사용할 아이디를 입력해주세요.\");\r\n    }\r\n  };\r\n  const _userPWVerify = () => {\r\n    if (userPW !== \"\" && userPW !== userPWCheck) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const _fieldCheck = () => {\r\n    /* userID, userPW, userPWCheck, Email, Name, category 는 필수필드 */\r\n    /* 필수 필드 조건을 모두 만족하였다면 true를 반환, 그렇지 않다면 false를 반환하도록 함.*/\r\n    return (\r\n      userID !== \"\" &&\r\n      userPW !== \"\" &&\r\n      userPWCheck !== \"\" &&\r\n      Email !== \"\" &&\r\n      Name !== \"\"\r\n    );\r\n  };\r\n\r\n  const _confirmCheck = () => {\r\n    if (confirm) {\r\n      if (_fieldCheck()) {\r\n        if (_userPWVerify()) {\r\n          return true;\r\n        } else {\r\n          alert(\"새 비밀번호와 비밀번호 확인이 일치하지 않습니다.\");\r\n          return false;\r\n        }\r\n      } else {\r\n        alert(\"필수필드를 모두 입력해주세요\");\r\n        return false;\r\n      }\r\n    } else {\r\n      alert(\"사용할 아이디를 확인하여주세요.\");\r\n      return false;\r\n    }\r\n  };\r\n  const _addUser = () => {\r\n    let userInfo = {\r\n      userID,\r\n      userPW,\r\n      Tel,\r\n      Position,\r\n      Name,\r\n      Email,\r\n      Category,\r\n      Company,\r\n      salt,\r\n    };\r\n    if (_confirmCheck()) {\r\n      addUserApi(userInfo)\r\n        .then(() => {\r\n          alert(\"성공적으로 생성되었습니다.\");\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 400) {\r\n            alert(\"추가 중 오류발생\");\r\n          }\r\n        });\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const _modifyUser = () => {\r\n    let userInfo = {\r\n      userID,\r\n      userPW,\r\n      Tel,\r\n      Position,\r\n      Name,\r\n      Email,\r\n      Category,\r\n      Company,\r\n      salt,\r\n    };\r\n    if (_confirmCheck()) {\r\n      modifyUserInfoApi(userInfo,id)\r\n        .then(() => {\r\n          alert(\"성공적으로 수정되었습니다.\");\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 400) {\r\n            alert(\"추가 중 오류발생\");\r\n          }\r\n        });\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalWrapper>\r\n        <Modalheader>\r\n          <ModalTitle>사용자{type ? \" 추가\" : \" 정보 수정\"}</ModalTitle>\r\n          <ModalSubTitle>\r\n            {\"아래 데이터를 입력한 후 확인을 누르면 정보가 반영됩니다.\"}\r\n          </ModalSubTitle>\r\n        </Modalheader>\r\n        <ModalBody>\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle required>아이디</InputTitle>\r\n              <InputField\r\n                value={userID}\r\n                onChange={_userUserIDHandler}\r\n                type=\"text\"\r\n              />\r\n              <Button color=\"#435269\" onClick={_userIDdVerify}>\r\n                중복확인\r\n              </Button>\r\n            </InputFieldWrapper>\r\n            <Message>{idMsg}</Message>\r\n          </InputWrapper>\r\n\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle required>\r\n                {type ? \"비밀번호\" : \"새 비밀번호\"}\r\n              </InputTitle>\r\n              <InputField onChange={_userUserPWHandler} type=\"text\" />\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle required>비밀번호 확인</InputTitle>\r\n              <InputField onChange={_userPWCheckHandler} type=\"text\" />\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle>전화번호</InputTitle>\r\n              <InputField value={Tel} onChange={_userTelHandler} type=\"text\" />\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle>소속</InputTitle>\r\n              <InputField\r\n                value={Company}\r\n                onChange={_userCompanyHandler}\r\n                type=\"text\"\r\n              />\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle>직책</InputTitle>\r\n              <InputField\r\n                value={Position}\r\n                onChange={_userPositionHandler}\r\n                type=\"text\"\r\n              />\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle required>사용자 이름</InputTitle>\r\n              <InputField\r\n                value={Name}\r\n                onChange={_userNameHandler}\r\n                type=\"text\"\r\n              />\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle required>이메일</InputTitle>\r\n              <InputField\r\n                value={Email}\r\n                onChange={_userEmailHandler}\r\n                type=\"text\"\r\n              />\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n\r\n          <InputWrapper>\r\n            <InputFieldWrapper>\r\n              <InputTitle required>사용자 권한</InputTitle>\r\n              <SelectField onChange={_userCategoryHandler} value={Category}>\r\n                {permission.permission.map((item, index) => {\r\n                  return (\r\n                    <option value={item.permission_code} key={index}>\r\n                      {item.permission_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </SelectField>\r\n            </InputFieldWrapper>\r\n          </InputWrapper>\r\n        </ModalBody>\r\n        <ModalActions>\r\n          <Button color=\"#435269\" onClick={type ? _addUser : _modifyUser}>\r\n            저장\r\n          </Button>\r\n        </ModalActions>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  cursor: pointer;\r\n  min-width: 5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n  height: 100%;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: start;\r\n  margin: 0.5rem 0 0.5rem 0;\r\n  width: 60%;\r\n`;\r\nconst InputTitle = styled.div`\r\n  min-width: 7rem;\r\n  ${({ required }) =>\r\n    required &&\r\n    css`\r\n      &:before {\r\n        content: \"*\";\r\n        margin-right: 4px;\r\n        font-size: 16px;\r\n        color: red;\r\n      }\r\n    `};\r\n`;\r\nconst InputFieldWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 2rem;\r\n`;\r\nconst InputField = styled.input`\r\n  padding-left: 0.5rem;\r\n  border-radius: 4px;\r\n  border: solid 1px #d6d6d6;\r\n  width: 100%;\r\n  height: 100%;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst SelectField = styled.select`\r\n  padding-left: 0.5rem;\r\n  border-radius: 4px;\r\n  border: solid 1px #d6d6d6;\r\n  width: 100%;\r\n  height: 100%;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst Message = styled.div`\r\n  color: red;\r\n  text-align: left;\r\n  margin-top: 4px;\r\n`;\r\nconst ModalWrapper = styled.div`\r\n  font-size: 14px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  border-radius: 0.25rem;\r\n  padding: 1.5rem;\r\n`;\r\nconst Modalheader = styled.div`\r\n  justify-content: left;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ModalTitle = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n  color: rgba(0, 0, 0, 0.7);\r\n`;\r\nconst ModalSubTitle = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 0.5rem;\r\n`;\r\nconst ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n  p {\r\n    width: 7rem;\r\n  }\r\n  input {\r\n    height: 1.5rem;\r\n    border: solid 1px #d6d6d6;\r\n    padding: 0.5rem 1rem 0.5rem 1rem;\r\n    border-radius: 10px;\r\n  }\r\n  select {\r\n    height: 2rem;\r\n    border: solid 1px #d6d6d6;\r\n    padding: 0.5rem 1rem 0.5rem 1rem;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\nconst ModalActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport default UserInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { sessionHandler, categoryListFetchApi } from \"../../Utils/api\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nimport styled,{css} from \"styled-components\";\r\n\r\nfunction CategoryModal({ executeModal, closeModal }) {\r\n  const dispatch = useDispatch();\r\n  const [categoryList, setCategoryList] = useState([\r\n    { length: 2, list: [] },\r\n    { length: 4, list: [] },\r\n    { length: 6, list: [] },\r\n  ]);\r\n  const [upperCode, setUpperCode] = useState({ 2: null, 4: null, 6: null });\r\n  const [length, setLength] = useState(2); // 대분류 (2) 중분류 (4) 소분류 (6)\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [currentCategoryType, setCurrentCategoryType] = useState(null);\r\n\r\n  const upperCodeHandler = (code, length) => {\r\n    let _upperCode = { ...upperCode };\r\n    _upperCode[length] = code;\r\n    setUpperCode(_upperCode);\r\n  };\r\n  const lengthHandler = (length) => {\r\n    setLength(length);\r\n  };\r\n  const clickHandler = (e, item, code, length) => {\r\n    //console.log(e.detail) // 1 : 원클릭 2: 더블클릭\r\n    if (e.detail === 1) {\r\n      upperCodeHandler(code, length);\r\n      lengthHandler(length + 2);\r\n    } else if (e.detail === 2) {\r\n      addCategory(item);\r\n    }\r\n  };\r\n\r\n  const addCategory = (item) => {\r\n    if(categoryList.find((item)=>item.length === length).list.length=== 0){\r\n      alert(\"하위항목이 없는 카테고리는 선택할 수 없습니다.\");\r\n      return;\r\n    }\r\n    if (!!selectedCategory && selectedCategory.IDX === item.IDX) {\r\n      alert(\"이미 선택한 항목 입니다.\");\r\n    } else {\r\n      setSelectedCategory(item);\r\n    }\r\n  };\r\n\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = () => {\r\n      categoryListFetchApi(currentCategoryType, length, upperCode[length - 2])\r\n        .then((res) => {\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            categoryListFetchApi(\r\n              currentCategoryType,\r\n              length,\r\n              upperCode[length - 2]\r\n            ).then((res) => {\r\n              dataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n  };\r\n  const saveCategory = () => {\r\n    if (selectedCategory === null) {\r\n      alert(\"값을 선택해주세요.\");\r\n    } else {\r\n      // 1. 모달에서 값 선택 후 redux에 저장\r\n      executeModal(selectedCategory, \"axis_category\");\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const dataCleansing = (rawData) => {\r\n    const index = categoryList.findIndex((i) => i.length == length);\r\n    let _categoryList = [...categoryList];\r\n    _categoryList[index] = { length, list: rawData };\r\n    setCategoryList(_categoryList);\r\n  };\r\n\r\n  const listInit = () => {\r\n    setCategoryList([\r\n      { length: 2, list: [] },\r\n      { length: 4, list: [] },\r\n      { length: 6, list: [] },\r\n    ]);\r\n    setUpperCode({ 2: null, 4: null, 6: null });\r\n    setLength(2);\r\n  };\r\n  useEffect(() => {\r\n    listInit();\r\n  }, [currentCategoryType]);\r\n  useEffect(() => {\r\n    if (!!currentCategoryType) {\r\n      dataFetch();\r\n    }\r\n  }, [currentCategoryType, length, upperCode]);\r\n  return (\r\n    <>\r\n      <ModalWrapper>\r\n        <Modalheader>\r\n          <ModalTitle>맞춤형 메뉴 주제 설정</ModalTitle>\r\n          <ModalSubTitle>\r\n            해당 축에 설정할 메뉴 주제를 선택하세요. X축과 Y축이 동일한 카테고리\r\n            타입을 가질 수 없습니다. 유의해주세요\r\n          </ModalSubTitle>\r\n        </Modalheader>\r\n        <ModalBody>\r\n          <CategoryBtnWrapper>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentCategoryType(1);\r\n              }}\r\n            >\r\n              정책 분류\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentCategoryType(2);\r\n              }}\r\n            >\r\n              유형 분류\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentCategoryType(3);\r\n              }}\r\n            >\r\n              국가\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentCategoryType(4);\r\n              }}\r\n            >\r\n              언어\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentCategoryType(5);\r\n              }}\r\n            >\r\n              토픽 분류\r\n            </button> \r\n            <button\r\n              onClick={() => {\r\n                setCurrentCategoryType(6);\r\n              }}\r\n            >\r\n              기관 맞춤형 분류\r\n            </button>\r\n          </CategoryBtnWrapper>\r\n          {currentCategoryType && (\r\n            <ListContainer>\r\n              <ListHeader>\r\n                <div>대분류</div>\r\n                <div>중분류</div>\r\n                <div>소분류</div>\r\n              </ListHeader>\r\n              <ListBody>\r\n                {categoryList.map((category, index) => {\r\n                  return (\r\n                    <ListWrapper>\r\n                      {category.list.length === 0 ? (\r\n                        <ListItem>상위분류를 먼저 선택하세요</ListItem>\r\n                      ) : (\r\n                        category.list.map((item, index2) => {\r\n                          return (\r\n                            <>\r\n                              <ListItem  active={upperCode[index+(2+index)] === item.CODE}>\r\n                                <div\r\n                                  className=\"title\"\r\n                                  value={item.CODE}\r\n                                  onClick={(e) => {\r\n                                    clickHandler(\r\n                                      e,\r\n                                      item,\r\n                                      item.CODE,\r\n                                      category.length\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {item.CT_NM}\r\n                                </div>\r\n                              </ListItem>\r\n                            </>\r\n                          );\r\n                        })\r\n                      )}\r\n                    </ListWrapper>\r\n                  );\r\n                })}\r\n              </ListBody>\r\n            </ListContainer>\r\n          )}\r\n          {selectedCategory && <div>현재선택됨 : {selectedCategory.CT_NM}</div>}\r\n        </ModalBody>\r\n        <ModalActions>\r\n          <Button color=\"#435269\" onClick={saveCategory}>\r\n            <p>저장</p>\r\n          </Button>\r\n          <Button color=\"#bfbfbf\" onClick={closeModal}>\r\n            <p>취소</p>\r\n          </Button>\r\n        </ModalActions>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n/* 모달 디자인 관련 컴포넌트 ... 나중에 전역 관리 할 수 있음 좋겠네 ㅠ */\r\nconst ModalWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  border-radius: 0.25rem;\r\n  padding: 1.5rem;\r\n`;\r\nconst Modalheader = styled.div`\r\n  justify-content: left;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ModalTitle = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n  color: rgba(0, 0, 0, 0.7);\r\n`;\r\nconst ModalSubTitle = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 0.5rem;\r\n`;\r\nconst ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ModalActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`;\r\nconst CategoryBtnWrapper = styled.div`\r\n  margin-bottom: 1rem;\r\n  button {\r\n    margin-right: 0.5rem;\r\n    min-width: 5rem;\r\n    color: #435269;\r\n    border: solid 1px #435269;\r\n    border-radius: 20px;\r\n    background-color: white;\r\n    padding: 0.5rem 1rem 0.5rem 1rem;\r\n    font-weight: bold;\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: #435269;\r\n      color: white;\r\n      transition: 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  cursor: pointer;\r\n  min-width: 5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\n/* 리스트 관리 스타일 */\r\n\r\nconst ListBody = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n`;\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ListHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  background-color: #435269;\r\n  div {\r\n    padding: 0.5rem 0 0.5rem 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst ListWrapper = styled.ul`\r\n  width: 100%;\r\n  list-style-type: none;\r\n  height: 30rem;\r\n  overflow: auto;\r\n  margin: 0;\r\n  padding: 0;\r\n  border: solid 1px #eeeeee;\r\n  overflow-x: hidden;\r\n`;\r\nconst ListItem = styled.li`\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n  min-height: 1.5rem;\r\n  border-bottom: dotted 1px #eeeeee;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: rgba(67,82,105,0.1);\r\n      font-weight:bold;\r\n    `};\r\n`;\r\n\r\nconst CategoryList = styled.div`\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: left;\r\n  border: solid 1px #eee;\r\n  flex-wrap: wrap;\r\n\r\n  div {\r\n    cursor: pointer;\r\n    margin: 0.5rem;\r\n    background-color: #eee;\r\n    padding: 0.5rem;\r\n    border-radius: 1rem;\r\n    font-size: 12px;\r\n  }\r\n`;\r\nexport default CategoryModal;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nfunction SearchBar({keywordHandler=null, searchAction=null}) {\r\n  return (\r\n    <SearchBarContainer>\r\n      <InputField type=\"text\" placeholder=\"검색\" onChange={keywordHandler}/>\r\n      <OptionWrapper>\r\n        <SearchBtn onClick={searchAction}>\r\n          <AiOutlineSearch size=\"24\" />\r\n        </SearchBtn>\r\n      </OptionWrapper>\r\n    </SearchBarContainer>\r\n  );\r\n}\r\n\r\nconst SearchBarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: solid 1px #435269;\r\n  border-radius:3rem;\r\n  height:3rem;\r\n  color:#595959;\r\n  background-color:white;\r\n`;\r\n\r\nconst OptionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst SearchBtn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  border:none;\r\n  background-color:white;\r\n  &:hover{\r\n      cursor:pointer;\r\n  }\r\n  color:#435269;\r\n\r\n`;\r\nconst InputField = styled.input`\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    height:2rem;\r\n    margin-left:1rem;\r\n    &:focus{\r\n        outline:none;\r\n    }\r\n    border:none;\r\n    &::placeholder{\r\n        color:#435269;\r\n    }\r\n}\r\n`;\r\nconst ExactlySearchOption = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width:6rem;\r\n  input[type=\"checkbox\"] {\r\n  }\r\n  label{\r\n      font-size:12px;\r\n  }\r\n`;\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport { HostManagementApi } from \"../../Utils/api\";\r\nimport { useDispatch } from \"react-redux\";\r\nfunction HostSelectModal({ executeModal, closeModal }) {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [hostList, setHostList] = useState([]); // 검색 결과 호스트 목록\r\n  const [selectHost, setSelectHost] = useState(null); // 선택한 호스트 및 발급기관명\r\n  const saveCategory = () => {\r\n    executeModal(selectHost, \"doc_host\");\r\n    closeModal();\r\n  };\r\n\r\n  const clickHandler = (item) => {\r\n    setSelectHost(item);\r\n  };\r\n  const keywordHandler = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n  const searchHost = () => {\r\n    let searchObj = { like: keyword };\r\n    HostManagementApi(searchObj, \"GET\").then((res) => {\r\n      setHostList(res.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalWrapper>\r\n        <Modalheader>\r\n          <ModalTitle>HOST 검색</ModalTitle>\r\n          <ModalSubTitle>\r\n            HOST 도메인의 일부를 검색하여 결과를 확인하고, 값을\r\n            등록해주세요.\r\n          </ModalSubTitle>\r\n        </Modalheader>\r\n        <ModalBody>\r\n          <SearchBar\r\n            keywordHandler={keywordHandler}\r\n            searchAction={searchHost}\r\n          />\r\n          <SearchResultWrapper>\r\n            {hostList.length === 0 ? (\r\n              <SearchResultRow>검색결과가 없습니다</SearchResultRow>\r\n            ) : (\r\n              hostList.map((item, index) => {\r\n                return (\r\n                  <SearchResultRow\r\n                    key={index}\r\n                    onClick={() => {\r\n                      clickHandler(item);\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      {item.NAME} ({item.HOST})\r\n                    </div>\r\n                  </SearchResultRow>\r\n                );\r\n              })\r\n            )}\r\n          </SearchResultWrapper>\r\n          {selectHost!==null && <div>{selectHost.NAME} ({selectHost.HOST})</div>}\r\n        </ModalBody>\r\n        <ModalActions>\r\n          <Button color=\"#435269\" onClick={saveCategory}>\r\n            <p>저장</p>\r\n          </Button>\r\n          <Button color=\"#bfbfbf\" onClick={closeModal}>\r\n            <p>취소</p>\r\n          </Button>\r\n        </ModalActions>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n/* 모달 디자인 관련 컴포넌트 ... 나중에 전역 관리 할 수 있음 좋겠네 ㅠ */\r\nconst ModalWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  border-radius: 0.25rem;\r\n  padding: 1.5rem;\r\n`;\r\nconst Modalheader = styled.div`\r\n  justify-content: left;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ModalTitle = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n  color: rgba(0, 0, 0, 0.7);\r\n`;\r\nconst ModalSubTitle = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 0.5rem;\r\n`;\r\nconst ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ModalActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  cursor: pointer;\r\n  min-width: 5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\nconst SearchResultWrapper = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  border-radius: 4px;\r\n  margin: 1rem 0 1rem 0;\r\n  height: 30rem;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst SearchResultRow = styled.div`\r\n  padding: 1rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n`;\r\n\r\nexport default HostSelectModal;\r\n","import React from \"react\";\r\n\r\nimport CKEditorInspector from '@ckeditor/ckeditor5-inspector';\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\n\r\n// NOTE: Use the editor from source (not a build)!\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\r\nimport Clipboard from \"@ckeditor/ckeditor5-clipboard/src/clipboard\";\r\n\r\nimport InlineEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\r\nimport Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\r\nimport Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\r\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\r\nimport Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\r\nimport Underline from \"@ckeditor/ckeditor5-basic-styles/src/underline\";\r\nimport Strikethrough from \"@ckeditor/ckeditor5-basic-styles/src/strikethrough\";\r\nimport BlockQuote from \"@ckeditor/ckeditor5-block-quote/src/blockquote\";\r\nimport Link from \"@ckeditor/ckeditor5-link/src/link\";\r\nimport MediaEmbed from \"@ckeditor/ckeditor5-media-embed/src/mediaembed\";\r\nimport PasteFromOffice from \"@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice\";\r\nimport Heading from \"@ckeditor/ckeditor5-heading/src/heading\";\r\nimport Font from \"@ckeditor/ckeditor5-font/src/font\";\r\n\r\nimport Image from \"@ckeditor/ckeditor5-image/src/image\";\r\nimport ImageStyle from \"@ckeditor/ckeditor5-image/src/imagestyle\";\r\nimport ImageToolbar from \"@ckeditor/ckeditor5-image/src/imagetoolbar\";\r\nimport ImageUpload from \"@ckeditor/ckeditor5-image/src/imageupload\";\r\nimport ImageCaption from \"@ckeditor/ckeditor5-image/src/imagecaption\";\r\nimport ImageResize from \"@ckeditor/ckeditor5-image/src/imageresize\";\r\nimport ImageResizeEditing from \"@ckeditor/ckeditor5-image/src/imageresize/imageresizeediting\";\r\nimport ImageResizeHandles from \"@ckeditor/ckeditor5-image/src/imageresize/imageresizehandles\";\r\nimport List from \"@ckeditor/ckeditor5-list/src/list\";\r\nimport Alignment from \"@ckeditor/ckeditor5-alignment/src/alignment\";\r\nimport Table from \"@ckeditor/ckeditor5-table/src/table\";\r\nimport TableToolbar from \"@ckeditor/ckeditor5-table/src/tabletoolbar\";\r\nimport TableProperties from \"@ckeditor/ckeditor5-table/src/tableproperties\";\r\nimport TableCellProperties from \"@ckeditor/ckeditor5-table/src/tablecellproperties\";\r\nimport TextTransformation from \"@ckeditor/ckeditor5-typing/src/texttransformation\";\r\nimport Indent from \"@ckeditor/ckeditor5-indent/src/indent\";\r\nimport IndentBlock from \"@ckeditor/ckeditor5-indent/src/indentblock\";\r\nimport Base64UploadAdapter from \"@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter\";\r\nimport LinkImage from \"@ckeditor/ckeditor5-link/src/linkimage\";\r\nimport HorizontalLine from \"@ckeditor/ckeditor5-horizontal-line/src/horizontalline\";\r\nimport ImageUploadEditing from \"@ckeditor/ckeditor5-image/src/imageupload/imageuploadediting\";\r\nimport UpcastWriter from \"@ckeditor/ckeditor5-engine/src/view/upcastwriter\";\r\nimport styled from \"styled-components\";\r\n\r\nimport FormData from 'form-data';\r\nimport { documentPastedImageApi,documentDetachImageApi } from \"../Utils/api\";\r\n\r\nconst editorConfiguration = {\r\n  plugins: [\r\n    ImageUploadEditing,\r\n    PasteFromOffice,\r\n    Essentials,\r\n    Paragraph,\r\n    Bold,\r\n    Italic,\r\n    Heading,\r\n    Underline,\r\n    Strikethrough,\r\n    BlockQuote,\r\n    Link,\r\n    MediaEmbed,\r\n    Font,\r\n    Image,\r\n    ImageStyle,\r\n    ImageToolbar,\r\n    ImageUpload,\r\n    ImageCaption,\r\n    ImageResize,\r\n    ImageResizeEditing,\r\n    Clipboard,\r\n    ImageResizeHandles,\r\n    LinkImage,\r\n    List,\r\n    Alignment,\r\n    Table,\r\n    TableToolbar,\r\n    TextTransformation,\r\n    TableProperties,\r\n    TableCellProperties,\r\n    Indent,\r\n    IndentBlock,\r\n    Base64UploadAdapter,\r\n    InlineEditor,\r\n    HorizontalLine,\r\n  ],\r\n  toolbar: [\r\n    \"heading\",\r\n    \"|\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strikethrough\",\r\n    \"|\",\r\n    \"fontSize\",\r\n    \"fontColor\",\r\n    \"fontBackgroundColor\",\r\n    \"fontFamily\",\r\n    \"|\",\r\n    \"bulletedList\",\r\n    \"numberedList\",\r\n    \"|\",\r\n    \"alignment:left\",\r\n    \"alignment:right\",\r\n    \"alignment:center\",\r\n    \"alignment:justify\",\r\n    \"|\",\r\n    \"blockQuote\",\r\n    \"HorizontalLine\",\r\n    \"|\",\r\n    \"insertTable\",\r\n    \"imageUpload\",\r\n    \"link\",\r\n    \"mediaEmbed\",\r\n  ],\r\n\r\n  heading: {\r\n    options: [\r\n      {\r\n        model: \"paragraph\",\r\n        view: \"p\",\r\n        title: \"본문\",\r\n        class: \"ck-heading_paragraph\",\r\n      },\r\n      {\r\n        model: \"heading1\",\r\n        view: \"h1\",\r\n        title: \"헤더1\",\r\n        class: \"ck-heading_heading1\",\r\n      },\r\n      {\r\n        model: \"heading2\",\r\n        view: \"h2\",\r\n        title: \"헤더2\",\r\n        class: \"ck-heading_heading2\",\r\n      },\r\n      {\r\n        model: \"heading3\",\r\n        view: \"h3\",\r\n        title: \"헤더3\",\r\n        class: \"ck-heading_heading3\",\r\n      },\r\n    ],\r\n  },\r\n  fontSize: {\r\n    options: [9, 10, 11, 12, 13, 14, 15, 16, 20, 24, 28],\r\n  },\r\n  alignment: {\r\n    options: [\"justify\", \"left\", \"center\", \"right\"],\r\n  },\r\n  table: {\r\n    contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\r\n  },\r\n  image: {\r\n    toolbar: [\r\n      \"imageStyle:alignLeft\",\r\n      \"imageStyle:full\",\r\n      \"imageStyle:alignRight\",\r\n      \"|\",\r\n      \"imageStyle:align-block-left\",\r\n      \"imageStyle:align-block-right\",\r\n      \"imageStyle:block\",\r\n      \"|\",\r\n      \"imageTextAlternative\",\r\n      \"|\",\r\n      \"resizeImage\",\r\n      \"toggleImageCaption\",\r\n      \"linkImage\",\r\n    ],\r\n    resizeUnit: \"%\",\r\n    resizeOptions: [\r\n      {\r\n        name: \"resizeImage:original\",\r\n        value: null,\r\n        icon: \"original\",\r\n      },\r\n      {\r\n        name: \"resizeImage:25\",\r\n        value: \"25\",\r\n        icon: \"small\",\r\n      },\r\n      {\r\n        name: \"resizeImage:50\",\r\n        value: \"50\",\r\n        icon: \"medium\",\r\n      },\r\n      {\r\n        name: \"resizeImage:75\",\r\n        value: \"75\",\r\n        icon: \"large\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  typing: {\r\n    transformations: {\r\n      remove: [\r\n        \"enDash\",\r\n        \"emDash\",\r\n        \"oneHalf\",\r\n        \"oneThird\",\r\n        \"twoThirds\",\r\n        \"oneForth\",\r\n        \"threeQuarters\",\r\n      ],\r\n    },\r\n  },\r\n  placeholder: \"본문을 입력하세요.\",\r\n  fontFamily: {\r\n    options: [\r\n      \"default\",\r\n      \"Ubuntu, Arial, sans-serif\",\r\n      \"Ubuntu Mono, Courier New, Courier, monospace\",\r\n    ],\r\n  },\r\n};\r\nfunction Editor({ _docContentHandler = null, data = null, readOnly = false ,_id=null , height=null}) {\r\n\r\n  /*data props에 나중에 데이터 불러와서 넣으면 됨.\r\n   */\r\n\r\n  const paste = async (event,data,editor)=>{\r\n      if (data.dataTransfer.files.length > 0) {\r\n        // 기존 파이프라인에서 추가된 컨텐츠 삭제\r\n        editor.model.deleteContent(editor.model.document.selection);\r\n\r\n        // file 정보 받아오기\r\n        const file = data.dataTransfer.files[0];\r\n        const images = new FormData();\r\n        images.append('file',file);\r\n        images.append('_id',_id);\r\n\r\n        // 객체 생성\r\n        const result = await documentPastedImageApi(images);\r\n        editor.model.change(writer => {\r\n          const imageElement = writer.createElement('imageInline', {\r\n            src: 'http://'+result.data\r\n          });\r\n          // 현재 에디터의 모델이 선택하고 있는 영역에 새로 만든 컨텐츠를 삽입.\r\n          editor.model.insertContent(imageElement, editor.model.document.selection);\r\n        });\r\n      }\r\n      //이벤트를 종료함으로써 이후 로직을 무시\r\n      event.stop();\r\n\r\n    \r\n    \r\n  }\r\n  return (\r\n    <CustomCKEditor height={height}>\r\n      <CKEditor\r\n        disabled={readOnly}\r\n        editor={ClassicEditor}\r\n        data={data}\r\n        _id={_id}\r\n        config={editorConfiguration}\r\n        onChange={(event, editor) => {\r\n          if (!readOnly) {\r\n            const data = editor.getData();\r\n            _docContentHandler(data);\r\n          }\r\n        }}\r\n        onReady={(editor) => {\r\n          const documentView = editor.editing.view.document\r\n          documentView.on('paste', (event,data)=>{paste(event,data,editor)}, { priority: 'lowest' });\r\n          // priority가 가장 낮기 때문에 기존의 파이프라인 마지막 결과 컨텐츠에 접근할 수 있음.\r\n          documentView.on('drop', (event,data)=>{paste(event,data,editor)}, { priority: 'lowest' });\r\n          const toolbarElement = editor.ui.view.toolbar.element;\r\n          if (readOnly) {\r\n            toolbarElement.style.display = \"none\";\r\n          }\r\n        }}\r\n      />\r\n    </CustomCKEditor>\r\n  );\r\n}\r\n\r\nconst CustomCKEditor = styled.div`\r\n  width: 100%;\r\n  .ck-editor__editable_inline {\r\n    height:${(props) => props.height || \"1000px\"};\r\n    padding: 2rem;\r\n  }\r\n`;\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Editor from \"../Editor\";\r\nfunction CurationWorkContentModal({ closeModal }) {\r\n  const curation_work_content = useSelector(\r\n    (state) => state.modal.modalData.curation_work_content\r\n  );\r\n  return (\r\n    <ModalWrapper>\r\n      <Modalheader>\r\n        <ModalTitle>큐레이션 작업내용 확인</ModalTitle>\r\n        <ModalSubTitle>\r\n          해당 작업자의 큐레이션 작업 내역을 확인하세요.\r\n        </ModalSubTitle>\r\n      </Modalheader>\r\n      <ModalBody>\r\n        <Editor readOnly={true} data={curation_work_content} height={\"400px\"}/>\r\n      </ModalBody>\r\n    </ModalWrapper>\r\n  );\r\n}\r\nexport default CurationWorkContentModal;\r\n\r\n/* 모달 디자인 관련 컴포넌트 ... 나중에 전역 관리 할 수 있음 좋겠네 ㅠ */\r\nconst ModalWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  border-radius: 0.25rem;\r\n  padding: 1.5rem;\r\n`;\r\nconst Modalheader = styled.div`\r\n  justify-content: left;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst ModalTitle = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n  color: rgba(0, 0, 0, 0.7);\r\n`;\r\nconst ModalSubTitle = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 0.5rem;\r\n`;\r\nconst ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ModalActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  cursor: pointer;\r\n  min-width: 5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\nconst SearchResultWrapper = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  border-radius: 4px;\r\n  margin: 1rem 0 1rem 0;\r\n  height: 30rem;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst SearchResultRow = styled.div`\r\n  padding: 1rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { setModal, setModalData } from \"../../Modules/modal\";\r\n/* modal Components */\r\nimport CategoryModal from \"./CategoryModal\";\r\nimport UserInfoModal from \"./UserInfoModal\";\r\nimport AxisCategoryModal from \"./AxisCategoryModal\"\r\nimport HostSelectModal from \"./HostSelectModal\"\r\nimport CurationWorkContentModal from \"./CurationWorkContentModal\"\r\n\r\nexport const MODAL_TYPES = {\r\n  CategoryModal: \"CategoryModal\",\r\n  UserInfoModal: \"UserInfoModal\",\r\n  AxisCategoryModal:\"AxisCategoryModal\",\r\n  HostSelectModal:\"HostSelectModal\",\r\n  CurationWorkContentModal:\"CurationWorkContentModal\",\r\n};\r\n\r\nconst MODAL_COMPONENTS = {\r\n  [MODAL_TYPES.CategoryModal]: CategoryModal,\r\n  [MODAL_TYPES.UserInfoModal]: UserInfoModal,\r\n  [MODAL_TYPES.AxisCategoryModal]:AxisCategoryModal,\r\n  [MODAL_TYPES.HostSelectModal]:HostSelectModal,\r\n  [MODAL_TYPES.CurationWorkContentModal] :CurationWorkContentModal,\r\n};\r\n\r\nfunction GlobalModal() {\r\n  const dispatch = useDispatch();\r\n  /* modalType이 존재한다면 모달창을 렌더링하도록 하며, modalType이 null이면 모달창을 렌더링하지 않는다. */\r\n  /* 이 Modal 컴포넌트는 App.js 에 */\r\n  /* https://mygumi.tistory.com/406 참고코드 */\r\n\r\n  const modalType = useSelector((state) => state.modal.modalType);\r\n\r\n  const closeModal = () => {\r\n    dispatch(setModal(null));\r\n  };\r\n  const executeModal = (modalData, dataType) => {\r\n    dispatch(setModalData(modalData, dataType));\r\n  };\r\n\r\n  const renderComponent = () => {\r\n    if (!modalType) {\r\n      return null;\r\n    }\r\n    const ModalComponent = MODAL_COMPONENTS[modalType];\r\n    return (\r\n      <ModalComponent closeModal={closeModal} executeModal={executeModal} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {modalType ? (\r\n        <>\r\n          <Background onClick={closeModal} />\r\n          <ModalWrapper>{renderComponent()}</ModalWrapper>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Background = styled.div`\r\n  z-index: 10;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: block;\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 11;\r\n  max-width: 960px;\r\n  width: 700px;\r\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2),\r\n    0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\r\n  margin: 2rem;\r\n`;\r\n\r\nexport default GlobalModal;\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {BiArrowToTop} from \"react-icons/bi\"\r\nfunction TopButton(){\r\n    const scrollToTop = ()=>{\r\n        window.scrollTo(0, 0);\r\n    }\r\n    return (<Top onClick={scrollToTop}><BiArrowToTop/></Top>)\r\n}\r\n\r\nconst Top = styled.button`\r\n  display: flex;\r\n  position: fixed;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 3rem;\r\n  width:3rem;\r\n  border: none;\r\n  border-radius: 3rem;\r\n  font-size: 20px;\r\n  background-color: #435269;\r\n  color: white;\r\n  border: solid 1px #d6d6d6;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  z-index: 999;\r\n  right: 0;\r\n  bottom: 0;\r\n  margin: 2rem;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    background-color: #d8dee6;\r\n    color: #435269;\r\n    font-weight: bold;\r\n  }\r\n  & * {\r\n    margin: 4px;\r\n  }\r\n`;\r\nexport default TopButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nfunction Login({\r\n  _inputIDHandler,\r\n  _inputPWHandler,\r\n  loginFunc,\r\n  errorMsg,\r\n  onKeyPress,\r\n}) {\r\n  return (\r\n    <>\r\n      <BackgroundContainer>\r\n        <LoginContainer>\r\n          <LogoContainer>\r\n            <img src={\"../../img/logo4.png\"} />\r\n          </LogoContainer>\r\n          <CustomInput\r\n            type=\"text\"\r\n            onChange={_inputIDHandler}\r\n            placeholder=\"아이디를 입력하세요\"\r\n          />\r\n          <CustomInput\r\n            type=\"password\"\r\n            onChange={_inputPWHandler}\r\n            placeholder=\"패스워드를 입력하세요\"\r\n          />\r\n          {errorMsg !== \"\" ? <ErrorMsg>{errorMsg}</ErrorMsg> : null}\r\n          <LoginButton\r\n            onKeyPress={onKeyPress}\r\n            onClick={loginFunc}\r\n            value=\"로그인\"\r\n            type=\"button\"\r\n          />\r\n          <PageIngoContainer>\r\n            <p>\r\n              <a href=\"http://knlab.co.kr/?act=info.page&pcode=sub3_1\">\r\n                서비스 소개\r\n              </a>\r\n            </p>\r\n            <p>\r\n              powered by <a href=\"http://knlab.co.kr/\">KN Lab.Inc</a>\r\n            </p>\r\n          </PageIngoContainer>\r\n        </LoginContainer>\r\n      </BackgroundContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ErrorMsg = styled.p`\r\n  color: red;\r\n`;\r\nconst PageIngoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n`;\r\nconst BackgroundContainer = styled.div`\r\n  height: 100vh;\r\n  background-image: url(\"../../img/login_back.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst LoginContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 30rem;\r\n  position: relative;\r\n  top: 35vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  margin-bottom: 1rem;\r\n`;\r\nconst CustomInput = styled.input`\r\n  border-radius: 30px;\r\n  min-width: 90%;\r\n  min-height: 3rem;\r\n  border: solid 1px #d6d6d6;\r\n  padding-left: 1rem;\r\n  font-size: 16px;\r\n  margin: 0.5rem 0 0.5rem 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst LoginButton = styled(CustomInput)`\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: #435269;\r\n  color: white;\r\n  font-weight: bold;\r\n  &:hover {\r\n    filter: brightness(150%);\r\n    transition: all 0.5s;\r\n  }\r\n  &:active {\r\n    filter: brightness(50%);\r\n    transition: all 0.2s;\r\n  }\r\n`;\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Login from \"./Login\";\r\nimport { LoginApi } from \"../../../Utils/api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin } from \"../../../Modules/login\";\r\n\r\nfunction LoginContainer() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputID, setInputID] = useState(\"\");\r\n  const [inputPW, setInputPW] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const _inputIDHandler = (e) => {\r\n    setInputID(e.target.value);\r\n  };\r\n  const _inputPWHandler = (e) => {\r\n    setInputPW(e.target.value);\r\n  };\r\n\r\n  const loginFunc = () => {\r\n    if (inputID === \"\") {\r\n      setErrorMsg(\"아이디를 입력해주세요.\");\r\n    } else if (inputPW === \"\") {\r\n      setErrorMsg(\"비밀번호를 입력해주세요.\");\r\n    } else {\r\n      setErrorMsg(\"\");\r\n      LoginApi(inputID, inputPW)\r\n        .then((res) => {\r\n          const _token = res.data.token;\r\n          const _refreshToken = res.data.refreshToken;\r\n          // 토큰 정보를 담는 객체\r\n          const _tokensObj = {\r\n            token: _token,\r\n            refreshToken: _refreshToken,\r\n          };\r\n\r\n          dispatch(setLogin(_tokensObj));\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 401) {\r\n            alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const onKeyPress = (e)=>{\r\n    if(e.key === 'Enter'){\r\n      loginFunc();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Login\r\n        _inputIDHandler={_inputIDHandler}\r\n        _inputPWHandler={_inputPWHandler}\r\n        errorMsg={errorMsg}\r\n        loginFunc={loginFunc}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/* \r\n    로그인한 상태에서만 접근 가능한 페이지다.\r\n    로그인하지 않은 상태로 페이지에 접근하려 하면 로그인 화면으로 리다이렉트 시킨다.\r\n*/\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const isLogin = useSelector((state) => state.login.isLogin);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isLogin ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\nexport default PrivateRoute;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModal, setModalData, setCategoryModalType } from \"../Modules/modal\";\r\nimport { MdSettings} from \"react-icons/md\";\r\nimport Editor from \"./Editor\";\r\n\r\n/* forwordRef는 부모 컴포넌트에서 자식 컴포넌트를 컨트롤하기 위해 */\r\nfunction CrawlDataForm({ docs, type, _id }, ref) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [itemId, setItemId] = useState(\"\");\r\n  /* 현재 보여질 데이터 정보들 */\r\n  /* redux에서 관리되는 데이터 */\r\n  const docCategory = useSelector(\r\n    (state) => state.modal.modalData.doc_category\r\n  ); // dc_code > doc_category 문서의 정책 분류\r\n  const docContentCategory = useSelector(\r\n    (state) => state.modal.modalData.doc_content_category\r\n  ); // doc_content_category 문서 내용의 성격 구분\r\n  const docContentType = useSelector(\r\n    (state) => state.modal.modalData.doc_content_type\r\n  ); // doc_content_type 문서의 유형 분류\r\n  const docCountry = useSelector((state) => state.modal.modalData.doc_country); // dc_country > doc_country 문서 대상 국가\r\n  const docPublishCountry = useSelector(\r\n    (state) => state.modal.modalData.doc_publish_country\r\n  ); // dc_country_pub > doc_publish_country 문서 발행 국가\r\n  const docCustom = useSelector((state) => state.modal.modalData.doc_custom); // doc_custom 기관 맞춤형 카테고리\r\n  const docLanguage = useSelector(\r\n    (state) => state.modal.modalData.doc_language\r\n  ); // dc_lang > doc_language 문서 언어\r\n  const docTopic = useSelector((state) => state.modal.modalData.doc_topic); // doc_topic 문서 내용의 이슈 주제 분류\r\n  const docHost = useSelector((state) => state.modal.modalData.doc_host); // doc_host, doc_publisher host 및 발급기관명 관리\r\n  /* 현재 보여질 데이터 정보들 */\r\n  const [docContent, setDocContent] = useState(\"\"); // dc_content > doc_content 문서 본문\r\n  //const [docHost, setDocHost] = useState(\"\"); // dc_host > doc_host 기관 host 도메인\r\n  const [docKeyword, setDocKeyword] = useState(\"\"); // dc_keyword > doc_keyword 키워드 검색단어. 받아올 떈 배열이나 관리는 문자열로 할 예정. 현재 db 필드에는 doc_keyowrd 로 되어있음..\r\n  const [docKorSummary, setDocKorSummary] = useState(\"\"); // dc_smry_kr > doc_kor_summary 문서 한글 요약\r\n  const [docOriginSummary, setDocOriginSummary] = useState(\"\"); // dc_smry_or > doc_origin_summary 문서 원문 요약\r\n  const [docKorTitle, setDocKorTitle] = useState(\"\"); // dc_title_kr > doc_kor_title 문서 한글 제목\r\n  const [docOriginTitle, setDocOriginTitle] = useState(\"\"); // dc_title_or > doc_kor_origin 문서 원문제목\r\n  const [docMemo, setDocMemo] = useState(\"\"); // doc_memo 관리자 전용 메모\r\n  const [docPage, setDocPage] = useState(\"\"); // dc_page > doc_page 문서 페이지 수\r\n  const [docBiblio, setDocBiblio] = useState(\"\"); // doc_biblio 문서의 서지사항\r\n  const [docPublisher, setDocPublisher] = useState(\"\"); // doc_publisher 문서 발급 기관명\r\n  const [docPublishing, setDocPublishing] = useState(\"\"); // doc_publishing 주문형 조사과제명의 세부과업명\r\n  const [docRecomment, setDocRecomment] = useState(\"\"); // doc_recomment 큐레이션 추천문서\r\n  const [docPublishDate, setDocPublishDate] = useState(\"\"); // doc_publish_date 수집 문서의 발행일\r\n  const [docWriteDate, setDocWriteDate] = useState(\"\"); // doc_write_date 수집 문서의 작성일\r\n  const [docRegisterDate, setDocRegisterDate] = useState(\"\"); // doc_register_date 문서의 서비스 등록일\r\n  const [docCollectDate, setDocCollectDate] = useState(\"\"); // doc_collect_date 문서 수집일 (크롤링 일)\r\n  const [docBundleTitle, setDocBundleTitle] = useState(\"\"); // doc_bundle_title 묶음문서 제목\r\n  const [docBundleUrl, setDocBundleUrl] = useState(\"\"); // doc_bundle_url 묶음문서 링크\r\n  const [docRelateTitle, setDocRelateTitle] = useState(\"\"); // doc_relate_title 연관문서 제목\r\n  const [docRelateUrl, setDocRelateUrl] = useState(\"\"); // doc_relate_url 연관문서 링크\r\n  const [docThumbnail, setDocThumbnail] = useState([]); // dc_cover > doc_thumbnail 문서 표지 파일\r\n  const [docUrl, setDocUrl] = useState(\"\"); // dc_url_loc > doc_url 문서의 파일이 위치한 url\r\n  const [docUrlIntro, setDocUrlIntro] = useState(\"\"); // dc_url_intro > doc_url_intro 문서 파일의 안내 url\r\n  const [docProject, setDocProject] = useState(\"\"); // doc_project 조사과제명\r\n  /* 데이터 관리 및 저장용 변수 */\r\n  const [docThumbnailSelect, setDocThumbnailSelect] = useState(\"\"); // doc_thumbnail 에서 고른 표지\r\n  const [docKeywordString, setDocKeywordString] = useState(\"\"); // doc_keyword를 string으로 관리하기 위한 변수\r\n\r\n  /* 데이터 저장용 변수 */\r\n  const [docCategoryIndexList, setDocCategoryIndexList] = useState([]); // doc_category의 index리스트. 데이터 저장용 변수\r\n  const [docCountryIndexList, setDocCountryIndexList] = useState([]); // doc_country의 index리스트. 데이터 저장용 변수\r\n  const [docPublishCountryIndexList, setDocPublishCountryIndexList] = useState(\r\n    []\r\n  ); // doc_publish_country의 index리스트. 데이터 저장용 변수\r\n  const [docLanguageIndexList, setDocLanguageIndexList] = useState([]); // doc_language의 index리스트. 데이터 저장용 변수\r\n  const [docContentCategoryIndexList, setDocContentCategoryIndexList] =\r\n    useState([]); // doc_content_category의 index리스트. 데이터 저장용 변수\r\n  const [docContentTypeIndexList, setDocContentTypeIndexList] = useState([]); // doc_content_type의 index리스트. 데이터 저장용 변수.\r\n  const [docCustomIndexList, setDocCustomIndexList] = useState([]); // doc_custom의 index리스트. 데이터 저장용 변수\r\n  const [docTopicIndexList, setDocTopicIndexList] = useState([]); // doc_topic 의 index리스트. 데이터 저장용 변수\r\n\r\n  /* 데이터 값 핸들러 */\r\n  const _docKorSummaryHandler = (e) => {\r\n    setDocKorSummary(e.target.value);\r\n  };\r\n  const _docOriginSummaryHandler = (e) => {\r\n    setDocOriginSummary(e.target.value);\r\n  };\r\n  const _docKorTitleHandler = (e) => {\r\n    setDocKorTitle(e.target.value);\r\n  };\r\n  const _docOriginTitleHandler = (e) => {\r\n    setDocOriginTitle(e.target.value);\r\n  };\r\n  const _docMemoHandler = (e) => {\r\n    setDocMemo(e.target.value);\r\n  };\r\n  const _docPageHandler = (e) => {\r\n    setDocPage(e.target.value);\r\n  };\r\n  const _docBiblioHandler = (e) => {\r\n    setDocBiblio(e.target.value);\r\n  };\r\n  const _docPublisherHandler = (e) => {\r\n    setDocPublisher(e.target.value);\r\n  };\r\n  const _docPublishingHandler = (e) => {\r\n    setDocPublishing(e.target.value);\r\n  };\r\n  const _docRecommentHandler = (e) => {\r\n    e.target.value = e.target.value.replace(/[^A-Za-z]/ig, '')\r\n    setDocRecomment(e.target.value);\r\n  };\r\n  const _docPublishDateHandler = (e) => {\r\n    setDocPublishDate(e.target.value);\r\n  };\r\n  const _docWriteDateHandler = (e) => {\r\n    setDocWriteDate(e.target.value);\r\n  };\r\n  const _docRegisterDateHandler = (e) => {\r\n    setDocRegisterDate(e.target.value);\r\n  };\r\n  const _docCollectDateHandler = (e) => {\r\n    setDocCollectDate(e.target.value);\r\n  };\r\n  const _docBundleTitleHandler = (e) => {\r\n    setDocBundleTitle(e.target.value);\r\n  };\r\n  const _docBundleUrlHandler = (e) => {\r\n    setDocBundleUrl(e.target.value);\r\n  };\r\n  const _docRelateTitleHandler = (e) => {\r\n    setDocRelateTitle(e.target.value);\r\n  };\r\n  const _docRelateUrlHandler = (e) => {\r\n    setDocRelateUrl(e.target.value);\r\n  };\r\n  const _docUrlHandler = (e) => {\r\n    setDocUrl(e.target.value);\r\n  };\r\n  const _docUrlIntroHandler = (e) => {\r\n    setDocUrlIntro(e.target.value);\r\n  };\r\n  const _docProjectHandler = (e) => {\r\n    setDocProject(e.target.value);\r\n  };\r\n\r\n  const _docKeywordStringHandler = (e) => {\r\n    setDocKeywordString(e.target.value);\r\n  };\r\n  const _docThumbnailSelectHandler = (e) => {\r\n    setDocThumbnailSelect(e.target.value);\r\n  };\r\n  const _docContentHandler = (data) => {\r\n    setDocContent(data);\r\n  };\r\n\r\n  const _openCategoryModal = (categoryModalType) => {\r\n    dispatch(setModal(\"CategoryModal\"));\r\n    dispatch(setCategoryModalType(categoryModalType));\r\n  };\r\n\r\n  const _openHostSelectModal = () => {\r\n    dispatch(setModal(\"HostSelectModal\"));\r\n  };\r\n  /* 부모 컴포넌트에서 호출할 수 있는 함수.*/\r\n  /* input state 값들을 객체에 담아서 반환함.*/\r\n  useImperativeHandle(ref, () => ({\r\n    getCrawlFormData() {\r\n      let _docs = {};\r\n      _docs[\"doc_content\"] = docContent;\r\n      _docs[\"doc_write_date\"] = docWriteDate;\r\n      _docs[\"doc_publish_date\"] = docPublishDate;\r\n      _docs[\"doc_collect_date\"] = docCollectDate;\r\n      _docs[\"doc_register_date\"] = docRegisterDate;\r\n      _docs[\"doc_keyowrd\"] = docKeyword; // 오타로 필드가 설정되어있음..\r\n      _docs[\"doc_kor_title\"] = docKorTitle;\r\n      _docs[\"doc_origin_title\"] = docOriginTitle;\r\n      _docs[\"doc_kor_summary\"] = docKorSummary;\r\n      _docs[\"doc_origin_summary\"] = docOriginSummary;\r\n      _docs[\"doc_page\"] = docPage;\r\n      _docs[\"doc_host\"] = docHost && docHost.IDX;\r\n      _docs[\"doc_url\"] = docUrl;\r\n      _docs[\"doc_url_intro\"] = docUrlIntro;\r\n      _docs[\"doc_project\"] = docProject;\r\n      _docs[\"doc_biblio\"] = docBiblio;\r\n      _docs[\"doc_memo\"] = docMemo;\r\n      _docs[\"doc_publisher\"] = docPublisher;\r\n      _docs[\"doc_publishing\"] = docPublishing;\r\n      _docs[\"doc_recomment\"] = docRecomment.charCodeAt(0);\r\n      _docs[\"doc_bundle_title\"] = docBundleTitle;\r\n      _docs[\"doc_bundle_url\"] = docBundleUrl;\r\n      _docs[\"doc_relate_title\"] = docRelateTitle;\r\n      _docs[\"doc_relate_url\"] = docRelateUrl;\r\n      _docs[\"doc_keyowrd\"] = docKeyword;\r\n      _docs[\"doc_category\"] = docCategoryIndexList;\r\n      _docs[\"doc_country\"] = docCountryIndexList;\r\n      _docs[\"doc_publish_country\"] = docPublishCountryIndexList;\r\n      _docs[\"doc_language\"] = docLanguageIndexList;\r\n      _docs[\"doc_content_category\"] = docContentCategoryIndexList;\r\n      _docs[\"doc_content_type\"] = docContentTypeIndexList;\r\n      _docs[\"doc_custom\"] = docCustomIndexList;\r\n      _docs[\"doc_topic\"] = docTopicIndexList;\r\n\r\n      _docs[\"doc_thumbnail\"] =\r\n        type !== \"screening\" && type !== \"refine\" && type !== \"register\"\r\n          ? docThumbnailSelect\r\n          : docThumbnail;\r\n\r\n      _docs[\"item_id\"] = itemId;\r\n      return _docs;\r\n    },\r\n  }));\r\n  useEffect(() => {\r\n    /* docs가 빈 객체가 아니라면 */\r\n    if (Object.keys(docs).length !== 0) {\r\n      setItemId(docs.item_id);\r\n      setDocContent(\r\n        docs.doc_content.replaceAll(\"\\n\", \"<p><br datacke-filter='true'></p>\")\r\n      ); // /n 개행 태그를 <br/> 태그로 치환하여 공백을 그대로 출력\r\n      setDocWriteDate(\r\n        docs.doc_write_date && docs.doc_write_date.substring(0, 10)\r\n      ); // date 객체에 넣어주기\r\n      setDocRegisterDate(\r\n        docs.doc_register_date && docs.doc_register_date.substring(0, 10)\r\n      );\r\n      setDocPublishDate(\r\n        docs.doc_publish_date && docs.doc_publish_date.substring(0, 10)\r\n      );\r\n      setDocCollectDate(\r\n        docs.doc_collect_date && docs.doc_collect_date.substring(0, 10)\r\n      );\r\n      setDocKeywordString(docs.doc_keyword && docs.doc_keyword.join(\", \"));\r\n      setDocThumbnail(docs.doc_thumbnail);\r\n      setDocThumbnailSelect(\r\n        type === \"archive\"\r\n          ? docs.doc_thumbnail[0]\r\n          : docs.doc_thumbnail\r\n      );\r\n      setDocOriginSummary(docs.doc_origin_summary);\r\n      setDocKorSummary(docs.doc_kor_summary);\r\n      setDocPublisher(docs.doc_publisher);\r\n      setDocPublishing(docs.doc_publishing);\r\n      setDocPage(docs.doc_page);\r\n      setDocOriginTitle(docs.doc_origin_title);\r\n      setDocKorTitle(docs.doc_kor_title);\r\n      setDocUrl(docs.doc_url);\r\n      setDocUrlIntro(docs.doc_url_intro);\r\n      setDocRelateTitle(docs.doc_relate_title);\r\n      setDocRelateUrl(docs.doc_relate_url);\r\n      setDocBundleTitle(docs.doc_bundle_title);\r\n      setDocBundleUrl(docs.doc_bundle_url);\r\n      setDocRecomment(docs.doc_recomment);\r\n      setDocBiblio(docs.doc_biblio);\r\n      setDocMemo(docs.doc_memo);\r\n\r\n      dispatch(setModalData(docs.doc_category, \"doc_category\"));\r\n      dispatch(setModalData(docs.doc_country, \"doc_country\"));\r\n      dispatch(setModalData(docs.doc_publish_country, \"doc_publish_country\"));\r\n      dispatch(setModalData(docs.doc_language, \"doc_language\"));\r\n      dispatch(setModalData(docs.doc_custom, \"doc_custom\"));\r\n      dispatch(setModalData(docs.doc_topic, \"doc_topic\"));\r\n      dispatch(setModalData(docs.doc_content_category, \"doc_content_category\"));\r\n      dispatch(setModalData(docs.doc_content_type, \"doc_content_type\"));\r\n      dispatch(setModalData(docs.doc_host[0], \"doc_host\"));\r\n    }\r\n  }, [docs]);\r\n\r\n  useEffect(() => {\r\n    /* dcKeywordString 값이 변경되면 dcKeyword 배열도 자동으로 반영되도록.*/\r\n    setDocKeyword(docKeywordString.split(\",\").map((item) => item.trim()));\r\n  }, [docKeywordString]);\r\n\r\n  useEffect(() => {\r\n    const _list = docCountry.map((item) => item.CODE);\r\n    setDocCountryIndexList(_list);\r\n  }, [docCountry]);\r\n\r\n  useEffect(() => {\r\n    const _list = docCategory.map((item) => item.CODE);\r\n    setDocCategoryIndexList(_list);\r\n  }, [docCategory]);\r\n\r\n  useEffect(() => {\r\n    const _list = docPublishCountry.map((item) => item.CODE);\r\n    setDocPublishCountryIndexList(_list);\r\n  }, [docPublishCountry]);\r\n\r\n  useEffect(() => {\r\n    const _list = docLanguage.map((item) => item.CODE);\r\n    setDocLanguageIndexList(_list);\r\n  }, [docLanguage]);\r\n\r\n  useEffect(() => {\r\n    const _list = docContentCategory.map((item) => item.CODE);\r\n    setDocContentCategoryIndexList(_list);\r\n  }, [docContentCategory]);\r\n\r\n  useEffect(() => {\r\n    const _list = docContentType.map((item) => item.CODE);\r\n    setDocContentTypeIndexList(_list);\r\n  }, [docContentType]);\r\n\r\n  useEffect(() => {\r\n    const _list = docCustom.map((item) => item.CODE);\r\n    setDocCustomIndexList(_list);\r\n  }, [docCustom]);\r\n\r\n  useEffect(() => {\r\n    const _list = docTopic.map((item) => item.CODE);\r\n    setDocTopicIndexList(_list);\r\n  }, [docTopic]);\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">원제목</p>\r\n            <input\r\n              value={docOriginTitle}\r\n              onChange={_docOriginTitleHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"원문 제목을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">한글제목</p>\r\n            <input\r\n              value={docKorTitle}\r\n              onChange={_docKorTitleHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"한글 제목을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">원문 요약</p>\r\n            <input\r\n              value={docOriginSummary}\r\n              onChange={_docOriginSummaryHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"원문 요약을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">한글 요약</p>\r\n            <input\r\n              value={docKorSummary}\r\n              onChange={_docKorSummaryHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"한글 요약을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        {type !== \"refine\" && (\r\n          <>\r\n            <CustomFormRow>\r\n              <CustomFormItem>\r\n                <div className=\"title\">\r\n                  <p>문서 정책 분류</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      _openCategoryModal(\"doc_category\");\r\n                    }}\r\n                  >\r\n                    <MdSettings /> 설정\r\n                  </button>\r\n                </div>\r\n                <div className=\"form notInput\">\r\n                  {docCategory.map((item, index) => {\r\n                    return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n                  })}\r\n                </div>\r\n              </CustomFormItem>\r\n              <CustomFormItem>\r\n                <div className=\"title\">\r\n                  <p>문서 토픽 분류</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      _openCategoryModal(\"doc_topic\");\r\n                    }}\r\n                  >\r\n                    <MdSettings /> 설정\r\n                  </button>\r\n                </div>\r\n                <div className=\"form notInput\">\r\n                  {docTopic.map((item, index) => {\r\n                    return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n                  })}\r\n                </div>\r\n              </CustomFormItem>\r\n            </CustomFormRow>\r\n            <CustomFormRow>\r\n              <CustomFormItem>\r\n                <div className=\"title\">\r\n                  <p>문서 대상 국가</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      _openCategoryModal(\"doc_country\");\r\n                    }}\r\n                  >\r\n                    <MdSettings /> 설정\r\n                  </button>\r\n                </div>\r\n                <div className=\"form notInput\">\r\n                  {docCountry.map((item, index) => {\r\n                    return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n                  })}\r\n                </div>\r\n              </CustomFormItem>\r\n              <CustomFormItem>\r\n                <div className=\"title\">\r\n                  <p>문서 발급 국가</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      _openCategoryModal(\"doc_publish_country\");\r\n                    }}\r\n                  >\r\n                    <MdSettings /> 설정\r\n                  </button>\r\n                </div>\r\n                <div className=\"form notInput\">\r\n                  {docPublishCountry.map((item, index) => {\r\n                    return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n                  })}\r\n                </div>\r\n              </CustomFormItem>\r\n            </CustomFormRow>\r\n            <CustomFormRow>\r\n              <CustomFormItem>\r\n                <div className=\"title\">\r\n                  <p>문서 유형 분류</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      _openCategoryModal(\"doc_content_type\");\r\n                    }}\r\n                  >\r\n                    <MdSettings /> 설정\r\n                  </button>\r\n                </div>\r\n                <div className=\"form notInput\">\r\n                  {docContentType.map((item, index) => {\r\n                    return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n                  })}\r\n                </div>\r\n              </CustomFormItem>\r\n              <CustomFormItem>\r\n                <div className=\"title\">\r\n                  <p>문서 내용 구분 분류</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      _openCategoryModal(\"doc_content_category\");\r\n                    }}\r\n                  >\r\n                    <MdSettings /> 설정\r\n                  </button>\r\n                </div>\r\n                <div className=\"form notInput\">\r\n                  {docContentCategory.map((item, index) => {\r\n                    return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n                  })}\r\n                </div>\r\n              </CustomFormItem>\r\n            </CustomFormRow>\r\n            <CustomFormRow>\r\n              <CustomFormItem>\r\n                <div className=\"title\">\r\n                  <p>기관맞춤형 분류</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      _openCategoryModal(\"doc_custom\");\r\n                    }}\r\n                  >\r\n                    <MdSettings /> 설정\r\n                  </button>\r\n                </div>\r\n                <div className=\"form notInput\">\r\n                  {docCustom.map((item, index) => {\r\n                    return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n                  })}\r\n                </div>\r\n              </CustomFormItem>\r\n            </CustomFormRow>\r\n          </>\r\n        )}\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">문서 위치 URL</p>\r\n            <input\r\n              value={docUrl}\r\n              onChange={_docUrlHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"문서 파일이 위치한 URL을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">문서 안내 URL</p>\r\n            <input\r\n              value={docUrlIntro}\r\n              onChange={_docUrlIntroHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"문서 안내 URL을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <div className=\"title\">\r\n              <p>HOST 도메인</p>\r\n              <button\r\n                onClick={() => {\r\n                  _openHostSelectModal();\r\n                }}\r\n              >\r\n                <MdSettings /> 설정\r\n              </button>\r\n            </div>\r\n            <div className=\"form notInput\">{docHost && docHost.HOST}</div>\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">발급기관 명</p>\r\n            <input\r\n              value={docPublisher}\r\n              onChange={_docPublisherHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"발급기관명을 입력해주세요.\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <div className=\"title\">\r\n              <p>언어</p>\r\n              <button\r\n                onClick={() => {\r\n                  _openCategoryModal(\"doc_language\");\r\n                }}\r\n              >\r\n                <MdSettings /> 선택\r\n              </button>\r\n            </div>\r\n            <div className=\"form notInput\">\r\n              {docLanguage.map((item, index) => {\r\n                return <CustomList key={index}>{item.CT_NM}</CustomList>;\r\n              })}\r\n            </div>\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">페이지 수</p>\r\n            <input\r\n              value={docPage}\r\n              onChange={_docPageHandler}\r\n              className=\"form\"\r\n              placeholder=\"문서의 페이지 수를 입력하세요\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">원문 작성일</p>\r\n            <input\r\n              value={docWriteDate}\r\n              onChange={_docWriteDateHandler}\r\n              className=\"form\"\r\n              type=\"date\"\r\n              placeholder=\"원문이 작성된 날짜를 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">원문 발행일</p>\r\n            <input\r\n              value={docPublishDate}\r\n              onChange={_docPublishDateHandler}\r\n              className=\"form\"\r\n              type=\"date\"\r\n              placeholder=\"원문이 발행된 날짜를 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">데이터 수집일</p>\r\n            <input\r\n              value={docCollectDate}\r\n              onChange={_docCollectDateHandler}\r\n              className=\"form\"\r\n              type=\"date\"\r\n              placeholder=\"데이터를 수집한 날짜를 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">서비스 등록일</p>\r\n            <input\r\n              value={docRegisterDate}\r\n              onChange={_docRegisterDateHandler}\r\n              className=\"form\"\r\n              type=\"date\"\r\n              placeholder=\"서비스에 문서를 등록한 날짜를 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">조사과제명</p>\r\n            <input\r\n              value={docProject}\r\n              onChange={_docProjectHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"조사과제명을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">주문형 조사과제명의 세부과업명 </p>\r\n            <input\r\n              value={docPublishing}\r\n              onChange={_docPublishingHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"주문형 조사과제명의 세부과업명을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">연관문서 제목</p>\r\n            <input\r\n              value={docRelateTitle}\r\n              onChange={_docRelateTitleHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"해당 문서와 연관된 문서의 제목을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">연관문서 URL </p>\r\n            <input\r\n              value={docRelateUrl}\r\n              onChange={_docRelateUrlHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"해당 문서와 연관된 문서가 위치한 URL을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">묶음문서 제목</p>\r\n            <input\r\n              value={docBundleTitle}\r\n              onChange={_docBundleTitleHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"묶음 문서의 제목을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">묶음문서 URL </p>\r\n            <input\r\n              value={docBundleUrl}\r\n              onChange={_docBundleUrlHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"묶음 문서가 위치한 URL을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">큐레이션 추천문서</p>\r\n            <input\r\n              className=\"form\"\r\n              type=\"text\"\r\n              value={docRecomment}\r\n              onChange={_docRecommentHandler}\r\n              maxlength = \"1\"\r\n              placeholder=\"큐레이션 추천 등급을 입력하세요. (알파벳 하나만 입력가능)\"\r\n            />\r\n          </CustomFormItem>\r\n          <CustomFormItem>\r\n            <p className=\"title\">서지사항 </p>\r\n            <input\r\n              value={docBiblio}\r\n              onChange={_docBiblioHandler}\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"문서의 서지사항을 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">키워드</p>\r\n            <input\r\n              className=\"form\"\r\n              type=\"text\"\r\n              placeholder=\"문서의 키워드를 입력하세요\"\r\n              value={docKeywordString}\r\n              onChange={_docKeywordStringHandler}\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        <CustomFormRow>\r\n          <CustomFormItem>\r\n            <p className=\"title\">관리자 메모</p>\r\n            <input\r\n              className=\"form\"\r\n              type=\"text\"\r\n              value={docMemo}\r\n              onChange={_docMemoHandler}\r\n              placeholder=\"관리자 전용 메모를 입력하세요\"\r\n            />\r\n          </CustomFormItem>\r\n        </CustomFormRow>\r\n        {(type === \"curation\" || type === \"archive\") && (\r\n          <>\r\n            <CustomFormRow>\r\n              <CustomFormItem>\r\n                <p className=\"title\">내용</p>\r\n                <Editor\r\n                  data={docContent}\r\n                  _docContentHandler={_docContentHandler}\r\n                  _id={_id}\r\n                />\r\n              </CustomFormItem>\r\n            </CustomFormRow>\r\n            <CustomFormRow>\r\n              <CustomFormItem>\r\n                <p className=\"title\">표지 파일</p>\r\n                <ImageContainer>\r\n                  {type === \"curation\" ? (\r\n                    <label>\r\n                      <img className=\"cover\" src={`http://${docThumbnail}`} />\r\n                    </label>\r\n                  ) : (\r\n                    docThumbnail.map((item, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <input\r\n                            type=\"radio\"\r\n                            id={index}\r\n                            value={item}\r\n                            name=\"cover\"\r\n                            onChange={_docThumbnailSelectHandler}\r\n                            checked={docThumbnailSelect === item}\r\n                          />\r\n                          <label htmlFor={index}>\r\n                            <img className=\"cover\" src={`http://${item}`} />\r\n                          </label>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  )}\r\n                </ImageContainer>\r\n              </CustomFormItem>\r\n            </CustomFormRow>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst CustomFormItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 3rem;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  font-size: 12px;\r\n  border-bottom: dotted 1px #ccc;\r\n  .title {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin: 0;\r\n    background-color: rgba(0, 0, 0, 0.02);\r\n    height: 100%;\r\n    min-width: 10rem;\r\n    border-right: solid 2px #d6d6d6;\r\n    button {\r\n      display: inherit;\r\n      align-items: center;\r\n    }\r\n  }\r\n  .form {\r\n    background-color: #eeffdb;\r\n    width: 100%;\r\n    padding-left: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: none;\r\n    height: 100%;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  .textarea {\r\n    padding-top: 2rem;\r\n  }\r\n  .notInput {\r\n    background-color: white;\r\n    height: 5rem;\r\n    justify-content: left;\r\n  }\r\n`;\r\n\r\nconst CustomFormRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n`;\r\n\r\nconst CustomList = styled.div`\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem;\r\n  background-color: #eee;\r\n  min-width: 4rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  margin: 2rem;\r\n  input[type=\"radio\"] {\r\n    margin: 10px;\r\n    display: none;\r\n  }\r\n  input:checked + label > img {\r\n    border: solid 2px #009999;\r\n  }\r\n  input + label > img {\r\n    transition: all 0.2s;\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      border: solid 2px red;\r\n    }\r\n  }\r\n\r\n  label {\r\n    margin-right: 2rem;\r\n    img {\r\n      cursor: pointer;\r\n      height: 20rem;\r\n    }\r\n  }\r\n`;\r\n\r\n/* forwardRef를 사용하여 부모가 자식 컴포넌트 함수를 호출할 수 있도록 함*/\r\nexport default forwardRef(CrawlDataForm);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n/* \r\n    타입에 따라 헤더의 디자인이 다름. \r\n    type - plus .. view.... 걍 아이콘 이미지 불러오려고 ㅠ \r\n*/\r\nfunction FormHeader({ type, title}) {\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <img\r\n          className=\"icon\"\r\n          src={process.env.PUBLIC_URL + `/img/icon_${type}.png`}\r\n        />\r\n        <div className=\"title\">{title}</div>\r\n      </HeaderWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst HeaderWrapper = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: solid 2px #bfbfbf;\r\n  .icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n  .title {\r\n    color: #009999;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport default FormHeader;\r\n","/* 그냥 단순 버튼 컴포넌트임 ... */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Button({ color, children, ...rest }) {\r\n  return (\r\n    <CustomButton color={color} {...rest}>\r\n      {children}\r\n    </CustomButton>\r\n  );\r\n}\r\n\r\nconst CustomButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.3rem 1rem 0.3rem 1rem;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  cursor: pointer;\r\n  min-width: 10rem;\r\n  p {\r\n    margin-left: 0.5rem;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    color: white;\r\n  }\r\n`;\r\nexport default Button;\r\n","import React  from \"react\";\r\nimport { AiOutlineArrowRight, AiOutlineDelete } from \"react-icons/ai\";\r\nimport { FaRegHandPaper } from \"react-icons/fa\";\r\nimport CrawlDataForm from \"../../../Components/CrawlDataForm\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport Button from \"../../../Components/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction CrawlDataDetail({\r\n  crawlDataFormRef,\r\n  docs,\r\n  dataKeep,\r\n  dataReject,\r\n  dataStage,\r\n  cancel,\r\n  STATUS_CODE_SET,\r\n  statusCode,\r\n  type,\r\n  _id\r\n}) {\r\n  return (\r\n    <>\r\n      <FormHeader type=\"plus\" title={STATUS_CODE_SET[statusCode].title} />\r\n      <CrawlDataForm docs={docs} type={type} ref={crawlDataFormRef} _id={_id} />\r\n      <ButtonWrapper>\r\n        <Button color=\"#dc3545\" onClick={dataReject}>\r\n          <AiOutlineDelete color=\"white\" />\r\n          <p>데이터 버리기</p>\r\n        </Button>\r\n        {(type !== \"archive\") && (type !== \"curation\") && (\r\n          <Button color=\"#6DAF44\" onClick={dataKeep}>\r\n            <FaRegHandPaper color=\"white\" />\r\n            <p>작업 보류</p>\r\n          </Button>\r\n        )}\r\n        <Button color=\"#435269\" onClick={dataStage}>\r\n          <AiOutlineArrowRight color=\"white\" />\r\n          <p>작업 완료</p>\r\n        </Button>\r\n        <Button onClick={cancel}>\r\n          <AiOutlineDelete color=\"white\" />\r\n          <p>작업 취소</p>\r\n        </Button>\r\n      </ButtonWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 2rem;\r\n  justify-content: center;\r\n  Button {\r\n    margin: 1rem;\r\n  }\r\n`;\r\n\r\nexport default CrawlDataDetail;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  CrawlDataDetailFetchApi,\r\n  CrawlDataRejectApi,\r\n  CrawlDataStageApi,\r\n  CrawlDataKeepApi,\r\n  sessionHandler,\r\n} from \"../../../Utils/api\";\r\nimport CrawlDataDetail from \"./CrawlDataDetail\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction CrawlDataDetailContainer() {\r\n  /* \r\n    라우터에서 받아온 정보. \r\n    _id - 해당 크롤 데이터의 id\r\n    screeningStatus - 단계 상태 코드\r\n  */\r\n  const { _id, statusCode } = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const crawlDataFormRef = useRef();\r\n  /* \r\n    CrawlDataRefine > CrawlDataForm 에 있는 정보를 가져오기 위해서.\r\n    부모 컴포넌트에서 자식 컴포넌트의 함수를 호출하는 상황임.\r\n    CrawlDataForm 에 ref를.. 걸고자 함. \r\n  */\r\n\r\n  \r\n  const [docs, setDocs] = useState({}); // 폼에 default 값으로 출력할 데이터를 객체로 전달. 관리 편하게\r\n  const [isLeave, setIsLeave] = useState(false); // 페이지 이동 및 나가기 여부\r\n\r\n  const STATUS_CODE_SET = {\r\n    2: {\r\n      type: \"refine\",\r\n      title: \"데이터 정제 진행\",\r\n    },\r\n    3: {\r\n      type: \"refine\",\r\n      title: \"데이터 정제 진행\",\r\n    },\r\n    4: {\r\n      type: \"register\",\r\n      title: \"데이터 등록 진행\",\r\n    },\r\n    5: {\r\n      type: \"register\",\r\n      title: \"데이터 등록 진행\",\r\n    },\r\n    6: {\r\n      type: \"archive\",\r\n      title: \"아카이브 데이터 조회 및 수정\",\r\n    },\r\n    8: {\r\n      type: \"curation\",\r\n      title: \"큐레이션 데이터 조회 및 수정\",\r\n    },\r\n  };\r\n\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = () => {\r\n    trackPromise(\r\n      CrawlDataDetailFetchApi(statusCode, _id)\r\n        .then((res) => {\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            CrawlDataDetailFetchApi(statusCode, _id).then((res) => {\r\n              dataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  /* 데이터 정제하기 */\r\n  const dataCleansing = (rawData) => {\r\n    const _rawStatusDetailData = rawData.docs;\r\n    let _docs = {\r\n      doc_content:\r\n        _rawStatusDetailData.doc_content || \"\",\r\n      doc_collect_date: _rawStatusDetailData.doc_collect_date || \"\",\r\n      doc_write_date: _rawStatusDetailData.doc_write_date || \"\",\r\n      doc_register_date : _rawStatusDetailData.doc_register_date || \"\",\r\n      doc_publish_date : _rawStatusDetailData.doc_publish_date||\"\",\r\n      doc_keyword: _rawStatusDetailData.doc_keyowrd || [], // 오타로 필드가 설정되어있어서 ... \r\n      doc_publisher: _rawStatusDetailData.doc_publisher || \"\",\r\n      doc_thumbnail: _rawStatusDetailData.doc_thumbnail || [],\r\n      doc_country: _rawStatusDetailData.doc_country || [],\r\n      doc_publish_country: _rawStatusDetailData.doc_publish_country || [],\r\n      doc_category: _rawStatusDetailData.doc_category || [],\r\n      doc_content_type:_rawStatusDetailData.doc_content_type||[],\r\n      doc_topic:_rawStatusDetailData.doc_topic || [],\r\n      doc_custom:_rawStatusDetailData.doc_custom || [],\r\n      doc_content_category:_rawStatusDetailData.doc_content_category||[],\r\n      doc_language: _rawStatusDetailData.doc_language || [],\r\n      doc_page: _rawStatusDetailData.doc_page || 0,\r\n      doc_origin_title: _rawStatusDetailData.doc_origin_title || \"\",\r\n      doc_kor_title: _rawStatusDetailData.doc_kor_title || \"\",\r\n      doc_kor_summary: _rawStatusDetailData.doc_kor_summary || \"\",\r\n      doc_origin_summary:_rawStatusDetailData.doc_origin_summary || \"\",\r\n      doc_url: _rawStatusDetailData.doc_url || \"\",\r\n      doc_url_intro:_rawStatusDetailData.doc_url_intro||\"\",\r\n      doc_project:_rawStatusDetailData.doc_project || \"\",\r\n      doc_biblio:_rawStatusDetailData.doc_biblio || \"\",\r\n      doc_relate_title:_rawStatusDetailData.doc_relate_title || \"\",\r\n      doc_relate_url:_rawStatusDetailData.doc_relate_url || \"\",\r\n      doc_bundle_title:_rawStatusDetailData.doc_bundle_title || \"\",\r\n      doc_bundle_url:_rawStatusDetailData.doc_bundle_url || \"\",\r\n      doc_memo:_rawStatusDetailData.doc_memo || \"\",\r\n      doc_host:_rawStatusDetailData.doc_host || \"\",\r\n      doc_recomment:_rawStatusDetailData.doc_recomment ? String.fromCharCode(_rawStatusDetailData.doc_recomment): \"\", // 아스키코드..\r\n      doc_publishing:_rawStatusDetailData.doc_publishing || \"\",\r\n      \r\n\r\n      item_id:_rawStatusDetailData.item_id,\r\n    };\r\n    setDocs(_docs);\r\n  };\r\n\r\n  const dataKeep = () => {\r\n    CrawlDataKeepApi(_id, statusCode).then((res) => {\r\n      alert(\"해당 데이터에 대한 작업이 보류되었습니다.\");\r\n      if (statusCode === \"6\") {\r\n        history.push(`/archive`); // 목록으로 돌아가기\r\n      } else {\r\n        history.push(`/crawl/${statusCode}`); // 목록으로 돌아가기\r\n      }\r\n    });\r\n  };\r\n\r\n  const dataReject = () => {\r\n    if (window.confirm(\"해당 데이터를 버리시겠습니까?\")) {\r\n      CrawlDataRejectApi(_id, statusCode).then((res) => {\r\n        alert(\"해당 데이터가 성공적으로 삭제되었습니다.\");\r\n        if (statusCode === \"6\") {\r\n          history.push(`/archive`); // 목록으로 돌아가기\r\n        } else if (statusCode === \"8\") {\r\n          history.push(`/curation`);\r\n        } else {\r\n          history.push(`/crawl/${statusCode}`); // 목록으로 돌아가기\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const dataStage = () => {\r\n    const _crawlDataFormDocs = crawlDataFormRef.current.getCrawlFormData();\r\n    if(_crawlDataFormDocs.doc_recomment)\r\n    CrawlDataStageApi(statusCode, _id, _crawlDataFormDocs).then((res) => {\r\n      alert(\"해당 데이터가 성공적으로 저장되었습니다.\");\r\n      if (statusCode === \"6\") {\r\n        history.push(`/archive`); // 목록으로 돌아가기\r\n      } else if (statusCode === \"8\") {\r\n        history.push(`/curation`);\r\n      } else {\r\n        history.push(`/crawl/${statusCode}`); // 목록으로 돌아가기\r\n      }\r\n    });\r\n  };\r\n\r\n  const cancel = () => {\r\n    if (\r\n      window.confirm(\"작업을 중단하시겠습니까?\\n변경사항은 저장되지 않습니다.\")\r\n    ) {\r\n      //documentDetachImageApi(itemId);\r\n      history.push(`/crawl/${statusCode}`); // 목록으로 돌아가기\r\n      if (statusCode === \"6\") {\r\n        history.push(`/archive`); // 목록으로 돌아가기\r\n      } else if (statusCode === \"8\") {\r\n        history.push(`/curation`);\r\n      } else {\r\n        history.push(`/crawl/${statusCode}`); // 목록으로 돌아가기\r\n      }\r\n    }\r\n  };\r\n\r\n  /* 이미지 핸들러 */\r\n  const imageDetachHandler = () => {\r\n    // if (confirm(\"변경사항은 저장되지 않습니다. 페이지를 닫겠습니까?\")) {\r\n    //   documentDetachImageApi(itemId).then((res) => {\r\n    //   });\r\n    // }\r\n    // documentDetachImageApi(_id).then((res) => {\r\n    // });\r\n  };\r\n  const leaveSetting = (e) => {\r\n    // 명세에 따라 preventDefault는 호출해야하며, 기본 동작을 방지합니다.\r\n    e.preventDefault();\r\n    // 대표적으로 Chrome에서는 returnValue 설정이 필요합니다.\r\n    e.returnValue = \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", leaveSetting);\r\n    window.addEventListener(\"unload\", imageDetachHandler);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", leaveSetting);\r\n      window.removeEventListener(\"unload\", imageDetachHandler);\r\n      imageDetachHandler();\r\n    }; \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dataFetch();\r\n  }, [_id]);\r\n\r\n  return (\r\n    <>\r\n      <CrawlDataDetail\r\n        docs={docs}\r\n        dataKeep={dataKeep}\r\n        dataReject={dataReject}\r\n        dataStage={dataStage}\r\n        cancel={cancel}\r\n        crawlDataFormRef={crawlDataFormRef}\r\n        STATUS_CODE_SET={STATUS_CODE_SET}\r\n        statusCode={statusCode}\r\n        type={STATUS_CODE_SET[statusCode].type}\r\n        _id={_id}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CrawlDataDetailContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Pagination({ dcCount, listSize, pageNo, setPageNo }) {\r\n  /* \r\n    pageNo 현재 클릭한 페이지의 No\r\n    listSize 한 페이지에 보여질 document의 개수\r\n    dcCount 전체 document의 개수\r\n  */\r\n\r\n  const [pageCount, setPageCount] = useState(0); // 총 보여질 페이지 갯수\r\n  const [pageNoArray, setPageNoArray] = useState([]); // 총 보여질 페이지 갯수 배열\r\n  const [currentPageNoArray, setCurrentPageNoArray] = useState([]); // 현재 보여질 페이지 갯수 배열\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const _handlerPageNo = (e) => {\r\n    const _currentPageNo = Number(e.target.value);\r\n    setPageNo(_currentPageNo);\r\n  };\r\n  const nextCurrentPage = () => {\r\n    const _currentPageNext =\r\n      currentPage + 10 <= pageNoArray.length ? currentPage + 10 : currentPage;\r\n    setCurrentPage(_currentPageNext);\r\n  };\r\n  const prevCurrentPage = () => {\r\n    const _currentPagePrev = currentPage - 10 >= 0 ? currentPage - 10 : 0;\r\n    setCurrentPage(_currentPagePrev);\r\n  };\r\n  const calcCurrentPageNoArray = () => {\r\n    const _start = currentPage <= 1 ? 0 : currentPage;\r\n    const _end = pageNoArray % 10 < 10 ? -1 : _start + 10;\r\n    if (pageNoArray.length <= 1) {\r\n      setCurrentPageNoArray([1]);\r\n    } else {\r\n      const _currentPageNoArray = pageNoArray.slice(_start, _end);\r\n      setCurrentPageNoArray(_currentPageNoArray);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const _pageCount = Math.ceil(dcCount / listSize);\r\n    setPageCount(_pageCount);\r\n  }, [dcCount, listSize]);\r\n\r\n  useEffect(() => {\r\n    const _pageNoArray = Array.from({ length: pageCount }, (v, i) => i + 1);\r\n    setPageNoArray(_pageNoArray);\r\n  }, [pageCount]);\r\n\r\n  useEffect(() => {\r\n    calcCurrentPageNoArray();\r\n  }, [pageNoArray]);\r\n\r\n  useEffect(() => {\r\n    calcCurrentPageNoArray();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (pageNo > pageCount) {\r\n      setPageNo(1);\r\n    }\r\n  }, [listSize, pageCount]);\r\n\r\n  return (\r\n    <>\r\n      <PaginationContainer>\r\n        <NextPrevButton onClick={prevCurrentPage}>{\"<\"}</NextPrevButton>\r\n        {currentPageNoArray.map((item, i) => {\r\n          return (\r\n            <PaginationButton\r\n              key={i}\r\n              value={item}\r\n              onClick={_handlerPageNo}\r\n              active={item === pageNo}\r\n            >\r\n              {item}\r\n            </PaginationButton>\r\n          );\r\n        })}\r\n        <NextPrevButton onClick={nextCurrentPage}>{\">\"}</NextPrevButton>\r\n      </PaginationContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 1rem;\r\n`;\r\nconst PaginationButton = styled.button`\r\n  margin: 0.5rem;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 1rem;\r\n  background-color: ${(props) => (props.active ? \"#113241\" : \"#32677F\")};\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 10px;\r\n  font-size: 14px;\r\n  &:hover {\r\n    filter: brightness(150%);\r\n    transition: all 0.5s;\r\n  }\r\n  &:active {\r\n    filter: brightness(50%);\r\n    transition: all 0.2s;\r\n  }\r\n`;\r\n\r\nconst NextPrevButton = styled(PaginationButton)`\r\n  background-color: #d6d6d6;\r\n  color: black;\r\n`;\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CgFileDocument } from \"react-icons/cg\";\r\n\r\nfunction NoData() {\r\n  return (\r\n    <>\r\n      <SearchResultNotthingContainer>\r\n        <CgFileDocument size=\"100\" color=\"#d6d6d6\" />\r\n        <div className=\"comment\">등록된 데이터가 없습니다.</div>\r\n      </SearchResultNotthingContainer>\r\n    </>\r\n  );\r\n}\r\nexport default NoData;\r\n\r\nconst SearchResultNotthingContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 10rem;\r\n  .comment {\r\n    font-size: 30px;\r\n    color: #d6d6d6;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { MdSettings } from \"react-icons/md\";\r\nimport { AiOutlinePlus, AiOutlineMinus, AiOutlineSearch } from \"react-icons/ai\";\r\nimport { CategoryOptionFetchApi } from \"../Utils/api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModal, setModalData, setCategoryModalType } from \"../Modules/modal\";\r\n\r\nfunction DataFilter({ dataFilterFetch = null, type }) {\r\n  const dispatch = useDispatch();\r\n  const [optionIsOpen, setOptionIsOpen] = useState(false);\r\n\r\n  const [keyword, setKeyword] = useState(\"\"); // keyword\r\n  const [isCrawled, setIsCrawled] = useState(true); // is_crawled 여부\r\n\r\n  // 스크리닝 부터 사용되는 필터들\r\n  const [sort, setSort] = useState(\"\");\r\n  const [dateRange, setDateRange] = useState(\"all\"); // 날짜 범위를 지정할 수 있도록 함. 기본 값은 전체\r\n  /* \r\n    all : 전체 범위\r\n    past_week : 최근 1주\r\n    past_month : 최근 1달\r\n    past_3_month : 최근 3달\r\n    past_6_month : 최근 6달\r\n    past_year : 최근 1년\r\n    past_3_year : 최근 3년\r\n    custom_range : 직접 설정\r\n  */\r\n  const [isDateRange, setIsDateRange] = useState(false); // 날짜 범위를 직접 설정할 것인지 아닌지 ...\r\n  const [sortType, setSortType] = useState(\"doc_collect_date\");\r\n  const [dateGte, setDateGte] = useState(\"2019-01-01\"); // 임시 값. 현재 시각 기준 3년 전으로 설정 할 예정...\r\n  const [dateLte, setDateLte] = useState(\r\n    new Date().toISOString().substring(0, 10)\r\n  );\r\n  const [pageGte, setPageGte] = useState(0);\r\n  const [pageLte, setPageLte] = useState(0);\r\n\r\n  const [screeningHost, setScreeningHost] = useState(\"\"); // 스크리닝 호스트 검색용\r\n  const [screeningLanguage,setScreeningLanguage] = useState(\"\"); // 스크리닝 언어 검색용\r\n\r\n  const docLanguage = useSelector(\r\n    (state) => state.modal.modalData.doc_language\r\n  );\r\n  const docCountry = useSelector((state) => state.modal.modalData.doc_country); // doc_country HOST 국가\r\n  const docPublishCountry = useSelector(\r\n    (state) => state.modal.modalData.doc_publish_country\r\n  );\r\n  const docCategory = useSelector(\r\n    (state) => state.modal.modalData.doc_category\r\n  );\r\n  const docContentType = useSelector(\r\n    (state) => state.modal.modalData.doc_content_type\r\n  );\r\n  const docHost = useSelector((state) => state.modal.modalData.doc_host); // doc_host, doc_publisher host 및 발급기관명 관리\r\n\r\n  const _openCategoryModal = (categoryModalType) => {\r\n    dispatch(setModal(\"CategoryModal\")); //초기화\r\n    dispatch(setModalData([], categoryModalType));\r\n    dispatch(setCategoryModalType(categoryModalType));\r\n  };\r\n\r\n  const _openHostSelectModal = () => {\r\n    dispatch(setModalData(null, \"doc_host\")); // 초기화\r\n    dispatch(setModal(\"HostSelectModal\"));\r\n  };\r\n\r\n  const _screeningHostHandler = (e) => {\r\n    setScreeningHost(e.target.value);\r\n  };\r\n  const _screeningLanguageHandler = (e)=>{\r\n    setScreeningLanguage(e.target.value)\r\n  }\r\n  const _isCrawledHandler = (e) => {\r\n    setIsCrawled(e.target.value);\r\n  };\r\n  const _optionIsOpenHandler = () => {\r\n    setOptionIsOpen(!optionIsOpen);\r\n  };\r\n\r\n  const _sortTypeHandler = (e) => {\r\n    setSortType(e.target.value);\r\n  };\r\n  const _sortHandler = (e) => {\r\n    setSort(e.target.value);\r\n  };\r\n  const _dateGteHandler = (e) => {\r\n    setDateGte(e.target.value);\r\n  };\r\n  const _dateLteHandler = (e) => {\r\n    if (_calcDateDifference(dateLte, e.target.value)) {\r\n      setDateLte(e.target.value);\r\n    } else {\r\n      alert(\"시간 선택이 잘못되었습니다.\");\r\n      setDateLte(new Date().toISOString().substring(0, 10));\r\n    }\r\n  };\r\n  const _pageGteHandler = (e) => {\r\n    setPageGte(e.target.value);\r\n  };\r\n  const _pageLteHandler = (e) => {\r\n    setPageLte(e.target.value);\r\n  };\r\n\r\n  const _dateRangeHandler = (e) => {\r\n    setDateRange(e.target.value);\r\n    setIsDateRange(e.target.value === \"custom_range\" ? true : false); // 직접 설정일 경우 ..\r\n  };\r\n\r\n  const _calcDateDifference = (start, end) => {\r\n    if (Date.parse(new Date()) - Date.parse(end) < 0) {\r\n      // 현재 시점에서 미래의 날짜는 선택할 수 없음\r\n      return false;\r\n    }\r\n    return Date.parse(end) - Date.parse(start) >= 0 || false; // endDate가 startDate보다 과거라면 해당 날짜는 선택할 수 없음.\r\n  };\r\n\r\n  const searchFilter = () => {\r\n    const searchObj = {};\r\n    if (\r\n      docLanguage.length > 1 ||\r\n      docCountry.length > 1 ||\r\n      docCategory.length > 1 ||\r\n      docContentType.length > 1 ||\r\n      docPublishCountry.length > 1\r\n    ) {\r\n      alert(\"검색 필드 하나에 하나의 필터 값만 설정 가능 합니다.\");\r\n      return;\r\n    }\r\n    \r\n    if (docCountry.length !== 0) {\r\n      searchObj[\"doc_country\"] = docCountry.map((item) => item.CODE);\r\n    }\r\n    if (docCategory.length !== 0) {\r\n      searchObj[\"doc_category\"] = docCategory.map((item) => item.CODE);\r\n    }\r\n    if (docContentType.length !== 0) {\r\n      searchObj[\"doc_content_type\"] = docContentType.map((item) => item.CODE);\r\n    }\r\n    if (docPublishCountry.length !== 0) {\r\n      searchObj[\"doc_publish_country\"] = docPublishCountry.map(\r\n        (item) => item.CODE\r\n      );\r\n    }\r\n    if (type === \"screening\") {\r\n      if (screeningHost !== \"\") {\r\n        searchObj[\"host\"] = screeningHost;\r\n      }\r\n      if(screeningLanguage!==\"\"){\r\n        searchObj[\"lang\"] = screeningLanguage;\r\n      }\r\n    } else {\r\n      if (docHost !== null) {\r\n        searchObj[\"doc_host\"] = docHost.IDX;\r\n      }\r\n      if (docLanguage.length !== 0) {\r\n        searchObj[\"doc_language\"] = docLanguage.map((item) => item.CODE);\r\n      }\r\n    }\r\n\r\n    if (type === \"archive\") {\r\n      searchObj[\"is_crawled\"] = isCrawled;\r\n    }\r\n    if (sort !== \"\") {\r\n      searchObj[\"sort\"] = sort;\r\n    }\r\n    searchObj[\"sortType\"] = sortType;\r\n    if (dateRange !== \"all\") {\r\n      searchObj[\"dateGte\"] = dateGte;\r\n      searchObj[\"dateLte\"] = dateLte;\r\n    }\r\n    if (keyword !== \"\") {\r\n      searchObj[\"keyword\"] = keyword;\r\n    }\r\n    if (pageGte !== 0 || pageLte !== 0) {\r\n      searchObj[\"pageLte\"] = pageLte;\r\n      searchObj[\"pageGte\"] = pageGte;\r\n    }\r\n    dataFilterFetch(searchObj);\r\n  };\r\n\r\n  // 설정 완료 해야함\r\n  const searchReset = () => {\r\n    setScreeningHost(\"\");\r\n    setScreeningLanguage(\"\");\r\n    setKeyword(\"\");\r\n    setIsCrawled(true);\r\n    dispatch(setModalData([], \"doc_country\"));\r\n    dispatch(setModalData([], \"doc_publish_country\"));\r\n    dispatch(setModalData([], \"doc_host\"));\r\n    dispatch(setModalData([], \"doc_language\"));\r\n    dispatch(setModalData([], \"doc_content_type\"));\r\n    dispatch(setModalData([], \"doc_category\"));\r\n    dispatch(setModalData(null, \"doc_host\"));\r\n    setDateRange(\"all\");\r\n    setSortType(\"doc_collect_date\");\r\n    setDateGte(\"2019-01-01\");\r\n    setDateLte(new Date().toISOString().substring(0, 10));\r\n    setPageGte(0);\r\n    setPageLte(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const _dateGte = new Date(); // 오늘 날짜\r\n    if (dateRange === \"past_week\") {\r\n      _dateGte.setDate(_dateGte.getDate() - 7); // 7일. 1주일 전\r\n    } else if (dateRange === \"past_month\") {\r\n      _dateGte.setMonth(_dateGte.getMonth() - 1); // 1달 전\r\n    } else if (dateRange === \"past_3_month\") {\r\n      _dateGte.setMonth(_dateGte.getMonth() - 3); // 3달 전\r\n    } else if (dateRange === \"past_6_month\") {\r\n      _dateGte.setMonth(_dateGte.getMonth() - 6); // 6달 전\r\n    } else if (dateRange === \"past_year\") {\r\n      _dateGte.setFullYear(_dateGte.getFullYear() - 1); // 1년 전\r\n    } else if (dateRange === \"past_3_year\") {\r\n      _dateGte.setFullYear(_dateGte.getFullYear() - 3); // 3년 전\r\n    }\r\n    setDateGte(_dateGte.toISOString().substring(0, 10));\r\n  }, [dateRange]);\r\n\r\n  useEffect(()=>{\r\n    if(optionIsOpen){\r\n      searchReset();\r\n    }\r\n  },[optionIsOpen])\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <FilterHeader>\r\n          <Title>\r\n            <FaFilter color=\"#435269\" />\r\n            <p>검색 필터</p>\r\n          </Title>\r\n          <CustomButton onClick={_optionIsOpenHandler}>\r\n            {optionIsOpen ? (\r\n              <>\r\n                <AiOutlineMinus />\r\n                검색 필터 접기\r\n              </>\r\n            ) : (\r\n              <>\r\n                <AiOutlinePlus />\r\n                검색 필터 펼치기\r\n              </>\r\n            )}\r\n          </CustomButton>\r\n        </FilterHeader>\r\n        {optionIsOpen && (\r\n          <>\r\n            <FilterBody>\r\n              <FilterBodyWrapper>\r\n                <OptionContainer>\r\n                  <OptionRow>\r\n                    <OptionCol>\r\n                      <OptionTitle>기간</OptionTitle>\r\n                      <OptionSelect\r\n                        value={sortType}\r\n                        onChange={_sortTypeHandler}\r\n                      >\r\n                        <option value=\"doc_collect_date\">\r\n                          원문 수집일 기준\r\n                        </option>\r\n                        {type !== \"screening\" && (\r\n                          <>\r\n                            <option value=\"doc_write_date\">\r\n                              원문 작성일 기준\r\n                            </option>\r\n                            <option value=\"doc_publish_date\">\r\n                              원문 발행일 기준\r\n                            </option>\r\n                            <option value=\"doc_register_date\">\r\n                              서비스 등록일 기준\r\n                            </option>\r\n                          </>\r\n                        )}\r\n                      </OptionSelect>\r\n\r\n                      <OptionSelect\r\n                        value={dateRange}\r\n                        onChange={_dateRangeHandler}\r\n                      >\r\n                        <option disabled default>\r\n                          기간 설정\r\n                        </option>\r\n                        <option value=\"all\">전체</option>\r\n                        <option value=\"past_week\">최근 1주</option>\r\n                        <option value=\"past_month\">최근 1개월</option>\r\n                        <option value=\"past_3_month\">최근 3개월</option>\r\n                        <option value=\"past_6_month\">최근 6개월</option>\r\n                        <option value=\"past_year\">최근 1년</option>\r\n                        <option value=\"past_3_year\">최근 3년</option>\r\n                        <option value=\"custom_range\">직접 설정</option>\r\n                      </OptionSelect>\r\n                      {isDateRange && (\r\n                        <>\r\n                          <OptionInput\r\n                            onChange={_dateGteHandler}\r\n                            value={dateGte}\r\n                            type=\"date\"\r\n                          ></OptionInput>\r\n                          <OptionInput\r\n                            onChange={_dateLteHandler}\r\n                            value={dateLte}\r\n                            last\r\n                            type=\"date\"\r\n                          ></OptionInput>\r\n                        </>\r\n                      )}\r\n\r\n                      <OptionSelect value={sort} onChange={_sortHandler}>\r\n                        <option value=\"default\">기본</option>\r\n                        <option value=\"desc\">최신순</option>\r\n                        <option value=\"asc\">오래된 순</option>\r\n                      </OptionSelect>\r\n                    </OptionCol>\r\n                  </OptionRow>\r\n                  <OptionRow>\r\n                    <OptionCol>\r\n                      <OptionTitle>페이지 수</OptionTitle>\r\n                      <OptionInput\r\n                        onChange={_pageGteHandler}\r\n                        value={pageGte}\r\n                        type=\"number\"\r\n                        placeholder=\"페이지 수 범위 시작 (ex. 10 )\"\r\n                        min=\"0\"\r\n                      ></OptionInput>\r\n                      <OptionInput\r\n                        onChange={_pageLteHandler}\r\n                        value={pageLte}\r\n                        last\r\n                        type=\"number\"\r\n                        placeholder=\"페이지 수 범위 끝 (ex. 50 )\"\r\n                        min=\"0\"\r\n                      ></OptionInput>\r\n                    </OptionCol>\r\n                    {type === \"archive\" && (\r\n                      <OptionCol>\r\n                        <OptionTitle>데이터 유형</OptionTitle>\r\n                        <OptionSelect\r\n                          value={isCrawled}\r\n                          onChange={_isCrawledHandler}\r\n                        >\r\n                          <option value={null}>전체</option>\r\n                          <option value={true}>크롤데이터</option>\r\n                          <option value={false}>수기데이터</option>\r\n                        </OptionSelect>\r\n                      </OptionCol>\r\n                    )}\r\n                  </OptionRow>\r\n                  <OptionRow>\r\n                    <OptionCol>\r\n                    {type === \"screening\" ? (\r\n                        <>\r\n                          <OptionTitle>언어코드 검색</OptionTitle>\r\n                          <OptionInput\r\n                            onChange={_screeningLanguageHandler}\r\n                            value={screeningLanguage}\r\n                            type=\"text\"\r\n                            placeholder=\"언어 코드 검색 (ex. ko, ja, en ... )\"\r\n                          ></OptionInput>\r\n                        </>\r\n                      ):(<><OptionTitle>언어</OptionTitle>\r\n                      <ActionButton\r\n                        onClick={() => {\r\n                          _openCategoryModal(\"doc_language\");\r\n                        }}\r\n                      >\r\n                        <MdSettings /> 선택\r\n                      </ActionButton>\r\n                      <CustomList>\r\n                        {docLanguage.map((item, index) => {\r\n                          return <Chip key={index}>{item.CT_NM}</Chip>;\r\n                        })}\r\n                      </CustomList></>)}\r\n                      \r\n                    </OptionCol>\r\n                    <OptionCol>\r\n                      {type === \"screening\" ? (\r\n                        <>\r\n                          <OptionTitle>HOST명 검색</OptionTitle>\r\n                          <OptionInput\r\n                            onChange={_screeningHostHandler}\r\n                            value={screeningHost}\r\n                            type=\"text\"\r\n                            placeholder=\"HOST명 검색\"\r\n                          ></OptionInput>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <OptionTitle>HOST 선택</OptionTitle>\r\n                          <ActionButton\r\n                            onClick={() => {\r\n                              _openHostSelectModal();\r\n                            }}\r\n                          >\r\n                            <MdSettings /> 선택\r\n                          </ActionButton>\r\n                          <CustomList>\r\n                            {docHost && <Chip>{docHost.HOST}</Chip>}\r\n                          </CustomList>\r\n                        </>\r\n                      )}\r\n                    </OptionCol>\r\n                  </OptionRow>\r\n\r\n                  {(type === \"archive\" || type === \"curation\") && (\r\n                    <>\r\n                      <OptionRow>\r\n                        <OptionCol>\r\n                          <OptionTitle>유형 분류</OptionTitle>\r\n                          <ActionButton\r\n                            onClick={() => {\r\n                              _openCategoryModal(\"doc_content_category\");\r\n                            }}\r\n                          >\r\n                            <MdSettings /> 선택\r\n                          </ActionButton>\r\n                          <CustomList>\r\n                            {docContentType.map((item, index) => {\r\n                              return <Chip key={index}>{item.CT_NM}</Chip>;\r\n                            })}\r\n                          </CustomList>\r\n                        </OptionCol>\r\n                        <OptionCol>\r\n                          <OptionTitle>정책 분류</OptionTitle>\r\n                          <ActionButton\r\n                            onClick={() => {\r\n                              _openCategoryModal(\"doc_category\");\r\n                            }}\r\n                          >\r\n                            <MdSettings /> 선택\r\n                          </ActionButton>\r\n                          <CustomList>\r\n                            {docCategory.map((item, index) => {\r\n                              return <Chip key={index}>{item.CT_NM}</Chip>;\r\n                            })}\r\n                          </CustomList>\r\n                        </OptionCol>\r\n                      </OptionRow>\r\n                      <OptionRow>\r\n                        <OptionCol>\r\n                          <OptionTitle>대상 국가</OptionTitle>\r\n                          <ActionButton\r\n                            onClick={() => {\r\n                              _openCategoryModal(\"doc_country\");\r\n                            }}\r\n                          >\r\n                            <MdSettings /> 선택\r\n                          </ActionButton>\r\n                          <CustomList>\r\n                            {docCountry.map((item, index) => {\r\n                              return <Chip key={index}>{item.CT_NM}</Chip>;\r\n                            })}\r\n                          </CustomList>\r\n                        </OptionCol>\r\n                        <OptionCol>\r\n                          <OptionTitle>발행 국가</OptionTitle>\r\n                          <ActionButton\r\n                            onClick={() => {\r\n                              _openCategoryModal(\"doc_publish_country\");\r\n                            }}\r\n                          >\r\n                            <MdSettings /> 선택\r\n                          </ActionButton>\r\n                          <CustomList>\r\n                            {docPublishCountry.map((item, index) => {\r\n                              return <Chip key={index}>{item.CT_NM}</Chip>;\r\n                            })}\r\n                          </CustomList>\r\n                        </OptionCol>\r\n                      </OptionRow>\r\n                    </>\r\n                  )}\r\n                </OptionContainer>\r\n                <FilterActions>\r\n                  <CustomButton onClick={searchReset}>초기화</CustomButton>\r\n                  <CustomButton onClick={searchFilter}>\r\n                    <AiOutlineSearch />\r\n                    검색\r\n                  </CustomButton>\r\n                </FilterActions>\r\n              </FilterBodyWrapper>\r\n            </FilterBody>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n// function Cascader({ options, selectedCountry, selectedCategory }) {\r\n//   const [optionIsOpen, setOptionIsOpen] = useState(false);\r\n//   const _optionIsOpenHandler = () => {\r\n//     setOptionIsOpen(!optionIsOpen);\r\n//   };\r\n//   const PrintValue = (e) => {\r\n//     if (selectedCategory) {\r\n//       selectedCategory(e.target.value);\r\n//     }\r\n//     if (selectedCountry) {\r\n//       selectedCountry(e.target.value);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <CascaderWrapper>\r\n//       <CascaderOpenHandler onClick={_optionIsOpenHandler}>\r\n//         분류 선택\r\n//       </CascaderOpenHandler>\r\n//       {optionIsOpen && (\r\n//         <CascaderOptions onClick={PrintValue}>\r\n//           <ul className=\"depth1\">\r\n//             {options.map((item, index) => {\r\n//               return (\r\n//                 <>\r\n//                   <li key={index} value={item.value}>\r\n//                     {item.label}\r\n//                     {item.children.length !== 0 && (\r\n//                       <>\r\n//                         <ul className=\"depth2\">\r\n//                           {item.children.map((item2, index2) => {\r\n//                             return (\r\n//                               <>\r\n//                                 <li key={index2} value={item2.value}>\r\n//                                   {item2.label}\r\n//                                   {item2.children.length !== 0 && (\r\n//                                     <>\r\n//                                       <ul className=\"depth3\">\r\n//                                         {item2.children.map((item3, index3) => {\r\n//                                           return (\r\n//                                             <>\r\n//                                               <li\r\n//                                                 key={index3}\r\n//                                                 value={item3.value}\r\n//                                               >\r\n//                                                 {item3.label}\r\n//                                               </li>\r\n//                                             </>\r\n//                                           );\r\n//                                         })}\r\n//                                       </ul>\r\n//                                     </>\r\n//                                   )}\r\n//                                 </li>\r\n//                               </>\r\n//                             );\r\n//                           })}\r\n//                         </ul>\r\n//                       </>\r\n//                     )}\r\n//                   </li>\r\n//                 </>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </CascaderOptions>\r\n//       )}\r\n//     </CascaderWrapper>\r\n//   );\r\n// }\r\n\r\nconst CascaderOpenHandler = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 30rem;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  border: solid 1px #d6d6d6;\r\n  padding: 0 1rem 0 1rem;\r\n  margin: 0;\r\n`;\r\nconst CascaderWrapper = styled.div`\r\n  font-size: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n  padding-left: 0.5rem;\r\n`;\r\n\r\nconst CascaderOptions = styled.div`\r\n  z-index: 8;\r\n  position: relative;\r\n  ul {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  li {\r\n    background-color: white;\r\n    width: 8rem;\r\n    height: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: solid 1px #d6d6d6;\r\n    word-break: keep-all;\r\n    text-align: center;\r\n  }\r\n  .depth1 ul {\r\n    display: none;\r\n  }\r\n  .depth1 li:hover {\r\n    cursor: pointer;\r\n    & > ul {\r\n      display: block;\r\n    }\r\n  }\r\n  .depth2,\r\n  .depth3 {\r\n    position: absolute;\r\n    left: 8rem;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst FilterHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  p {\r\n    margin: 0 0 0 0.5rem;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    color: #435269;\r\n  }\r\n`;\r\nconst CustomButton = styled.button`\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0.5rem 1rem 0.5rem 1rem;\r\n  color: white;\r\n  background-color: #435269;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n`;\r\nconst FilterBody = styled.div`\r\n  padding: 1rem 0 1rem 0;\r\n`;\r\nconst FilterActions = styled.div`\r\n  padding: 0.5rem 0 0.5rem 0;\r\n  border-top: solid 1px #d6d6d6;\r\n  display: flex;\r\n  justify-content: right;\r\n  button {\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst FilterBodyWrapper = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  margin: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: solid 1px rgba(0, 0, 0, 0.1);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  .delete {\r\n    background-color: #b80000;\r\n    color: white;\r\n  }\r\n`;\r\nconst OptionContainer = styled.div``;\r\n\r\nconst OptionRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: 30px;\r\n  margin: 1rem;\r\n`;\r\n\r\nconst OptionCol = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\nconst OptionTitle = styled.div`\r\n  min-width: 140px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 30px;\r\n  background-color: #d6d6d6;\r\n  font-size: 12px;\r\n  margin-right: 0.5rem;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  text-align: center;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst OptionInput = styled.input`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: solid 1px #d6d6d6;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n  padding-left: 0.5rem;\r\n`;\r\n\r\nconst OptionSelect = styled.select`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: solid 1px #d6d6d6;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n  padding-left: 0.5rem;\r\n`;\r\n\r\n/* antd 와 비슷한 cascader 제작을 위한 inner component*/\r\n\r\nconst CustomList = styled.div`\r\n  display: flex;\r\n`;\r\nconst Chip = styled.div`\r\n  font-size: 12px;\r\n  padding: 0.25rem 0.5rem;\r\n  margin: 0.25rem;\r\n  background-color: #eee;\r\n  min-width: 2rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default DataFilter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { HiOutlineExternalLink } from \"react-icons/hi\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction DataTable({\r\n  tableData,\r\n  type,\r\n  statusCode = null,\r\n  stageDataList = null,\r\n  keepDataList = null,\r\n  deleteDataList = null,\r\n  onChangeCheckedAll = null,\r\n  checkedAll = null,\r\n  onChangeEach = null,\r\n}) {\r\n  return (\r\n    <>\r\n      <TableWrapper>\r\n        <CustomTable>\r\n          <thead>\r\n            <tr>\r\n              {type === \"archive\" && (\r\n                <>\r\n                  <th>구분</th>\r\n                  <th>문서 발행 국가</th>\r\n                  <th>정책 분류</th>\r\n                </>\r\n              )}\r\n              {(type === \"register\" || type===\"archive\") && <th>한글제목</th>}\r\n              {type !== \"screening\" && <th className=\"dc_title_or\">원제목</th>}\r\n              <th>원문 요약</th>\r\n              <th className=\"dc_publisher\">{type===\"screening\"?\"HOST명\":\"발급기관명\"}</th>\r\n              <th className=\"lang\">언어</th>\r\n              <th className=\"dc_dt_collect\">원문수집일</th>\r\n              <th className=\"dc_page\">페이지 수</th>\r\n\r\n              {type === \"screening\" && (\r\n                <>\r\n                  <th>\r\n                    완료\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"stage\"\r\n                      onChange={onChangeCheckedAll}\r\n                      checked={checkedAll === \"stage\"}\r\n                    />\r\n                  </th>\r\n                  <th>\r\n                    보류\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"keep\"\r\n                      onChange={onChangeCheckedAll}\r\n                      checked={checkedAll === \"keep\"}\r\n                    />\r\n                  </th>\r\n                  <th>\r\n                    삭제\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"delete\"\r\n                      onChange={onChangeCheckedAll}\r\n                      checked={checkedAll === \"delete\"}\r\n                    />\r\n                  </th>\r\n                </>\r\n              )}\r\n              <th className=\"dc_url_loc\">원문링크</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData.map((item, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  {type === \"archive\" && (\r\n                    <>\r\n                      <td className=\"is_crawled\">\r\n                        {item.is_crawled ? (\r\n                          <Badge is_crawled>크롤</Badge>\r\n                        ) : (\r\n                          <Badge>수기</Badge>\r\n                        )}\r\n                      </td>\r\n                      <td>{item.doc_country_list}</td>\r\n                      <td>{item.doc_category_list}</td>\r\n                    </>\r\n                        )}\r\n                  {(type === \"register\" || type===\"archive\") && <td>{item.doc_kor_title}</td>}\r\n                  {type !== \"screening\" && (\r\n                    <td>\r\n                      <Link to={`/crawl/${statusCode}/${item._id}`}>\r\n                        {item.doc_origin_title}\r\n                      </Link>\r\n                    </td>\r\n                  )}\r\n                  <td>{item.doc_origin_summary}</td>\r\n                  <td>\r\n                  {type===\"screening\"?item.doc_host:item.doc_publisher }\r\n                  </td>\r\n                  <td>{type===\"screening\"?item.doc_language : item.doc_language.length!==0 && item.doc_language[0].CT_NM }</td>\r\n                  <td>{item.doc_collect_date}</td>\r\n                  <td>{item.doc_page}쪽</td>\r\n                  {type === \"screening\" && (\r\n                    <>\r\n                      <td>\r\n                        <CustomRadio\r\n                          type=\"radio\"\r\n                          name={item.item_id}\r\n                          value={item.item_id}\r\n                          checked={stageDataList.includes(item.item_id)}\r\n                          onChange={(e) => {\r\n                            onChangeEach(e, \"stage\");\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <CustomRadio\r\n                          type=\"radio\"\r\n                          name={item.item_id}\r\n                          value={item.item_id}\r\n                          checked={keepDataList.includes(item.item_id)}\r\n                          onChange={(e) => {\r\n                            onChangeEach(e, \"keep\");\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <CustomRadio\r\n                          type=\"radio\"\r\n                          name={item.item_id}\r\n                          value={item.item_id}\r\n                          checked={deleteDataList.includes(item.item_id)}\r\n                          onChange={(e) => {\r\n                            onChangeEach(e, \"delete\");\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </>\r\n                  )}\r\n\r\n                  <td>\r\n                    <a href={item.doc_url} target=\"_blank\">\r\n                      <HiOutlineExternalLink size=\"24\" color=\"#435269\" />\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </CustomTable>\r\n      </TableWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst TableWrapper = styled.div`\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n  max-height: 65rem;\r\n  overflow: auto;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  border-radius: 4px;\r\n  border: solid 1px #eee;\r\n  font-size: 14px;\r\n  text-align:center;\r\n`;\r\n\r\nconst Badge = styled.div`\r\n  background-color: ${(props) =>\r\n    props.is_crawled ? \"rgba(67,82,105,0.5)\" : \"rgba(112,173,70,0.5)\"};\r\n  font-weight: bold;\r\n  color: ${(props) =>\r\n    props.is_crawled ? \"rgba(67,82,105,1)\" : \"rgba(112,173,70,1)\"};\r\n  border-radius: 2px;\r\n  padding: 2px;\r\n`;\r\nconst CustomTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  .lang {\r\n    width: 4rem;\r\n  }\r\n  .is_crawled {\r\n    width: 3rem;\r\n  }\r\n  .dc_dt_collect {\r\n    width: 6rem;\r\n  }\r\n  .dc_publisher{\r\n    width:10rem;\r\n  }\r\n  .dc_page,\r\n  .dc_url_loc {\r\n    width: 4rem;\r\n  }\r\n\r\n  thead {\r\n    position: sticky;\r\n    top: 0px;\r\n    background-color: #d8dee6;\r\n    color: #323d4d;\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n  }\r\n  tbody tr:nth-child(odd) {\r\n    background-color: #f4f5f8;\r\n  }\r\n  tr {\r\n    height: 2.5rem;\r\n    border-bottom: solid 1px #eee;\r\n  }\r\n  th,\r\n  td {\r\n    word-break:break-all;\r\n    padding-left: 1rem;\r\n    a {\r\n      color: black;\r\n      text-decoration: none;\r\n      &:hover {\r\n        text-decoration: underline;\r\n        color: #435269;\r\n      }\r\n    }\r\n  }\r\n  input[type=\"checkbox\"] {\r\n    width: 20px; /*Desired width*/\r\n    height: 20px; /*Desired height*/\r\n  }\r\n`;\r\n\r\nconst CustomRadio = styled.input`\r\n  font-size: 1em;\r\n  width: 1.25em; /* 너비 설정 */\r\n  height: 1.25em; /* 높이 설정 */\r\n  vertical-align: middle;\r\n`;\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ToggleButton({mode1,mode2,action,checked}) {\r\n  return (\r\n    <ToggleButtonWrapper>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"toggle\"\r\n        id={mode1}\r\n        value={mode1}\r\n        onChange={action}\r\n        checked={!checked}\r\n      />\r\n      <label htmlFor={mode1}>{mode1}</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"toggle\"\r\n        id={mode2}\r\n        value={mode2}\r\n        onChange={action}\r\n        checked={checked}\r\n      />\r\n      <label htmlFor={mode2}>{mode2}</label>\r\n    </ToggleButtonWrapper>\r\n  );\r\n}\r\n\r\nconst ToggleButtonWrapper = styled.div`\r\n  display: inline-block;\r\n  padding: 8px;\r\n  background-color: #eee;\r\n  font-size: 12px;\r\n  border-radius: 0.5rem;\r\n\r\n  label {\r\n    padding: 0.25rem 0.5rem 0.25rem 0.5rem;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"radio\"] {\r\n    display: none;\r\n  }\r\n  input[type=\"radio\"]:checked + label {\r\n    transition: ease-in-out 0.2s;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n    color: white;\r\n    border-radius: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport default ToggleButton","import React from \"react\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport styled from \"styled-components\";\r\nimport Pagination from \"../../../Components/Pagination\";\r\nimport NoData from \"../../../Components/NoData\";\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\r\nimport DataFilter from \"../../../Components/DataFilter\";\r\nimport DataTable from \"../../../Components/DataTable\";\r\nimport ToggleButton from \"../../../Components/ToggleButton\";\r\nfunction CrawlDataScreening({\r\n  dcCount,\r\n  listSize,\r\n  setListSize,\r\n  pageNo,\r\n  setPageNo,\r\n  screeningData,\r\n  stageScreeningData,\r\n  stageDataList,\r\n  keepDataList,\r\n  deleteDataList,\r\n  onChangeCheckedAll,\r\n  checkedAll,\r\n  onChangeEach,\r\n  isKeep,\r\n  onChangeKeepToggle,\r\n  dataFilterFetch,\r\n}) {\r\n  const _listSizeHandler = (e) => {\r\n    setListSize(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <FormHeader type=\"view\" title={\"크롤데이터 스크리닝 진행\"} />\r\n      <Wrapper>\r\n        <RowContainer>\r\n          <Row>\r\n            <div className=\"result-count\">\r\n              <HiOutlineDocumentSearch />\r\n              검색 결과 ({dcCount}건)\r\n            </div>\r\n            <div className=\"action-group\">\r\n              <ToggleButton\r\n                mode1={\"스크리닝 대기\"}\r\n                mode2={\"스크리닝 보류\"}\r\n                action={onChangeKeepToggle}\r\n                checked={isKeep}\r\n              />\r\n              <ScreeningButton\r\n                className=\"screening-button\"\r\n                onClick={stageScreeningData}\r\n              >\r\n                <AiOutlineCheck />\r\n                스크리닝 완료\r\n              </ScreeningButton>\r\n              <select\r\n                className=\"list-size\"\r\n                value={listSize}\r\n                onChange={_listSizeHandler}\r\n              >\r\n                <option disabled>리스트 사이즈</option>\r\n                <option value={2}>2건</option>\r\n                <option value={10}>10건</option>\r\n                <option value={30}>30건</option>\r\n                <option value={50}>50건</option>\r\n                <option value={75}>75건</option>\r\n                <option value={100}>100건</option>\r\n              </select>\r\n            </div>\r\n          </Row>\r\n          <Row>\r\n            <DataFilter type={\"screening\"} dataFilterFetch={dataFilterFetch} />\r\n          </Row>\r\n        </RowContainer>\r\n        {screeningData.length !== 0 ? (\r\n          <>\r\n            <DataTable\r\n              tableData={screeningData}\r\n              stageDataList={stageDataList}\r\n              keepDataList={keepDataList}\r\n              deleteDataList={deleteDataList}\r\n              onChangeCheckedAll={onChangeCheckedAll}\r\n              checkedAll={checkedAll}\r\n              onChangeEach={onChangeEach}\r\n              type=\"screening\"\r\n            />\r\n            <BottomWrap>\r\n              <ScreeningButton\r\n                className=\"screening-button\"\r\n                onClick={stageScreeningData}\r\n              >\r\n                <AiOutlineCheck />\r\n                스크리닝 완료\r\n              </ScreeningButton>\r\n            </BottomWrap>\r\n\r\n            <Pagination\r\n              dcCount={dcCount}\r\n              listSize={listSize}\r\n              pageNo={pageNo}\r\n              setPageNo={setPageNo}\r\n            />\r\n          </>\r\n        ) : (\r\n          <NoData />\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\nconst Wrapper = styled.div`\r\n  margin: 0 5rem 5rem 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst ScreeningButton = styled.button`\r\n  margin: 0 0.5rem 0 0.5rem;\r\n  padding: 0.5rem;\r\n  color: white;\r\n  font-weight: bold;\r\n  background-color: #435269;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\nconst BottomWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: right;\r\n  margin-top: 1rem;\r\n`;\r\nconst RowContainer = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n`;\r\nconst Row = styled.div`\r\n  display: flex;\r\n  color: rgb(59, 59, 59);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n\r\n  .result-count {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    * {\r\n      padding-right: 0.5rem;\r\n    }\r\n  }\r\n  .action-group {\r\n    display: flex;\r\n  }\r\n  .list-size {\r\n    margin: 0 0.5rem 0 0.5rem;\r\n    padding: 0.5rem;\r\n    border: solid 1px #d6d6d6;\r\n  }\r\n`;\r\n\r\nexport default CrawlDataScreening;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ScreeningDataFetchApi,\r\n  ScreeningDataStageApi,\r\n  ScreeningDataDeleteApi,\r\n  ScreeningDataKeepApi,\r\n  sessionHandler,\r\n} from \"../../../Utils/api\";\r\nimport CrawlDataScreening from \"./CrawlDataScreening\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction CrawlDataScreeningContainer() {\r\n  const dispatch = useDispatch();\r\n\r\n  /* 현재 보여질 데이터 */\r\n  const [screeningData, setScreeningData] = useState([]);\r\n  const [searchObj, setSearchObj] = useState(null); // 검색 옵션\r\n\r\n  /* 페이지네이션 */\r\n  const [dcCount, setDcCount] = useState(0); // document 총 개수\r\n  const [pageNo, setPageNo] = useState(1); // 현재 활성화 된 페이지 번호\r\n  const [listSize, setListSize] = useState(50); // 한 페이지에 나타낼 document 개수\r\n\r\n  /* 완료, 보류, 삭제 전체선택 구현하기 */\r\n\r\n  const [isKeep, setIsKeep] = useState(false);\r\n  const [itemList, setItemList] = useState([]); // {id,status} 객체 리스트로 구성되어 있음.\r\n  const [checkedAll, setCheckedAll] = useState(\"delete\"); // 전체선택 기본값은 delete\r\n  const [stageDataList, setStageDataList] = useState([]);\r\n  const [keepDataList, setKeepDataList] = useState([]);\r\n  const [deleteDataList, setDeleteDataList] = useState([]); // 기본 값은 delete\r\n\r\n  const onChangeKeepToggle = () => {\r\n    setIsKeep(!isKeep);\r\n  };\r\n  const onChangeCheckedAll = (e) => {\r\n    if (e.target.checked) {\r\n      setCheckedAll(e.target.value);\r\n    }\r\n  };\r\n\r\n  const onChangeEach = (e, type) => {\r\n    const _item_id = e.target.value;\r\n    const _index = itemList.findIndex((item) => item.item_id === Number(_item_id));\r\n    const _newItemList = [...itemList];\r\n    _newItemList[_index].status = type;\r\n    setItemList(_newItemList);\r\n  };\r\n\r\n  const dataFilterFetch = (searchObj) => {\r\n    setSearchObj(searchObj);\r\n  };\r\n\r\n  /* 전체선택 */\r\n\r\n  useEffect(() => {\r\n    const _newItemList = [...itemList];\r\n    _newItemList.map((item, index) => {\r\n      item.status = checkedAll;\r\n      return item;\r\n    });\r\n\r\n    setItemList(_newItemList);\r\n  }, [checkedAll]);\r\n  /* itemList 의 status가 변경되었을 경우 */\r\n  useEffect(() => {\r\n    setStageDataList(\r\n      itemList.filter((item) => item.status === \"stage\").map((item) => item.item_id)\r\n    );\r\n    setKeepDataList(\r\n      itemList.filter((item) => item.status === \"keep\").map((item) => item.item_id)\r\n    );\r\n    setDeleteDataList(\r\n      itemList.filter((item) => item.status === \"delete\").map((item) => item.item_id)\r\n    );\r\n  }, [itemList]);\r\n\r\n  /* 선택된 데이터를 크롤데이터 정제 단계로 넘기고 나머지 데이터는 버리기 */\r\n  const stageScreeningData = async () => {\r\n    if (window.confirm(\"선택 하신 대로 스크리닝을 진행하시겠습니까?\")) {\r\n      ScreeningDataStageApi(stageDataList).then(res=>{\r\n        if(res.status === 200){\r\n          ScreeningDataKeepApi(keepDataList).then(res=>{\r\n            if(res.status === 200){\r\n              if (deleteDataList.length !== 0) {\r\n                ScreeningDataDeleteApi(deleteDataList).then(res=>{\r\n                  if(res.status===200){\r\n                    alert(\"스크리닝이 성공적으로 완료되었습니다.\");\r\n                    dataFetch();\r\n                  }\r\n                });\r\n              }\r\n              else{\r\n                alert(\"스크리닝이 성공적으로 완료되었습니다.\");\r\n                dataFetch();\r\n              }\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  /* 데이터 정제하기 */\r\n  const dataCleansing = (rawData) => {\r\n    let _screeningData = [];\r\n    let _rawScreeningData = rawData.docs;\r\n    let _dcCount = rawData.dcCount;\r\n\r\n    _rawScreeningData.forEach((item, index) => {\r\n      const obj = {\r\n        item_id: item.item_id,\r\n        doc_origin_summary: item.doc_origin_summary,\r\n        doc_host: item.doc_host,\r\n        doc_language: item.doc_language,\r\n        doc_collect_date: item.doc_collect_date.substring(0, 10),\r\n        doc_page: item.doc_page,\r\n        doc_url: item.doc_url,\r\n      };\r\n      _screeningData.push(obj);\r\n    });\r\n    setDcCount(_dcCount);\r\n    setScreeningData(_screeningData);\r\n  };\r\n\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = (searchObj = null) => {\r\n    trackPromise(\r\n      ScreeningDataFetchApi(listSize, pageNo, isKeep, searchObj)\r\n        .then((res) => {\r\n          console.log(res.data)\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            ScreeningDataFetchApi(listSize, pageNo).then((res) => {\r\n              dataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  /* pageNo, listSize 가 변경되었을 때 데이터를 다시 불러옴 */\r\n  useEffect(() => {\r\n    setCheckedAll(\"delete\")\r\n    dataFetch(searchObj);\r\n  }, [pageNo, listSize, isKeep, searchObj]);\r\n\r\n  /* 데이터를 불러오는데 성공하였을 경우 각 데이터의 id값과 해당 데이터의 status를 list에 먼저 세팅해줌*/\r\n  useEffect(() => {\r\n    let _itemList = [];\r\n    screeningData.forEach((item) => {\r\n      _itemList.push({ item_id: item.item_id, status: \"delete\" });\r\n    });\r\n    setItemList(_itemList);\r\n  }, [screeningData]);\r\n\r\n  return (\r\n    <>\r\n      <CrawlDataScreening\r\n        screeningData={screeningData}\r\n        dcCount={dcCount}\r\n        listSize={listSize}\r\n        setListSize={setListSize}\r\n        pageNo={pageNo}\r\n        setPageNo={setPageNo}\r\n        stageScreeningData={stageScreeningData}\r\n        checkedAll={checkedAll}\r\n        onChangeCheckedAll={onChangeCheckedAll}\r\n        onChangeEach={onChangeEach}\r\n        stageDataList={stageDataList}\r\n        keepDataList={keepDataList}\r\n        deleteDataList={deleteDataList}\r\n        isKeep={isKeep}\r\n        onChangeKeepToggle={onChangeKeepToggle}\r\n        dataFilterFetch={dataFilterFetch}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CrawlDataScreeningContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nfunction CrawlDataCard({ crawlDataItem }) {\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Wrapper>\r\n          <ItemID>{crawlDataItem._id}</ItemID>\r\n        </Wrapper>\r\n\r\n        <Content>\r\n          <div className=\"title\">{crawlDataItem.dc_title_kr}</div>\r\n          <div className=\"subTitle\">{crawlDataItem.dc_title_or}</div>\r\n          <div className=\"writeDate\">{crawlDataItem.dc_dt_collect}</div>\r\n          <Keywords>\r\n            {crawlDataItem.dc_keyword.map((keyword, i) => {\r\n              return <Chips key={i}>{keyword}</Chips>;\r\n            })}\r\n          </Keywords>\r\n        </Content>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 10%;\r\n  &:nth-child(1) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst ItemID = styled.div``;\r\nconst Card = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: white;\r\n  border: solid 1px #d6d6d6;\r\n  /* box-shadow: 3px 3px 15px 3px rgba(0, 0, 0, 0.1); */\r\n  box-shadow : rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  border-radius: 4px;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  margin: 1rem 0 1rem 0;\r\n  justify-content: space-between;\r\n  &:hover {\r\n    transition: all 0.2s;\r\n    filter: blur(2px);\r\n    background-color: #eee;\r\n  }\r\n`;\r\nconst Keywords = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\nconst Content = styled.div`\r\n  margin-left: 1rem;\r\n  flex-grow: 10;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 80%;\r\n  .title,\r\n  .subTitle,\r\n  .writeDate {\r\n    margin-bottom: 0.5rem;\r\n    word-break: break-all;\r\n  }\r\n  .title {\r\n    font-size: 24px;\r\n  }\r\n`;\r\nconst Chips = styled.div`\r\n  padding: 3px 12px;\r\n  border-radius: 32px;\r\n  font-size: 13px;\r\n  background-color: #d6d6d6;\r\n  margin: 3px 3px 3px 0px;\r\n`;\r\n\r\nexport default CrawlDataCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nfunction Tab({ process }) {\r\n  const history = useHistory();\r\n  const { statusCode } = useParams();\r\n  const MenuList = {\r\n    refine: [\r\n      { status: 2, name: \"정제 대기\",router:\"/crawl/2\" },\r\n      { status: 3, name: \"정제 보류\",router:\"/crawl/3\"},\r\n    ],\r\n    register: [\r\n      { status: 4, name: \"등록 대기\", router:\"/crawl/4\" },\r\n      { status: 5, name: \"등록 보류\" ,router:\"/crawl/5\" },\r\n    ],\r\n  };\r\n  const [index, setIndex] = useState(2);\r\n\r\n  useEffect(() => {\r\n    setIndex(Number(statusCode));\r\n  }, [statusCode]);\r\n\r\n  return (\r\n    <>\r\n      <TabContainer>\r\n        {MenuList[`${process}`].map((item, i) => {\r\n          return (\r\n            <TabItem\r\n              key={i}\r\n              active={index === item.status}\r\n              onClick={() => {\r\n                history.push(item.router);\r\n                setIndex(item.status);\r\n              }}\r\n            >\r\n              {item.name}\r\n            </TabItem>\r\n          );\r\n        })}\r\n      </TabContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  justify-content: center;\r\n  list-style-type: none;\r\n  background-color: #d6d6d6;\r\n  padding-top: 2rem;\r\n`;\r\n\r\nconst TabItem = styled.li`\r\n  display: flex;\r\n  width: 240px;\r\n  height: 60px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  background-color: #eeeeee;\r\n  margin-right: 2px;\r\n  margin-left: 2px;\r\n  color: #363636;\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      border-top: 5px solid white;\r\n      background-color: white;\r\n      font-weight: bold;\r\n    `};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.active ? \"white\" : \"#f8f8f8\")};\r\n    font-weight: bold;\r\n  }\r\n`;\r\nexport default Tab;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CrawlDataCard from \"../../../Components/LegacyComponents/CrawlDataCard\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport Pagination from \"../../../Components/Pagination\";\r\nimport Tab from \"../../../Components/LegacyComponents/Tab\";\r\nimport NoData from \"../../../Components/NoData\";\r\nimport DataFilter from \"../../../Components/DataFilter\";\r\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\r\nimport ToggleButton from \"../../../Components/ToggleButton\";\r\nimport DataTable from \"../../../Components/DataTable\";\r\nfunction CrawlDataList({\r\n  statusCode,\r\n  dcCount,\r\n  setListSize,\r\n  listSize,\r\n  pageNo,\r\n  setPageNo,\r\n  crawlDataList,\r\n  STATUS_CODE_SET,\r\n  onChangeKeepToggle,\r\n  isKeep,\r\n  dataFilterFetch,\r\n}) {\r\n  const _listSizeHandler = (e) => {\r\n    setListSize(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <FormHeader type=\"view\" title={STATUS_CODE_SET[statusCode].mainTitle} />\r\n      <Wrapper>\r\n        <RowContainer>\r\n          <Row>\r\n            <div className=\"result-count\">\r\n              <HiOutlineDocumentSearch />\r\n              검색 결과 ({dcCount}건)\r\n            </div>\r\n            <div className=\"action-group\">\r\n              <ToggleButton\r\n                mode1={\"대기\"}\r\n                mode2={\"보류\"}\r\n                action={onChangeKeepToggle}\r\n                checked={isKeep}\r\n              />\r\n              <select\r\n                className=\"list-size\"\r\n                value={listSize}\r\n                onChange={_listSizeHandler}\r\n              >\r\n                <option disabled>리스트 사이즈</option>\r\n                <option value={2}>2건</option>\r\n                <option value={10}>10건</option>\r\n                <option value={30}>30건</option>\r\n                <option value={50}>50건</option>\r\n                <option value={75}>75건</option>\r\n                <option value={100}>100건</option>\r\n              </select>\r\n            </div>\r\n          </Row>\r\n          <Row>\r\n            <DataFilter\r\n              type={STATUS_CODE_SET[statusCode].type}\r\n              dataFilterFetch={dataFilterFetch}\r\n            />\r\n          </Row>\r\n        </RowContainer>\r\n        {crawlDataList.length !== 0 ? (\r\n          <>\r\n            <SearchResult>\r\n              <DataTable\r\n                tableData={crawlDataList}\r\n                type={STATUS_CODE_SET[statusCode].type}\r\n                statusCode={statusCode}\r\n              />\r\n            </SearchResult>\r\n            <Pagination\r\n              dcCount={dcCount}\r\n              listSize={listSize}\r\n              pageNo={pageNo}\r\n              setPageNo={setPageNo}\r\n            />\r\n          </>\r\n        ) : (\r\n          <NoData />\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n/* status에 따라 라우팅을... 다르게 해야하네요 ㅎ; */\r\n\r\nconst CustomLink = styled(Link)`\r\n  color: black;\r\n  &:link {\r\n    text-decoration: none;\r\n  }\r\n  &:visited {\r\n    text-decoration: none;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 5rem 0 5rem;\r\n`;\r\nconst SearchResultTitle = styled.div`\r\n  width: 100%;\r\n  p {\r\n    &:nth-child(1) {\r\n      font-size: 20px;\r\n      font-weight: bold;\r\n    }\r\n    &:nth-child(2) {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\nconst SearchResult = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n`;\r\nconst Row = styled.div`\r\n  display: flex;\r\n  color: rgb(59, 59, 59);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n\r\n  .result-count {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    * {\r\n      padding-right: 0.5rem;\r\n    }\r\n  }\r\n  .action-group {\r\n    display: flex;\r\n  }\r\n  .list-size {\r\n    margin: 0 0.5rem 0 0.5rem;\r\n    padding: 0.5rem;\r\n    border: solid 1px #d6d6d6;\r\n  }\r\n`;\r\n\r\nexport default CrawlDataList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CrawlDataListFetchApi, sessionHandler } from \"../../../Utils/api\";\r\nimport CrawlDataList from \"./CrawlDataList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction CrawlDataListContainer() {\r\n  const dispatch = useDispatch();\r\n  /* 현재 보여질 데이터 */\r\n  const [crawlDataList, setCrawlDataList] = useState([]);\r\n  const [searchObj, setSearchObj] = useState(null); // 검색 옵션\r\n\r\n  /* refine, register 를 router로 부터 받아와서 구분하도록 함.... */\r\n  const { statusCode } = useParams();\r\n  const [currentCode, setCurrentCode] = useState(statusCode);\r\n\r\n  /* 페이지네이션 */\r\n  const [dcCount, setDcCount] = useState(0); // document 총 개수\r\n  const [pageNo, setPageNo] = useState(1); // 현재 활성화 된 페이지 번호\r\n  const [listSize, setListSize] = useState(10); // 한 페이지에 나타낼 document 개수\r\n\r\n  const [isKeep, setIsKeep] = useState(false);\r\n  const onChangeKeepToggle = () => {\r\n    setIsKeep(!isKeep);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const code = isKeep ? Number(statusCode) + 1 : Number(statusCode);\r\n    setCurrentCode(code);\r\n  }, [isKeep]);\r\n\r\n  const STATUS_CODE_SET = {\r\n    2: {\r\n      type: \"refine\",\r\n      mainTitle: \"크롤데이터 정제 작업 데이터 목록\",\r\n      title: \"크롤데이터 정제 진행\",\r\n    },\r\n    3: {\r\n      type: \"refine\",\r\n      mainTitle: \"크롤데이터 정제 작업 데이터 목록\",\r\n      title: \"크롤데이터 정제 진행\",\r\n    },\r\n    4: {\r\n      type: \"register\",\r\n      mainTitle: \"크롤데이터 등록(아카이빙) 작업 데이터 목록\",\r\n      title: \"크롤데이터 등록(아카이빙) 진행\",\r\n    },\r\n    5: {\r\n      type: \"register\",\r\n      mainTitle: \"크롤데이터 등록(아카이빙) 작업 데이터 목록\",\r\n      title: \"크롤데이터 등록(아카이빙) 진행\",\r\n    },\r\n  };\r\n\r\n  const dataCleansing = (rawData) => {\r\n    let _crawlDataList = [];\r\n    let _rawCrawlDataList = rawData.docs;\r\n    let _dcCount = rawData.dcCount;\r\n\r\n    _rawCrawlDataList.forEach((item, index) => {\r\n      const obj = {\r\n        doc_origin_title: item.doc_origin_title,\r\n        doc_kor_title: item.doc_kor_title,\r\n        doc_keyword: item.doc_keyowrd,\r\n        doc_collect_date: item.doc_collect_date.substring(0, 10),\r\n        _id: item._id,\r\n        item_id:item.item_id,\r\n        stat: item.stat,\r\n        doc_language: item.doc_language,\r\n        doc_page: item.doc_page,\r\n        doc_url: item.doc_url,\r\n        doc_origin_summary: item.doc_origin_summary,\r\n        doc_publisher:item.doc_publisher,\r\n      };\r\n      _crawlDataList.push(obj);\r\n    });\r\n    setDcCount(_dcCount);\r\n    setCrawlDataList(_crawlDataList);\r\n  };\r\n\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = (searchObj = null) => {\r\n    trackPromise(\r\n      CrawlDataListFetchApi(currentCode, listSize, pageNo, searchObj)\r\n        .then((res) => {\r\n          console.log(res.data)\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            CrawlDataListFetchApi(\r\n              currentCode,\r\n              listSize,\r\n              pageNo,\r\n              searchObj\r\n            ).then((res) => {\r\n              dataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  const dataFilterFetch = (searchObj\r\n  ) => {\r\n    setSearchObj(searchObj);\r\n  };\r\n\r\n  /* pageNo, statusCode 가 변경되었을 때 데이터를 다시 불러옴 */\r\n  useEffect(() => {\r\n    dataFetch(searchObj);\r\n  }, [pageNo, currentCode, listSize, searchObj]);\r\n  return (\r\n    <>\r\n      <CrawlDataList\r\n        statusCode={statusCode}\r\n        crawlDataList={crawlDataList}\r\n        dcCount={dcCount}\r\n        listSize={listSize}\r\n        setListSize={setListSize}\r\n        pageNo={pageNo}\r\n        setPageNo={setPageNo}\r\n        STATUS_CODE_SET={STATUS_CODE_SET}\r\n        onChangeKeepToggle={onChangeKeepToggle}\r\n        isKeep={isKeep}\r\n        dataFilterFetch={dataFilterFetch}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default CrawlDataListContainer;\r\n","import React from \"react\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport Pagination from \"../../../Components/Pagination\";\r\nimport DataFilter from \"../../../Components/DataFilter\";\r\nimport DataTable from \"../../../Components/DataTable\";\r\nimport ToggleButton from \"../../../Components/ToggleButton\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineExternalLink, HiOutlineDocumentSearch } from \"react-icons/hi\";\r\nimport { CgFileDocument } from \"react-icons/cg\";\r\nfunction ArchiveDataList({\r\n  archiveDataList,\r\n  statusCode,\r\n  dcCount,\r\n  setListSize,\r\n  listSize,\r\n  pageNo,\r\n  setPageNo,\r\n  dataFilterFetch,\r\n  onChangeRequestToggle,\r\n  isRequest,\r\n}) {\r\n  const _listSizeHandler = (e) => {\r\n    setListSize(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <FormHeader\r\n        type=\"view\"\r\n        title={\"큐레이션 데이터 등록(아카이브 데이터 조회)\"}\r\n      />\r\n\r\n      <Wrapper>\r\n        <RowContainer>\r\n          <Row>\r\n            <div className=\"result-count\">\r\n              <HiOutlineDocumentSearch />\r\n              검색 결과 ({dcCount}건)\r\n            </div>\r\n            <div className=\"action-group\">\r\n              <ToggleButton\r\n                mode1={\"아카이브 문서\"}\r\n                mode2={\"큐레이션 선정 문서\"}\r\n                action={onChangeRequestToggle}\r\n                checked={isRequest}\r\n              />\r\n              <select\r\n                className=\"list-size\"\r\n                value={listSize}\r\n                onChange={_listSizeHandler}\r\n              >\r\n                <option disabled>리스트 사이즈</option>\r\n                <option value={2}>2건</option>\r\n                <option value={10}>10건</option>\r\n                <option value={30}>30건</option>\r\n                <option value={50}>50건</option>\r\n                <option value={75}>75건</option>\r\n                <option value={100}>100건</option>\r\n              </select>\r\n            </div>\r\n          </Row>\r\n          <Row>\r\n            <DataFilter dataFilterFetch={dataFilterFetch} type=\"archive\" />\r\n          </Row>\r\n        </RowContainer>\r\n        {archiveDataList.length !== 0 ? (\r\n          <>\r\n            <DataTable\r\n              type=\"archive\"\r\n              tableData={archiveDataList}\r\n              statusCode={statusCode}\r\n            />\r\n            <Pagination\r\n              dcCount={dcCount}\r\n              listSize={listSize}\r\n              pageNo={pageNo}\r\n              setPageNo={setPageNo}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <SearchResultNotthingContainer>\r\n              <CgFileDocument size=\"100\" color=\"#d6d6d6\" />\r\n              <div className=\"comment\">등록된 데이터가 없습니다.</div>\r\n            </SearchResultNotthingContainer>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SearchResultNotthingContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 10rem;\r\n  .comment {\r\n    font-size: 30px;\r\n    color: #d6d6d6;\r\n  }\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n`;\r\nconst Row = styled.div`\r\n  display: flex;\r\n  color: rgb(59, 59, 59);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n\r\n  .result-count {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    * {\r\n      padding-right: 0.5rem;\r\n    }\r\n  }\r\n  .action-group {\r\n    display: flex;\r\n  }\r\n  .list-size {\r\n    margin: 0 0.5rem 0 0.5rem;\r\n    padding: 0.5rem;\r\n    border: solid 1px #d6d6d6;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 0 5rem 5rem 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst TableWrapper = styled.div`\r\n  width: 100%;\r\n  max-height: 65rem;\r\n  overflow: auto;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n`;\r\nconst CustomTable = styled.table`\r\n  width: 100%;\r\n  text-align: center;\r\n  border-collapse: collapse;\r\n  tr {\r\n    height: 3rem;\r\n  }\r\n  thead {\r\n    border-bottom: solid 1px #d6d6d6;\r\n    position: sticky;\r\n    top: 0px;\r\n    background-color: white;\r\n  }\r\n  tbody {\r\n    tr:nth-child(2n) {\r\n      background-color: #eee;\r\n    }\r\n    tr {\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: #d6d6d6;\r\n      }\r\n    }\r\n\r\n    tr > td > span {\r\n      margin: 0.2rem;\r\n    }\r\n  }\r\n`;\r\nconst CustomLink = styled(Link)`\r\n  color: black;\r\n`;\r\nconst SearchResultTitle = styled.div`\r\n  width: 100%;\r\n  p {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport default ArchiveDataList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ArchiveDataList from \"./ArchiveDataList\";\r\nimport { CrawlDataListFetchApi, sessionHandler } from \"../../../Utils/api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction ArchiveDataListContainer() {\r\n  const dispatch = useDispatch();\r\n  /* 현재 보여질 데이터 */\r\n  const [archiveDataList, setArchiveDataList] = useState([]);\r\n  const [searchObj, setSearchObj] = useState(null); // 검색 옵션\r\n  /* 페이지네이션 */\r\n  const [dcCount, setDcCount] = useState(0); // document 총 개수\r\n  const [pageNo, setPageNo] = useState(1); // 현재 활성화 된 페이지 번호\r\n  const [listSize, setListSize] = useState(10); // 한 페이지에 나타낼 document 개수\r\n\r\n  const [isRequest,setIsRequest]=useState(false); // 큐레이션 선정 여부\r\n  const onChangeRequestToggle = ()=>{\r\n    setIsRequest(!isRequest)\r\n  }\r\n  const statusCode = 6;\r\n  const [currentCode, setCurrentCode] = useState(statusCode);\r\n  /* 데이터 정제하기 */\r\n  const dataCleansing = (rawData) => {\r\n    let _archiveDataList = [];\r\n    let _rawArchiveDataList = rawData.docs;\r\n    let _dcCount = rawData.dcCount;\r\n    _rawArchiveDataList.forEach((item) => {\r\n      const obj = {\r\n        _id: item._id,\r\n        doc_kor_title: item.doc_kor_title,\r\n        doc_origin_title: item.doc_origin_title,\r\n        doc_origin_summary: item.doc_origin_summary,\r\n        doc_kor_summary:item.doc_kor_summary,\r\n        doc_page: item.doc_page,\r\n        doc_country_list: item.doc_country.map((x) => x.CT_NM).join(\", \"),\r\n        doc_category_list: item.doc_category.map((x) => x.CT_NM).join(\", \"),\r\n        doc_url: item.doc_url.replace(\"%3A\", \":\"),\r\n        is_crawled: item.is_crawled,\r\n        doc_collect_date: item.doc_collect_date,\r\n        doc_language: item.doc_language,\r\n        doc_publisher:item.doc_publisher,\r\n      };\r\n      _archiveDataList.push(obj);\r\n    });\r\n    setDcCount(_dcCount);\r\n    setArchiveDataList(_archiveDataList);\r\n  };\r\n\r\n  /* 필터 적용 데이터 받아오기 */\r\n\r\n  const dataFilterFetch = (searchObj) => {\r\n    setSearchObj(searchObj);\r\n  };\r\n\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = (searchObj = null) => {\r\n    trackPromise(\r\n      CrawlDataListFetchApi(currentCode, listSize, pageNo, searchObj)\r\n        .then((res) => {\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            CrawlDataListFetchApi(currentCode, listSize, pageNo, searchObj).then(\r\n              (res) => {\r\n                dataCleansing(res.data);\r\n              }\r\n            );\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataFetch(searchObj);\r\n  }, [currentCode,pageNo, listSize, searchObj]);\r\n\r\n  useEffect(() => {\r\n    const code = isRequest ? Number(statusCode) + 1 : Number(statusCode);\r\n    setCurrentCode(code);\r\n  }, [isRequest]);\r\n\r\n  return (\r\n    <>\r\n      <ArchiveDataList\r\n        archiveDataList={archiveDataList}\r\n        statusCode={statusCode}\r\n        dcCount={dcCount}\r\n        listSize={listSize}\r\n        setListSize={setListSize}\r\n        pageNo={pageNo}\r\n        setPageNo={setPageNo}\r\n        dataFilterFetch={dataFilterFetch}\r\n        onChangeRequestToggle={onChangeRequestToggle}\r\n        isRequest={isRequest}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default ArchiveDataListContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nfunction CurationDataCard({ curationDataItem }) {\r\n  return (\r\n    <>\r\n      <CardWrapper>\r\n        <ImageContainer>\r\n          <Image src={\r\n                          curationDataItem.doc_thumbnail !== null\r\n                            ? `http://${curationDataItem.doc_thumbnail}`\r\n                            : process.env.PUBLIC_URL +\r\n                              `/img/curation_default_image.png`\r\n                        } />\r\n        </ImageContainer>\r\n      \r\n        <ContentContainer>\r\n          <Title>\r\n            <div>[{curationDataItem.doc_country_list}]</div>\r\n            <div>{curationDataItem.doc_kor_title}</div>\r\n          </Title>\r\n          <SubTitle>{curationDataItem.doc_origin_title}</SubTitle>\r\n          <Info>\r\n            <CategoryBadge color=\"grey\">\r\n              {curationDataItem.doc_category_list}\r\n            </CategoryBadge>\r\n            <CountryBadge color=\"grey\">\r\n              {curationDataItem.doc_publish_country_list}\r\n            </CountryBadge>\r\n            <PublisherBadge color=\"grey\">\r\n              {curationDataItem.doc_publisher}\r\n            </PublisherBadge>\r\n          </Info>\r\n          <Info>\r\n            <PageBadge color=\"grey\">{curationDataItem.doc_page}쪽</PageBadge>\r\n            <RegiDateBadge color=\"grey\">\r\n              {curationDataItem.doc_register_date}\r\n            </RegiDateBadge>\r\n          </Info>\r\n          <Content>{curationDataItem.doc_content}</Content>\r\n        </ContentContainer>\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst CardWrapper = styled.div`\r\n  width:inherit;\r\n  display: flex;\r\n  padding: 1rem;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  border-radius: 4px;\r\n  margin: 1rem;\r\n  transition: all 0.3s ease-in-out; /* 부드러운 모션을 위해 추가*/\r\n  &:hover {\r\n    transform: scale(1.02);\r\n    cursor: pointer;\r\n  }\r\n  background-color: white;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  min-width: 12rem;\r\n  max-width: 12rem;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n`;\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\nconst ContentContainer = styled.div`\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  div {\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n`;\r\nconst Title = styled.div`\r\n  display: flex;\r\n  div:nth-child(1){\r\n    min-width:5rem;\r\n  }\r\n  div {\r\n    margin-right: 0.5rem;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n  }\r\n  /* p태그 첫번째 요소는 말머리 */\r\n  /* div:nth-child(1) {\r\n    color: black;\r\n  } */\r\n  /* p태그 두번째 요소는 한글 제목*/\r\n  div:nth-child(1) {\r\n    color: #435269;\r\n  }\r\n`;\r\nconst SubTitle = styled.div`\r\n  /* p태그 세번째 요소는 원문 제목*/\r\n  font-size: 14px;\r\n  color: grey;\r\n  word-break:break-all;\r\n  word-wrap:break-word;\r\n`;\r\nconst Info = styled.div`\r\n  font-size: 12px;\r\n  display: flex;\r\n\r\n  div {\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    margin: 0;\r\n  }\r\n`;\r\nconst Badge = styled.div`\r\n  &:before {\r\n    content: \"\";\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 12px;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n    margin-right: 5px;\r\n    border-radius: 3px;\r\n    background-color: ${(props) => props.color || \"grey\"};\r\n  }\r\n`;\r\nconst CategoryBadge = styled(Badge)`\r\n  &:before {\r\n    content: \"주제\";\r\n  }\r\n`;\r\nconst CountryBadge = styled(Badge)`\r\n  &:before {\r\n    content: \"발행 국가\";\r\n  }\r\n`;\r\nconst PageBadge = styled(Badge)`\r\n  &:before {\r\n    content: \"페이지수\";\r\n  }\r\n`;\r\nconst PublisherBadge = styled(Badge)`\r\n  &:before {\r\n    content: \"발행기관명\";\r\n  }\r\n`;\r\nconst RegiDateBadge = styled(Badge)`\r\n  &:before {\r\n    content: \"데이터 등록 일자\";\r\n  }\r\n`;\r\nconst Content = styled.div`\r\n  overflow: hidden;\r\n\r\n  text-overflow: ellipsis;\r\n\r\n  display: -webkit-box;\r\n\r\n  -webkit-line-clamp: 5; /* 라인수 */\r\n\r\n  -webkit-box-orient: vertical;\r\n\r\n  word-wrap: break-word;\r\n  word-break:break-all;\r\n`;\r\nexport default CurationDataCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction CurationDataCard2({ curationDataItem }) {\r\n  return (\r\n    <CardWrapper>\r\n      <ImageContainer>\r\n        <Image\r\n          src={\r\n            curationDataItem.doc_thumbnail !== null\r\n              ? `http://${curationDataItem.doc_thumbnail}`\r\n              : process.env.PUBLIC_URL + `/img/curation_default_image.png`\r\n          }\r\n        />\r\n      </ImageContainer>\r\n      <ContentContainer>\r\n        <Title>\r\n          <div>[{curationDataItem.doc_country_list}]</div>\r\n          <div>{curationDataItem.doc_kor_title}</div>\r\n        </Title>\r\n        <SubTitle>{curationDataItem.doc_origin_title}</SubTitle>\r\n        <Info>\r\n          <div>{curationDataItem.doc_category_list}</div>\r\n          <div>|</div>\r\n          <div>{curationDataItem.doc_publish_country_list}</div>\r\n          <div>|</div>\r\n          <div>{curationDataItem.doc_host}</div>\r\n          <div>|</div>\r\n          <div>{curationDataItem.doc_register_date}</div>\r\n          <div>|</div>\r\n          <div>{curationDataItem.doc_page}쪽</div>\r\n        </Info>\r\n        <UrlPreview>{curationDataItem.doc_url}</UrlPreview>\r\n      </ContentContainer>\r\n    </CardWrapper>\r\n  );\r\n}\r\nconst CardWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  border-radius: 4px;\r\n  margin: 0.5rem;\r\n  transition: all 0.3s ease-in-out; /* 부드러운 모션을 위해 추가*/\r\n  &:hover {\r\n    transform: scale(1.02);\r\n    cursor: pointer;\r\n  }\r\n  background-color: white;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  width: 8rem;\r\n  height: 6rem;\r\n  overflow: hidden;\r\n  border: solid 1px #eee;\r\n  /*box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;*/\r\n`;\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\nconst ContentContainer = styled.div`\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  div {\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n`;\r\nconst Title = styled.div`\r\n  display: flex;\r\n  div {\r\n    margin-right: 0.5rem;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n  }\r\n  div:nth-child(1) {\r\n    color: #435269;\r\n  }\r\n`;\r\nconst SubTitle = styled.div`\r\n  /* p태그 세번째 요소는 원문 제목*/\r\n  font-size: 14px;\r\n  color: grey;\r\n`;\r\nconst Info = styled.div`\r\n  font-size: 12px;\r\n  display: flex;\r\n  div {\r\n    align-items: center;\r\n    padding-right: 0.5rem;\r\n    margin: 0;\r\n  }\r\n`;\r\nconst UrlPreview = styled.div`\r\n  color: #009999;\r\n  font-size: 12px;\r\n`;\r\nexport default CurationDataCard2;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"../../../Components/Pagination\";\r\nimport { HiOutlineDocumentSearch, HiPhotograph } from \"react-icons/hi\";\r\nimport { MdCalendarViewDay } from \"react-icons/md\";\r\nimport { RiFileList2Line } from \"react-icons/ri\";\r\nimport DataFilter from \"../../../Components/DataFilter\";\r\nimport CurationDataCard from \"../../../Components/CurationDataCard\";\r\nimport CurationDataCard2 from \"../../../Components/CurationDataCard2\";\r\nimport NoData from \"../../../Components/NoData\";\r\nfunction CurationDataList({\r\n  curationDataList,\r\n  dcCount,\r\n  listSize,\r\n  pageNo,\r\n  setPageNo,\r\n  viewType,\r\n  viewTypeHandler,\r\n  handleRowClick,\r\n  userInfo,\r\n  dataFilterFetch,\r\n  setListSize,\r\n}) {\r\n  const _listSizeHandler = (e) => {\r\n    setListSize(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <RowContainer>\r\n          <Row>\r\n            <div className=\"result-count\">\r\n              <HiOutlineDocumentSearch />\r\n              검색 결과 ({dcCount}건)\r\n            </div>\r\n            <div className=\"action-group\">\r\n              <ViewType>\r\n                <input\r\n                  onChange={viewTypeHandler}\r\n                  type=\"radio\"\r\n                  value=\"card1\"\r\n                  id=\"card1\"\r\n                  name=\"view-type\"\r\n                  checked={viewType === \"card1\"}\r\n                />\r\n                <label htmlFor=\"card1\">\r\n                  <MdCalendarViewDay />\r\n                  카드형1\r\n                </label>\r\n                <input\r\n                  onChange={viewTypeHandler}\r\n                  type=\"radio\"\r\n                  value=\"card2\"\r\n                  id=\"card2\"\r\n                  name=\"view-type\"\r\n                  checked={viewType === \"card2\"}\r\n                />\r\n                <label htmlFor=\"card2\">\r\n                  <MdCalendarViewDay />\r\n                  카드형2\r\n                </label>\r\n                <input\r\n                  onChange={viewTypeHandler}\r\n                  type=\"radio\"\r\n                  value=\"list\"\r\n                  id=\"list\"\r\n                  name=\"view-type\"\r\n                  checked={viewType === \"list\"}\r\n                />\r\n                <label htmlFor=\"list\">\r\n                  <RiFileList2Line />\r\n                  목록형\r\n                </label>\r\n              </ViewType>\r\n              <select\r\n                className=\"list-size\"\r\n                value={listSize}\r\n                onChange={_listSizeHandler}\r\n              >\r\n                <option disabled>리스트 사이즈</option>\r\n                <option value={2}>2건</option>\r\n                <option value={10}>10건</option>\r\n                <option value={30}>30건</option>\r\n                <option value={50}>50건</option>\r\n                <option value={75}>75건</option>\r\n                <option value={100}>100건</option>\r\n              </select>\r\n            </div>\r\n          </Row>\r\n          <Row>\r\n            <DataFilter type={\"curation\"} dataFilterFetch={dataFilterFetch} />\r\n          </Row>\r\n        </RowContainer>\r\n        {curationDataList.length !== 0 ? (\r\n          <>\r\n            {\" \"}\r\n            {viewType === \"list\" && (\r\n              <CurationListWrapper>\r\n                <CurationList\r\n                  curationData={curationDataList}\r\n                  handleRowClick={handleRowClick}\r\n                />\r\n              </CurationListWrapper>\r\n            )}\r\n            {viewType === \"card1\" && (\r\n              <CurationCard1Wrapper>\r\n                {curationDataList.map((item, index) => {\r\n                  return (\r\n                    <CustomLink\r\n                      to={`/${\r\n                        userInfo.permission !== 0 ? \"curation\" : \"library\"\r\n                      }/${item._id}`}\r\n                    >\r\n                      <CurationDataCard\r\n                        curationDataItem={item}\r\n                      ></CurationDataCard>\r\n                    </CustomLink>\r\n                  );\r\n                })}\r\n              </CurationCard1Wrapper>\r\n            )}\r\n            {viewType === \"card2\" && (\r\n              <CurationCard2Wrapper>\r\n                {curationDataList.map((item, index) => {\r\n                  return (\r\n                    <CustomLink\r\n                      to={`/${\r\n                        userInfo.permission !== 0 ? \"curation\" : \"library\"\r\n                      }/${item._id}`}\r\n                    >\r\n                      <CurationDataCard2\r\n                        curationDataItem={item}\r\n                      ></CurationDataCard2>\r\n                    </CustomLink>\r\n                  );\r\n                })}\r\n              </CurationCard2Wrapper>\r\n            )}\r\n            <Pagination\r\n              dcCount={dcCount}\r\n              listSize={listSize}\r\n              pageNo={pageNo}\r\n              setPageNo={setPageNo}\r\n            />\r\n          </>\r\n        ) : (\r\n          <NoData />\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CurationList({ curationData, handleRowClick }) {\r\n  return (\r\n    <>\r\n      <CurationListTable>\r\n        <colgroup>\r\n          <col style={{ width: \"40%\" }} />\r\n          <col style={{ width: \"12%\" }} />\r\n          <col style={{ width: \"12%\" }} />\r\n          <col style={{ width: \"8%\" }} />\r\n          <col style={{ width: \"12%\" }} />\r\n          <col style={{ width: \"8%\" }} />\r\n          <col style={{ width: \"10%\" }} />\r\n        </colgroup>\r\n        <thead>\r\n          <tr>\r\n            <th>제목</th>\r\n            <th>대상 국가</th>\r\n            <th>정책 분류</th>\r\n            <th>문서 분류</th>\r\n            <th>발급 기관 명</th>\r\n            <th>페이지 수</th>\r\n            <th>서비스 등록일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {curationData.map((item, index) => {\r\n            return (\r\n              <tr\r\n                onClick={() => {\r\n                  handleRowClick(item._id);\r\n                }}\r\n                key={index}\r\n              >\r\n                <td>\r\n                  <div className=\"content\">\r\n                    <div className=\"img-container\">\r\n                      <img\r\n                        src={\r\n                          item.doc_thumbnail !== null\r\n                            ? `http://${item.doc_thumbnail}`\r\n                            : process.env.PUBLIC_URL +\r\n                              `/img/curation_default_image.png`\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"title-container\">\r\n                      <div className=\"dc_title_kr\">{item.doc_kor_title}</div>\r\n                      <div className=\"dc_title_or\">{item.doc_origin_title}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"center\">{item.doc_country_list}</td>\r\n                <td className=\"center\">{item.doc_category_list}</td>\r\n                <td className=\"center\">{item.doc_content_type_list}</td>\r\n                <td className=\"center\">{item.doc_publisher}</td>\r\n\r\n                <td className=\"center\">{item.doc_page}쪽</td>\r\n                <td className=\"center\">{item.doc_register_date}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </CurationListTable>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n`;\r\nconst Row = styled.div`\r\n  display: flex;\r\n  color: rgb(59, 59, 59);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n\r\n  .result-count {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    * {\r\n      padding-right: 0.5rem;\r\n    }\r\n  }\r\n  .action-group {\r\n    display: flex;\r\n  }\r\n  .list-size {\r\n    margin: 0 0.5rem 0 0.5rem;\r\n    padding: 0.5rem;\r\n    border: solid 1px #d6d6d6;\r\n  }\r\n`;\r\n\r\nconst ViewType = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n  input[type=\"radio\"] {\r\n    display: none;\r\n    &:checked + label {\r\n      color: white;\r\n      font-weight: bold;\r\n      background-color: #435269;\r\n    }\r\n  }\r\n  label {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0.25rem;\r\n    cursor: pointer;\r\n    padding: 0.25rem 0.5rem 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst CurationListTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border: solid 1px #d6d6d6;\r\n\r\n  tr {\r\n    height: 2.5rem;\r\n    cursor: pointer;\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n  }\r\n  th,\r\n  td {\r\n    padding: 0.5rem;\r\n    word-break: break-all;\r\n  }\r\n  thead {\r\n    background-color: #d8dee6;\r\n    color: #323d4d;\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n  }\r\n  .center {\r\n    text-align: center;\r\n  }\r\n  .content {\r\n    display: flex;\r\n    .img-container {\r\n      max-width: 5rem;\r\n      max-height: 5rem;\r\n      overflow: hidden;\r\n      border-radius: 4px;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n    .title-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      .dc_title_kr {\r\n        color: #009999;\r\n        font-weight: bold;\r\n        font-size: 16px;\r\n        padding: 0.5rem;\r\n        word-break: break-all;\r\n      }\r\n      .dc_title_or {\r\n        color: rgb(59, 59, 59);\r\n        padding: 0.5rem;\r\n        word-break: break-all;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CurationListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  width: 100%;\r\n`;\r\nconst CurationCard1Wrapper = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\nconst CurationCard2Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst CustomLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\nexport default CurationDataList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CurationDataList from \"./CurationDataList\";\r\nimport {\r\n  CrawlDataListFetchApi,\r\n  userCustomCurationDataFetchApi,\r\n  sessionHandler,\r\n} from \"../../../Utils/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction CurationDataListContainer() {\r\n  const [curationDataList, setCurationDataList] = useState([]);\r\n  const userInfo = useSelector((state) => state.user.user);\r\n  const axisObj = useSelector((state) => state.custom.axisObj);\r\n  const [searchObj, setSearchObj] = useState(null); // 검색 옵션\r\n\r\n  /* 페이지네이션 */\r\n  const [dcCount, setDcCount] = useState(0); // document 총 개수\r\n  const [pageNo, setPageNo] = useState(1); // 현재 활성화 된 페이지 번호\r\n  const [listSize, setListSize] = useState(10); // 한 페이지에 나타낼 document 개수\r\n\r\n  const dispatch = useDispatch();\r\n  const statusCode = 8;\r\n\r\n  const [viewType, setViewType] = useState(\"list\");\r\n\r\n  const viewTypeHandler = (e) => {\r\n    setViewType(e.target.value);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleRowClick = (_id) => {\r\n    history.push(\r\n      `/${userInfo.permission !== 0 ? \"curation\" : \"library\"}/${_id}`\r\n    );\r\n  };\r\n\r\n  /* 데이터 정제하기 */\r\n  const dataCleansing = (rawData) => {\r\n    let _curationDataList = [];\r\n    let _rawCurationDataList = rawData.docs;\r\n    let _dcCount = rawData.dcCount;\r\n    _rawCurationDataList.forEach((item) => {\r\n      const obj = {\r\n        _id: item._id,\r\n        doc_origin_title: item.doc_origin_title,\r\n        doc_kor_title: item.doc_kor_title,\r\n        doc_page: item.doc_page,\r\n        doc_thumbnail: item.doc_thumbnail,\r\n        doc_country_list: item.doc_country.map((x) => x.CT_NM).join(\", \"),\r\n        doc_publish_country_list: item.doc_publish_country\r\n          .map((x) => x.CT_NM)\r\n          .join(\", \"),\r\n        doc_category_list: item.doc_category.map((x) => x.CT_NM).join(\", \"),\r\n        doc_register_date: item.doc_register_date.substring(0, 10),\r\n        \r\n        doc_content_type_list: item.doc_content_type\r\n          .map((x) => x.CT_NM)\r\n          .join(\", \"),\r\n        doc_content: item.doc_content ? item.doc_content.replace(/(<([^>]+)>)/gi, \"\") : \"\", // 태그 삭제 정규표현식\r\n        doc_url: item.doc_url,\r\n        doc_publisher:item.doc_publisher,\r\n      };\r\n      console.log(obj)\r\n      _curationDataList.push(obj);\r\n    });\r\n    setDcCount(_dcCount);\r\n    setCurationDataList(_curationDataList);\r\n  };\r\n\r\n  const dataFilterFetch = (searchObj) => {\r\n    setSearchObj(searchObj);\r\n  };\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = (searchObj = null) => {\r\n    trackPromise(\r\n      CrawlDataListFetchApi(statusCode, listSize, pageNo,searchObj)\r\n        .then((res) => {\r\n          console.log(res.data)\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            CrawlDataListFetchApi(statusCode, listSize, pageNo,searchObj).then((res) => {\r\n              dataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  const customDataFetch = () => {\r\n    if (axisObj.X !== null && axisObj.Y !== null) {\r\n      let axis = {};\r\n      axis[axisObj.X.type] = axisObj.X.code;\r\n      axis[axisObj.Y.type] = axisObj.Y.code;\r\n      trackPromise(\r\n        userCustomCurationDataFetchApi(axis)\r\n          .then((res) => {\r\n            dataCleansing(res.data);\r\n          })\r\n          .catch((err) => {\r\n            sessionHandler(err, dispatch).then((res) => {\r\n              userCustomCurationDataFetchApi(axis).then((res) => {\r\n                dataCleansing(res.data);\r\n              });\r\n            });\r\n          })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (axisObj.X === null) {\r\n      dataFetch(searchObj);\r\n    }\r\n    else{\r\n      customDataFetch();\r\n    }\r\n  }, [pageNo,listSize,axisObj,searchObj]);\r\n\r\n  return (\r\n    <>\r\n      <CurationDataList\r\n        curationDataList={curationDataList}\r\n        statusCode={statusCode}\r\n        dcCount={dcCount}\r\n        listSize={listSize}\r\n        setListSize={setListSize}\r\n        pageNo={pageNo}\r\n        setPageNo={setPageNo}\r\n        viewTypeHandler={viewTypeHandler}\r\n        viewType={viewType}\r\n        handleRowClick={handleRowClick}\r\n        userInfo={userInfo}\r\n        dataFilterFetch={dataFilterFetch}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default CurationDataListContainer;\r\n","import React from \"react\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport styled from \"styled-components\";\r\nimport { GrFormView } from \"react-icons/gr\";\r\nimport { AiOutlineLink } from \"react-icons/ai\";\r\nimport Editor from \"../../../Components/Editor\";\r\n\r\nfunction CurationDataDetail({ docs, permission, goDataManage }) {\r\n  return (\r\n    <>\r\n      <FormHeader type=\"view\" title={\"큐레이션 데이터 상세 조회\"} />\r\n      <Wrapper>\r\n        <ArticleInfoWrapper>\r\n          <ImageContainer>\r\n            {docs.doc_thumbnail && (\r\n              <Image src={`http://${docs.doc_thumbnail}`} />\r\n            )}\r\n          </ImageContainer>\r\n          <ArticleInfoContainer>\r\n            <ArticleHeader>\r\n              <SubTitle>[{docs.doc_country_list}]</SubTitle>\r\n              <Title>{docs.doc_kor_title}</Title>\r\n              <div>{docs.doc_origin_title}</div>\r\n            </ArticleHeader>\r\n            {\r\n              // 권한이 관리자일 경우\r\n              permission === 9 && (\r\n                <ArticleActions>\r\n                  <button onClick={goDataManage}>관리</button>\r\n                </ArticleActions>\r\n              )\r\n            }\r\n            <ArticleInfo>\r\n              <Info>\r\n                <GrFormView size=\"24\" color=\"#d6d6d6\" />\r\n                <div className=\"content\">{docs.dc_hits || 0}</div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 원문 수집일 / 원문 작성일 / 원문 발행일</div>\r\n                <div className=\"content\">\r\n                {docs.doc_collect_date} / {docs.doc_write_date} / {docs.doc_publish_date}\r\n                </div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 문서 서비스 등록일</div>\r\n                <div className=\"content\">\r\n                  {docs.doc_publish_date}\r\n                </div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 문서 언어</div>\r\n                <div className=\"content\">\r\n                  {docs.doc_language_list}\r\n                </div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 기관 명 / 발행 HOST</div>\r\n                <div className=\"content\">\r\n                  {docs.doc_publisher} / {docs.doc_host}\r\n                </div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 발행 면수</div>\r\n                <div className=\"content\">{docs.doc_page}</div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 발행 국가</div>\r\n                <div className=\"content\">{docs.doc_publish_country_list}</div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 정책 분류</div>\r\n                <div className=\"content\">{docs.doc_category_list}</div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 문서 유형 분류 / 내용 구분 분류</div>\r\n                <div className=\"content\">\r\n                  {docs.doc_content_type_list} / {docs.doc_content_category_list}\r\n                </div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 문서 토픽 분류</div>\r\n                <div className=\"content\">\r\n                  {docs.doc_topic_list}\r\n                </div>\r\n              </Info>\r\n\r\n              <Info>\r\n                <div className=\"title\">▶ 조사 과제 명 / 주문형 조사과제명의 세부과업명</div>\r\n                <div className=\"content\">\r\n                  {docs.doc_project} /\r\n                  {docs.doc_publishing}\r\n                </div>\r\n              </Info>\r\n              <Info>\r\n                <div className=\"title\">▶ 큐레이션 추천문서</div>\r\n                <div className=\"content\">\r\n                  {docs.doc_recomment}\r\n                </div>\r\n              </Info>\r\n            </ArticleInfo>\r\n          </ArticleInfoContainer>\r\n        </ArticleInfoWrapper>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 키워드</div>\r\n          <div className=\"contents\">\r\n            {docs.doc_keyword &&\r\n              docs.doc_keyword.map((item, index) => {\r\n                return (\r\n                  <div className=\"chip\" key={index}>\r\n                    {item}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 서지사항</div>\r\n          <div className=\"contents\">\r\n            {docs.doc_biblio}\r\n          </div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 문서 URL</div>\r\n          <div className=\"contents\">\r\n            <a target=\"_blank\" href={docs.doc_url}>\r\n              {docs.doc_url}\r\n            </a>\r\n          </div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 문서 안내 URL</div>\r\n          <div className=\"contents\">\r\n            <a target=\"_blank\" href={docs.doc_url_intro}>\r\n              {docs.doc_url_intro}\r\n            </a>\r\n          </div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 연관문서 이동</div>\r\n          <div className=\"contents\">\r\n            <a className=\"chip\" target=\"_blank\" href={docs.doc_relate_url}>\r\n              <AiOutlineLink />\r\n              {docs.doc_relate_title} ({docs.doc_relate_url})\r\n            </a>\r\n          </div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 묶음문서 이동</div>\r\n          <div className=\"contents\">\r\n            <a className=\"chip\" target=\"_blank\" href={docs.doc_bundle_url}>\r\n              <AiOutlineLink />\r\n              {docs.doc_bundle_title} ({docs.doc_bundle_url})\r\n            </a>\r\n          </div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 한글 요약</div>\r\n          <div className=\"contents\">{docs.doc_kor_summary}</div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 원문 요약</div>\r\n          <div className=\"contents\">{docs.doc_origin_summary}</div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <div className=\"title\">▶ 본문내용</div>\r\n        </ContentRow>\r\n        <ContentRow>\r\n          <Editor readOnly={true} data={docs.doc_content} />\r\n        </ContentRow>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\nconst ArticleActions = styled.div`\r\n  padding: 1rem 0 1rem 0;\r\n  border-bottom: solid 1px #d6d6d6;\r\n  button {\r\n    cursor: pointer;\r\n    margin-right: 1rem;\r\n    border: none;\r\n    width: 80px;\r\n    height: 35px;\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 90%;\r\n  margin: 3rem auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ArticleInfoWrapper = styled.div`\r\n  display: flex;\r\n  min-height: 27rem;\r\n  margin-bottom: 3rem;\r\n`;\r\nconst SubTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #009999;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  overflow: hidden;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 18rem;\r\n  max-height: 26rem;\r\n`;\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\nconst ArticleHeader = styled.div`\r\n  padding-bottom: 2rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n`;\r\nconst ArticleInfoContainer = styled.div`\r\n  margin-left: 3rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst ArticleInfo = styled.div`\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n`;\r\nconst Info = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n  margin-bottom: 1rem;\r\n  .title {\r\n    font-weight: bold;\r\n    color: rgb(153, 153, 153);\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst ContentRow = styled.div`\r\n  display: flex;\r\n  align-items: top;\r\n  font-size: 14px;\r\n  margin-bottom: 1rem;\r\n  .title {\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    color: rgb(153, 153, 153);\r\n    width: 10%;\r\n  }\r\n  .contents {\r\n    width: 90%;\r\n    display: flex;\r\n    align-content: space-around;\r\n    flex-wrap: wrap;\r\n  }\r\n  .chip {\r\n    padding: 3px 12px;\r\n    margin-bottom: 12px;\r\n    background-color: #eee;\r\n    margin-right: 1rem;\r\n    color:black;\r\n    text-decoration:none;\r\n    display:flex;\r\n    align-items:center;\r\n    * {\r\n      margin-right:4px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CurationDataDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CurationDataDetail from \"./CurationDataDetail\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { CrawlDataDetailFetchApi, sessionHandler } from \"../../../Utils/api\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction CurationDataDetailContainer() {\r\n  const statusCode = 8;\r\n  const permission = useSelector((state) => state.user.user.permission);\r\n  const { _id } = useParams();\r\n  const [docs, setDocs] = useState({}); // 폼에 default 값으로 출력할 데이터를 객체로 전달. 관리 편하게\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  /* 데이터 관리로 이동 */\r\n  const goDataManage = () => {\r\n    history.push(`/crawl/${statusCode}/${_id}`);\r\n  };\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = () => {\r\n    trackPromise(CrawlDataDetailFetchApi(statusCode, _id)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        dataCleansing(res.data);\r\n      })\r\n      .catch((err) => {\r\n        sessionHandler(err, dispatch).then((res) => {\r\n          CrawlDataDetailFetchApi(statusCode, _id).then((res) => {\r\n            dataCleansing(res.data);\r\n          });\r\n        });\r\n      }));\r\n  };\r\n\r\n  /* 데이터 정제하기 */\r\n  const dataCleansing = (rawData) => {\r\n    const _rawStatusDetailData = rawData.docs;\r\n    let _docs = {\r\n      doc_content: _rawStatusDetailData.doc_content || \"\",\r\n      doc_collect_date: _rawStatusDetailData.doc_collect_date || \"\",\r\n      doc_write_date: _rawStatusDetailData.doc_write_date || \"\",\r\n      doc_publish_date:_rawStatusDetailData.doc_publish_date || \"\",\r\n      doc_keyword: _rawStatusDetailData.doc_keyowrd,\r\n      doc_publisher: _rawStatusDetailData.doc_publisher || \"\",\r\n      doc_thumbnail:_rawStatusDetailData.doc_thumbnail,\r\n      doc_publish_country: _rawStatusDetailData.doc_publish_country || \"\",\r\n      doc_publish_country_list: _rawStatusDetailData.doc_publish_country.map(\r\n        (x) => x.CT_NM\r\n      ).join(\", \"),\r\n      doc_category: _rawStatusDetailData.doc_category,\r\n      doc_category_list: _rawStatusDetailData.doc_category.map((x) => x.CT_NM).join(\", \"),\r\n      doc_country: _rawStatusDetailData.doc_country,\r\n      doc_country_list: _rawStatusDetailData.doc_country.map((x) => x.CT_NM).join(\", \"),\r\n      doc_page: _rawStatusDetailData.doc_page || \"\",\r\n      doc_content_type: _rawStatusDetailData.doc_content_type||[],\r\n      doc_content_type_list:_rawStatusDetailData.doc_content_type.map((x) => x.CT_NM).join(\", \"),\r\n      doc_content_category:_rawStatusDetailData.doc_content_category || [],\r\n      doc_content_category_list:_rawStatusDetailData.doc_content_category.map((x) => x.CT_NM).join(\", \"),\r\n      doc_origin_title: _rawStatusDetailData.doc_origin_title || \"\",\r\n      doc_kor_title: _rawStatusDetailData.doc_kor_title || \"\",\r\n      doc_kor_summary: _rawStatusDetailData.doc_kor_summary || \"\",\r\n      doc_origin_summary:_rawStatusDetailData.doc_origin_summary || \"\",\r\n      doc_recomment:_rawStatusDetailData.doc_recomment || \"\",\r\n      doc_url: _rawStatusDetailData.doc_url || \"\",\r\n      doc_url_intro:_rawStatusDetailData.doc_url_intro || \"\",\r\n      doc_relate_title:_rawStatusDetailData.doc_relate_title || \"\",\r\n      doc_relate_url:_rawStatusDetailData.doc_relate_url||\"\",\r\n      doc_bundle_url:_rawStatusDetailData.doc_bundle_url || \"\",\r\n      doc_bundle_title:_rawStatusDetailData.doc_bundle_title || \"\",\r\n      doc_project:_rawStatusDetailData.doc_project || \"\",\r\n      doc_publishing : _rawStatusDetailData.doc_publishing || \"\",\r\n      doc_biblio:_rawStatusDetailData.doc_biblio || \"\",\r\n      doc_topic:_rawStatusDetailData.doc_topic || [],\r\n      doc_topic_list : _rawStatusDetailData.doc_topic.map((x) => x.CT_NM).join(\", \"),\r\n      doc_language : _rawStatusDetailData.doc_language || [],\r\n      doc_language_list: _rawStatusDetailData.doc_language.map((x) => x.CT_NM).join(\", \"),\r\n        doc_host:_rawStatusDetailData.doc_host.length!==0 ? _rawStatusDetailData.doc_host[0].HOST : \"\"\r\n    };\r\n    setDocs(_docs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataFetch();\r\n  }, [_id]);\r\n\r\n  return (\r\n    <>\r\n      <CurationDataDetail\r\n        docs={docs}\r\n        permission={permission}\r\n        goDataManage={goDataManage}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default CurationDataDetailContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FormHeader from \"../../Components/FormHeader\";\r\nimport CurationDataListContainer from \"../Common/CurationDataList/CurationDataListContainer\";\r\nfunction AdminCurationDataList() {\r\n  return (\r\n    <>\r\n      <FormHeader type=\"view\" title={\"큐레이션 데이터 조회\"} />\r\n      <Wrapper>\r\n        <CurationDataListContainer />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    margin:0 5rem 0 5rem;\r\n`;\r\n\r\nexport default AdminCurationDataList;\r\n","import React from \"react\";\r\nimport { Switch,Redirect } from \"react-router-dom\";\r\nimport PrivateRoute from \"../../Route/PrivateRoute\";\r\n\r\nimport CrawlDataDetailContainer from \"./CrawlDataDetail/CrawlDataDetailContainer\";\r\nimport CrawlDataScreeningContainer from \"./CrawlDataScreening/CrawlDataScreeningContainer\";\r\nimport CrawlDataListContainer from \"./CrawlDataList/CrawlDataListContainer\";\r\nimport ArchiveDataListContainer from \"./ArchiveDataList/ArchiveDataListContainer\";\r\nimport CurationDataListContainer from \"../Common/CurationDataList/CurationDataListContainer\";\r\nimport CurationDataDetailContainer from \"../Common/CurationDataDetail/CurationDataDetailContainer\";\r\nimport AdminCurationDataList from \"./AdminCurationDataList\";\r\n\r\nfunction WorkerSection() {\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute\r\n        path=\"/crawl/screening\"\r\n        component={CrawlDataScreeningContainer}\r\n        exact\r\n      />\r\n      <Redirect from=\"/crawl/3\" to=\"/crawl/2\" /> {/* statusCode 3번 , 5번 접근 방지*/}\r\n      <Redirect from=\"/crawl/5\" to=\"/crawl/4\" /> {/* statusCode 3번 , 5번 접근 방지*/}\r\n      <PrivateRoute\r\n        path=\"/crawl/:statusCode\"\r\n        component={CrawlDataListContainer}\r\n        exact\r\n      />\r\n      <PrivateRoute\r\n        path=\"/archive\"\r\n        component={ArchiveDataListContainer}\r\n        exact\r\n      />\r\n      <PrivateRoute\r\n        path=\"/crawl/:statusCode/:_id\"\r\n        component={CrawlDataDetailContainer}\r\n        exact\r\n      />\r\n      <PrivateRoute\r\n        path=\"/curation\"\r\n        component={AdminCurationDataList}\r\n        exact\r\n      />\r\n      <PrivateRoute\r\n        path=\"/curation/:_id\"\r\n        component={CurationDataDetailContainer}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default WorkerSection;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\r\nimport Pagination from \"../../../Components/Pagination\";\r\nimport NoData from \"../../../Components/NoData\";\r\nfunction UserArchiveDataList({\r\n  dcCount,\r\n  listSize,\r\n  pageNo,\r\n  setPageNo,\r\n  listSizeHandler,\r\n  archiveData,\r\n  curationRequest,\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      {archiveData.length === 0 ? (\r\n        <NoData />\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <RowContainer>\r\n            <Row>\r\n              <div className=\"result-count\">\r\n                <HiOutlineDocumentSearch />\r\n                검색 결과 ({dcCount}건)\r\n              </div>\r\n              <div className=\"action-group\">\r\n                <select className=\"list-size\" onChange={listSizeHandler}>\r\n                  <option disabled>리스트 사이즈</option>\r\n                  <option value={10}>10건</option>\r\n                  <option value={30}>30건</option>\r\n                  <option value={50}>50건</option>\r\n                </select>\r\n              </div>\r\n            </Row>\r\n          </RowContainer>\r\n          <ArchiveDataTable>\r\n            <colgroup>\r\n              <col style={{ width: \"10%\" }} />\r\n              <col style={{ width: \"40%\" }} />\r\n              <col style={{ width: \"15%\" }} />\r\n              <col style={{ width: \"15%\" }} />\r\n              <col style={{ width: \"10%\" }} />\r\n              <col style={{ width: \"10%\" }} />\r\n            </colgroup>\r\n            <thead>\r\n              <tr>\r\n                <th>순번</th>\r\n                <th>원문 제목</th>\r\n                <th>발행 기관명</th>\r\n                <th>원문 발행일</th>\r\n                <th>페이지 수</th>\r\n                <th>큐레이션 선정</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {archiveData.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{index+1}</td>\r\n                    <td>\r\n                      <a href={item.doc_url} target=\"_blank\">\r\n                        {item.doc_origin_title}\r\n                      </a>\r\n                    </td>\r\n                    <td></td>\r\n                    <td>{item.doc_publish_date}</td>\r\n                    <td>{item.doc_page}</td>\r\n                    <td>{item.status===6?<button onClick={()=>{curationRequest(item._id)}}>큐레이션 신청</button>:<Badge>큐레이션 신청됨</Badge>}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </ArchiveDataTable>\r\n          <Pagination\r\n            dcCount={dcCount}\r\n            listSize={listSize}\r\n            pageNo={pageNo}\r\n            setPageNo={setPageNo}\r\n          />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\nconst ArchiveDataTable = styled.table`\r\n  width: 100%;\r\n  table-layout: fixed;\r\n  border-collapse: collapse;\r\n  text-align: left;\r\n  font-size: 14px;\r\n  color: rgb(59, 59, 59);\r\n  th {\r\n    color: #323d4d;\r\n    background-color: #d8dee6;\r\n  }\r\n  th,\r\n  td {\r\n    border-bottom: 1px solid #d6d6d6;\r\n    padding: 10px;\r\n    a {\r\n      color: rgb(59, 59, 59);\r\n      text-decoration: none;\r\n    }\r\n    a:hover {\r\n      color: #009999;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  tr:first-child,\r\n  tr:last-child {\r\n    border: none;\r\n  }\r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n  }\r\n  button{\r\n    height: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: solid 1px rgba(0,0,0,0.1);\r\n    border-radius: 4px;\r\n    text-align:center;\r\n    &:hover{\r\n      cursor: pointer;\r\n      background-color:#d6d6d6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n`;\r\nconst Row = styled.div`\r\n  display: flex;\r\n  color: rgb(59, 59, 59);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: solid 1px #d6d6d6;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n  .result-count {\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    * {\r\n      padding-right: 0.5rem;\r\n    }\r\n  }\r\n  .action-group {\r\n    display: flex;\r\n  }\r\n  .list-size {\r\n    margin: 0 0.5rem 0 0.5rem;\r\n    padding: 0.5rem;\r\n    border: solid 1px #d6d6d6;\r\n  }\r\n`;\r\nconst Badge = styled.div`\r\n  background-color:rgba(67,82,105,0.5);\r\n  font-weight: bold;\r\n  color: rgba(67,82,105,1);\r\n  border-radius: 2px;\r\n  padding: 2px;\r\n  text-align:center;\r\n`;\r\nexport default UserArchiveDataList;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport CurationDataListContainer from \"../../Common/CurationDataList/CurationDataListContainer\";\r\nimport UserArchiveDataList from \"./UserArchiveDataList\";\r\nimport { HiOutlineArchive, HiOutlineDocumentDuplicate } from \"react-icons/hi\";\r\nfunction UserOnlyDataLookUpPage({\r\n  axisMenu,\r\n  menuClickHandler,\r\n  axisObj,\r\n  dataMode,\r\n  modeSwitchHandler,\r\n  dcCount,\r\n  listSize,\r\n  listSizeHandler,\r\n  pageNo,\r\n  setPageNo,\r\n  archiveData,\r\n  curationRequest\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <AxisTitle>전체</AxisTitle>\r\n      <AxisMenuBar axis=\"X\">\r\n        {axisMenu.X.map((category, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              onClick={() => {\r\n                menuClickHandler(\"X\", category);\r\n              }}\r\n            >\r\n              {category.ct_nm}\r\n            </div>\r\n          );\r\n        })}\r\n      </AxisMenuBar>\r\n      <AxisMenuBar axis=\"Y\">\r\n        {axisMenu.Y.map((category, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              onClick={() => {\r\n                menuClickHandler(\"Y\", category);\r\n              }}\r\n            >\r\n              {category.ct_nm}\r\n            </div>\r\n          );\r\n        })}\r\n      </AxisMenuBar>\r\n      <ContentBody>\r\n        {dataMode === \"archive\" ? (\r\n          <UserArchiveDataList\r\n            dcCount={dcCount}\r\n            listSize={listSize}\r\n            pageNo={pageNo}\r\n            setPageNo={setPageNo}\r\n            listSizeHandler={listSizeHandler}\r\n            archiveData={archiveData}\r\n            curationRequest={curationRequest}\r\n          />\r\n        ) : (\r\n          <CurationDataListContainer\r\n            className=\"list\"\r\n            axisObj={axisObj}\r\n          />\r\n        )}\r\n      </ContentBody>\r\n      <ModeSwitchButton onClick={modeSwitchHandler}>\r\n        {dataMode === \"archive\" ? (\r\n          <>\r\n            <HiOutlineDocumentDuplicate size=\"18\" />\r\n            큐레이션 보기\r\n          </>\r\n        ) : (\r\n          <>\r\n            <HiOutlineArchive size=\"18\" />\r\n            아카이브 보기\r\n          </>\r\n        )}\r\n      </ModeSwitchButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 200px auto;\r\n  grid-template-rows: 50px minmax(1280px, auto);\r\n`;\r\nconst ModeSwitchButton = styled.button`\r\n  display: flex;\r\n  position: fixed;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 10rem;\r\n  height: 3rem;\r\n  border: none;\r\n  border-radius: 3rem;\r\n  font-size: 14px;\r\n  background-color: #435269;\r\n  color: white;\r\n  border: solid 1px #d6d6d6;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  z-index: 999;\r\n  right: 3.5rem;\r\n  bottom: 0;\r\n  margin: 2rem;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    background-color: #d8dee6;\r\n    color: #435269;\r\n    font-weight: bold;\r\n  }\r\n  & * {\r\n    margin: 4px;\r\n  }\r\n`;\r\nconst AxisTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n  grid-column: 1 / 2;\r\n  grid-row: 1 / 2;\r\n  color: #009999;\r\n  font-weight: bold;\r\n`;\r\nconst AxisMenuBar = styled.div`\r\n  ${(props) =>\r\n    props.axis === \"X\" &&\r\n    css`\r\n      display: flex;\r\n      align-items: center;\r\n      flex-direction: row;\r\n      color: white;\r\n      background-color: #435269;\r\n      grid-column: 2 / 3;\r\n      grid-row: 1 / 2;\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        height: 100%;\r\n        padding-left: 2rem;\r\n        padding-right: 2rem;\r\n        text-align: center;\r\n        &:hover {\r\n          background-color: rgba(255, 255, 255, 0.2);\r\n        }\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.axis === \"Y\" &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      background-color: #eee;\r\n      grid-column: 1 / 2;\r\n      grid-row: 2 / 3;\r\n      div {\r\n        padding: 1rem 0.5rem 1rem 0.5rem;\r\n        text-align: center;\r\n        &:hover {\r\n          background-color: #d6d6d6;\r\n        }\r\n      }\r\n    `}\r\n`;\r\n\r\nconst ContentBody = styled.div`\r\n  grid-column: 2 / 3;\r\n  grid-row: 2 / 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0 5rem 0 5rem;\r\n`;\r\n\r\nexport default UserOnlyDataLookUpPage;\r\n","const SET_AXIS= \"custom/SET_AXIS\";\r\n\r\nexport const setAxis = (axisObj) => ({ type: SET_AXIS, axisObj });\r\n\r\nconst initialState = {\r\n    axisObj: { X: null, Y: null }, // 사용자의 커스텀 메뉴 정보를 담고있는 객체\r\n};\r\n\r\nexport default function user(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AXIS:\r\n      return {\r\n        ...state,\r\n        axisObj: action.axisObj,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UserOnlyDataLookUpPage from \"./UserOnlyDataLookUpPage\";\r\nimport {\r\n  userAxisMenuFetchApi,\r\n  CrawlDataListFetchApi,\r\n  curationRequestApi,\r\n  userCustomCurationDataFetchApi,\r\n  sessionHandler,\r\n} from \"../../../Utils/api\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setLogout } from \"../../../Modules/login\";\r\nimport { setAxis } from \"../../../Modules/custom\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UserOnlyDataLookUpPageContainer() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userInfo = useSelector((state) => state.user.user);\r\n  const axisObj = useSelector((state) => state.custom.axisObj);\r\n  const [axisMenu, setAxisMenu] = useState({ X: [], Y: [] });\r\n  const [dataMode, setDataMode] = useState(\"curation\"); // curation , archive\r\n\r\n  const [archiveData, setArchiveData] = useState([]);\r\n  /* 페이지네이션 */\r\n  const [dcCount, setDcCount] = useState(0); // document 총 개수\r\n  const [pageNo, setPageNo] = useState(1); // 현재 활성화 된 페이지 번호\r\n  const [listSize, setListSize] = useState(10); // 한 페이지에 나타낼 document 개수\r\n\r\n  const curationRequest = (id) => {\r\n    if (confirm(\"해당 아카이브 자료의 큐레이션을 신청하시겠습니까?\")) {\r\n      curationRequestApi(id).then((res) => {\r\n        if (res.status === 200) {\r\n          alert(\"성공적으로 신청되었습니다.\");\r\n          archiveDataFetch();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const initAxisObj = (setting) => {\r\n    const _axisObj = {\r\n      X: { type: setting.x_type, code: setting.x_code },\r\n      Y: { type: setting.y_type, code: setting.y_code },\r\n    };\r\n    dispatch(setAxis(_axisObj));\r\n  };\r\n  const menuDataFetch = (uid) => {\r\n    userAxisMenuFetchApi(uid).then((res) => {\r\n      if (res.data.axis_x.length === 0 || res.data.axis_y.lengtth === 0) {\r\n        alert(\"x축, y축 메뉴가 모두 설정되지 않은 사용자입니다.\");\r\n        dispatch(setLogout(\"NORMAL_LOGOUT\"));\r\n      } else {\r\n        const _axisMenu = { X: res.data.axis_x, Y: res.data.axis_y };\r\n        setAxisMenu(_axisMenu);\r\n        initAxisObj(res.data.setting[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const archiveDataFetch = () => {\r\n    if (axisObj.X !== null && axisObj.Y !== null) {\r\n      let axis = {};\r\n      axis[axisObj.X.type] = axisObj.X.code;\r\n      axis[axisObj.Y.type] = axisObj.Y.code;\r\n      trackPromise(\r\n        userCustomCurationDataFetchApi(axis,true)\r\n          .then((res) => {\r\n            dataCleansing(res.data);\r\n          })\r\n          .catch((err) => {\r\n            sessionHandler(err, dispatch).then((res) => {\r\n              userCustomCurationDataFetchApi(axis,true).then((res) => {\r\n                dataCleansing(res.data);\r\n              });\r\n            });\r\n          })\r\n      );\r\n    }\r\n  };\r\n  const dataCleansing = (rawData) => {\r\n    let _archiveDataList = [];\r\n    let _rawArchiveDataList = rawData.docs;\r\n    let _dcCount = rawData.dcCount;\r\n    _rawArchiveDataList.forEach((item) => {\r\n      const obj = {\r\n        _id: item._id,\r\n        doc_origin_title: item.doc_origin_title,\r\n        doc_page: item.doc_page,\r\n        doc_url: item.doc_url.replace(\"%3A\", \":\"),\r\n        doc_publish_date: item.doc_publish_date,\r\n        status: item.status,\r\n      };\r\n      _archiveDataList.push(obj);\r\n    });\r\n    setDcCount(_dcCount);\r\n    setArchiveData(_archiveDataList);\r\n  };\r\n\r\n  const modeSwitchHandler = () => {\r\n    if (dataMode === \"curation\") {\r\n      setDataMode(\"archive\");\r\n    } else {\r\n      setDataMode(\"curation\");\r\n    }\r\n  };\r\n  const menuClickHandler = (axis, item) => {\r\n    let _axisObj = { ...axisObj };\r\n    _axisObj[axis] = { type: item.type, code: item.code };\r\n    dispatch(setAxis(_axisObj));\r\n  };\r\n  const listSizeHandler = (e) => {\r\n    setListSize(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    menuDataFetch(userInfo.id);\r\n  }, [userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (dataMode === \"archive\") {\r\n      archiveDataFetch();\r\n    }\r\n  }, [dataMode, pageNo, listSize,axisObj]);\r\n\r\n  return (\r\n    <>\r\n      <UserOnlyDataLookUpPage\r\n        axisMenu={axisMenu}\r\n        menuClickHandler={menuClickHandler}\r\n        axisObj={axisObj}\r\n        modeSwitchHandler={modeSwitchHandler}\r\n        dataMode={dataMode}\r\n        dcCount={dcCount}\r\n        listSize={listSize}\r\n        listSizeHandler={listSizeHandler}\r\n        pageNo={pageNo}\r\n        setPageNo={setPageNo}\r\n        archiveData={archiveData}\r\n        curationRequest={curationRequest}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default UserOnlyDataLookUpPageContainer;\r\n","import React from \"react\";\r\nimport { Switch,Redirect } from \"react-router-dom\";\r\nimport PrivateRoute from \"../../Route/PrivateRoute\";\r\n\r\nimport UserOnlyDataLookUpPageContainer from \"./UserOnlyDataLookUpPage/UserOnlyDataLookUpPageContainer\"\r\nimport CurationDataDetailContainer from \"../Common/CurationDataDetail/CurationDataDetailContainer\"\r\nfunction UserSection() {\r\n  return (\r\n    <Switch>\r\n       <Redirect from=\"/home\" to=\"/library\" /> {/*사용자는 home에 접근 금지*/}\r\n      <PrivateRoute\r\n        path=\"/library\"\r\n        component={UserOnlyDataLookUpPageContainer}\r\n        exact\r\n      />\r\n      <PrivateRoute\r\n        path=\"/library/:_id\"\r\n        component={CurationDataDetailContainer}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default UserSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport { HiOutlineDocumentReport, HiOutlineDocumentText } from \"react-icons/hi\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport { RiFileExcel2Line, RiDeleteBinLine } from \"react-icons/ri\";\r\nimport {\r\n  AiOutlineFilePdf,\r\n  AiOutlineSearch,\r\n  AiOutlineCheckCircle,\r\n  AiOutlineCloseCircle,\r\n} from \"react-icons/ai\";\r\n\r\nfunction ExcelDataRegister({\r\n  readExcel,\r\n  nextStep,\r\n  prevStep,\r\n  step,\r\n  setExcelData,\r\n  readPdf,\r\n  pdfMetaData,\r\n  deletePdf,\r\n  excelData\r\n}) {\r\n  const [excelFilename, setExcelFilename] = useState(null);\r\n  const [pdfFilename, setPdfFilename] = useState(null);\r\n  const excelFileHandler = (e) => {\r\n    setExcelFilename(e.target.files[0].name);\r\n    readExcel(e);\r\n  };\r\n  const pdfFileHandler = (e) => {\r\n    if (e.target.files.length === 1) {\r\n      setPdfFilename(e.target.files[0].name);\r\n    } else {\r\n      setPdfFilename(\r\n        `${e.target.files[0].name} 외 ${e.target.files.length - 1}건`\r\n      );\r\n    }\r\n\r\n    readPdf(e);\r\n  };\r\n  const excelFileDelete = (e) => {\r\n    setExcelFilename(null);\r\n    setExcelData([]);\r\n  };\r\n  return (\r\n    <>\r\n      <FormHeader type={\"view\"} title={\"엑셀 데이터 등록\"} />\r\n      <Wrapper>\r\n        {step === 1 && (\r\n          <UploadContainer>\r\n            <HeaderContainer color=\"#217346\">\r\n              <div className=\"step\">STEP 1</div>\r\n              <div className=\"title\">\r\n                <FaCloudUploadAlt size=\"30\" color=\"#fff\" />\r\n                <div className=\"bold\">EXCEL</div>\r\n                <div>파일 업로드</div>\r\n              </div>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n              <RiFileExcel2Line size=\"100\" color=\"#d6d6d6\" />\r\n              <div className=\"explain\">\r\n                <span className=\"emphasis\">DB 제출용 포맷</span>\r\n                <span>에 맞추어진 </span>\r\n                <span className=\"emphasis\">엑셀 파일</span>\r\n                <span>을 업로드 후 다음 단계를 진행해주세요.</span>\r\n              </div>\r\n              <div className=\"upload\">\r\n                <div className=\"select-file\">\r\n                  <label htmlFor=\"excelFile\">파일 선택</label>\r\n                  <input\r\n                    onChange={excelFileHandler}\r\n                    type=\"file\"\r\n                    id=\"excelFile\"\r\n                    accept=\".csv , .xls , .xlsx\"\r\n                  />\r\n                  <span>{excelFilename || \"엑셀 파일을 등록해주세요.\"}</span>\r\n                </div>\r\n                <button className=\"delete-button\" onClick={excelFileDelete}>\r\n                  삭제\r\n                </button>\r\n              </div>\r\n            </BodyContainer>\r\n          </UploadContainer>\r\n        )}\r\n        {step === 2 && (\r\n          <UploadContainer>\r\n            <HeaderContainer color=\"#c83636\">\r\n              <div className=\"step\">STEP 2</div>\r\n              <div className=\"title\">\r\n                <FaCloudUploadAlt size=\"30\" color=\"#fff\" />\r\n                <div className=\"bold\">PDF</div>\r\n                <div>파일 업로드</div>\r\n              </div>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n              <AiOutlineFilePdf size=\"100\" color=\"#d6d6d6\" />\r\n              <div className=\"explain\">\r\n                <span className=\"emphasis\">PDF파일</span>\r\n                <span>을 업로드 해주세요.</span>\r\n              </div>\r\n              <div className=\"upload\">\r\n                <div className=\"select-file\">\r\n                  <label htmlFor=\"pdfFile\">파일 선택</label>\r\n                  <input\r\n                    onChange={pdfFileHandler}\r\n                    type=\"file\"\r\n                    id=\"pdfFile\"\r\n                    accept=\".pdf\"\r\n                    multiple=\"multiple\"\r\n                  />\r\n                  <span>{pdfFilename || \"PDF 파일을 등록해주세요.\"}</span>\r\n                </div>\r\n                <button className=\"upload-button\">데이터 등록</button>\r\n              </div>\r\n            </BodyContainer>\r\n          </UploadContainer>\r\n        )}\r\n        {step === 3 && (\r\n          <UploadContainer>\r\n            <HeaderContainer color=\"#435269\">\r\n              <div className=\"step\">STEP 3</div>\r\n              <div className=\"title\">\r\n                <AiOutlineSearch size=\"30\" color=\"#fff\" />\r\n                <div className=\"bold\">PDF 및 EXCEL</div>\r\n                <div>검토</div>\r\n              </div>\r\n            </HeaderContainer>\r\n\r\n            <BodyContainer>\r\n              <div className=\"explain\">\r\n                <span className=\"emphasis\">EXCEL 파일</span>\r\n                <span>과 </span>\r\n                <span className=\"emphasis\">PDF 파일</span>\r\n                <span>\r\n                  을 대조한 결과 입니다. 파일을 검토하여 적절하지 못한 파일은\r\n                  삭제하여주세요. PDF가 등록된 문서만 등록됩니다.\r\n                </span>\r\n              </div>\r\n              <FileList>\r\n                {pdfMetaData.map((file, index) => {\r\n                  return (\r\n                    <FileCard>\r\n                      <div className=\"file-container\">\r\n                        <HiOutlineDocumentText size=\"40\" color=\"#d6d6d6\" />\r\n                        <div className=\"file-info\">\r\n                          <div>{file.name}</div>\r\n                          <div>{file.size}</div>\r\n                        </div>\r\n                      </div>\r\n                      {file.available ? (\r\n                        <div className=\"file-availability\">\r\n                          <AiOutlineCheckCircle size=\"24\" color=\"#6DAF44\" />\r\n                          <div>작업 가능</div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"file-availability\">\r\n                          <AiOutlineCloseCircle size=\"20\" color=\"#d0021b\" />\r\n                          <div>EXCEL과 매치 불가</div>\r\n                        </div>\r\n                      )}\r\n                      <button onClick={()=>{deletePdf(file.name)}}className=\"file-delete-button\">\r\n                        <RiDeleteBinLine color=\"#fff\" size=\"20\" />\r\n                      </button>\r\n                    </FileCard>\r\n                  );\r\n                })}\r\n              </FileList>\r\n            </BodyContainer>\r\n          </UploadContainer>\r\n        )}\r\n        <ButtonContainer>\r\n          {step !== 1 && <button onClick={prevStep}>{\"< 이전 단계\"}</button>}\r\n          <button onClick={nextStep}>{\"다음 단계 >\"}</button>\r\n        </ButtonContainer>\r\n        <UploadContainer>\r\n          <HeaderContainer color=\"#565656\">\r\n            <div className=\"title\">\r\n              <HiOutlineDocumentReport size=\"30\" color=\"#fff\" />\r\n              <div>데이터 등록</div>\r\n              <div className=\"bold\">진행 상황</div>\r\n            </div>\r\n          </HeaderContainer>\r\n          <BodyContainer>\r\n            <div className=\"explain\">\r\n              <span>\r\n                등록한 PDF파일과 EXCEL파일의 데이터 등록 진행상황을 확인하세요.\r\n              </span>\r\n            </div>\r\n          </BodyContainer>\r\n        </UploadContainer>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  button {\r\n    background-color: grey;\r\n    color: white;\r\n    font-weight: bold;\r\n    margin-left: 0.5rem;\r\n    margin-right: 0.5rem;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 10rem;\r\n    border-radius: 4px;\r\n    height: 2rem;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      background-color: #d6d6d6;\r\n    }\r\n  }\r\n`;\r\nconst FileList = styled.div`\r\n  width: 90%;\r\n  margin: 2rem auto;\r\n`;\r\nconst FileCard = styled.div`\r\n  border-radius: 4px;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  padding: 0.5rem 1rem 0.5rem 1rem;\r\n  width: 100%;\r\n  margin: 1rem 0 1rem 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .file-container {\r\n    display: flex;\r\n  }\r\n  .file-info {\r\n    margin-left: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    div:nth-child(2) {\r\n      color: #363636;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  .file-availability {\r\n    display: flex;\r\n    align-items: center;\r\n    div {\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n  .file-delete-button {\r\n    background-color: #d0021b;\r\n    border: none;\r\n    width: 0;\r\n    border-radius: 40px;\r\n    display: none;\r\n    cursor:pointer;\r\n  }\r\n  &:hover {\r\n    .file-delete-button {\r\n      display: block;\r\n      width: 2.5rem;\r\n    }\r\n    .file-availability{\r\n      display:none;\r\n    }\r\n  }\r\n`;\r\nconst Wrapper = styled.div``;\r\nconst UploadContainer = styled.div`\r\n  @keyframes loadEffect2 {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translateX(-30px);\r\n    }\r\n    50% {\r\n      opacity: 0.5;\r\n      transform: translateX(30px);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: translateX(0px);\r\n    }\r\n  }\r\n  animation: 0.6s ease-in-out loadEffect2;\r\n  border-radius: 4px;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  margin: 1rem;\r\n`;\r\nconst HeaderContainer = styled.div`\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  div {\r\n    font-size: 24px;\r\n  }\r\n  .bold {\r\n    font-weight: bold;\r\n  }\r\n  .step {\r\n    font-size: 18px;\r\n    border-top-left-radius: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: 2rem;\r\n    padding-left: 2rem;\r\n    height: 100%;\r\n    background-color: grey;\r\n    /* background-color: #435269; */\r\n  }\r\n  .title {\r\n    display: flex;\r\n    margin-left: 1rem;\r\n    div {\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  color: white;\r\n  height: 3rem;\r\n`;\r\nconst BodyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: right;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  min-height: 20rem;\r\n  .explain {\r\n    margin: 1rem;\r\n  }\r\n  .emphasis {\r\n    font-weight: bold;\r\n  }\r\n  .upload {\r\n    display: flex;\r\n    height: 32px;\r\n  }\r\n  .upload-button,\r\n  .delete-button {\r\n    margin-left: 1rem;\r\n    border: none;\r\n    padding: 0 1rem 0 1rem;\r\n    border-radius: 5px;\r\n    background-color: grey;\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n  }\r\n  .select-file {\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    border: solid 1px #d6d6d6;\r\n    label {\r\n      display: flex;\r\n      align-items: center;\r\n      background: #eee;\r\n      height: 100%;\r\n      cursor: pointer;\r\n      padding-left: 1rem;\r\n      padding-right: 1rem;\r\n      width: 5rem;\r\n      justify-content: center;\r\n    }\r\n    span {\r\n      padding-left: 1rem;\r\n      padding-right: 1rem;\r\n      min-width: 15rem;\r\n      max-width: 20rem;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n    input[type=\"file\"] {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ExcelDataRegister;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ExcelDataRegister from \"./ExcelDataRegister\";\r\nimport XLSX from \"xlsx\";\r\nimport { uploadExcelDataApi, categoryListFetchApi } from \"../../../Utils/api\";\r\nimport resolve from \"resolve\";\r\n\r\nfunction ExcelDataRegisterContainer() {\r\n  const [excelData, setExcelData] = useState([]);\r\n  const [pdfData, setPdfData] = useState([]);\r\n  const [pdfMetaData, setPdfMetaData] = useState([]);\r\n  const [step, setStep] = useState(1);\r\n\r\n  function getfileSize(x) {\r\n    var s = [\"bytes\", \"kB\", \"MB\", \"GB\", \"TB\", \"PB\"];\r\n    var e = Math.floor(Math.log(x) / Math.log(1024));\r\n    return (x / Math.pow(1024, e)).toFixed(2) + \" \" + s[e];\r\n  }\r\n\r\n  const deletePdf = (name) => {\r\n    if (confirm(\"해당 PDF파일을 목록에서 제거하시겠습니까?\")) {\r\n      const _newPdfData = pdfData.filter((file) => file.name !== name);\r\n      const _newPdfMetaData = pdfMetaData.filter((file) => file.name !== name);\r\n      setPdfData(_newPdfData);\r\n      setPdfMetaData(_newPdfMetaData);\r\n    }\r\n  };\r\n  const readPdf = (e) => {\r\n    const files = e.target.files;\r\n    const _pdfData = [];\r\n    const _pdfMetaData = [];\r\n    for (const file of files) {\r\n      const available = excelData.filter(\r\n        (data) => data.pdf === file.name.replace(/(.pdf)$/, \"\")\r\n      );\r\n      const _obj = {\r\n        size: getfileSize(file.size),\r\n        name: file.name.replace(/(.pdf)$/, \"\"),\r\n        available: available.length !== 0,\r\n      };\r\n      _pdfData.push(file);\r\n      _pdfMetaData.push(_obj);\r\n    }\r\n\r\n    setPdfData(_pdfData);\r\n    setPdfMetaData(_pdfMetaData);\r\n  };\r\n  const readExcel = (e) => {\r\n    let input = e.target;\r\n    let reader = new FileReader();\r\n    reader.onload = function () {\r\n      let data = reader.result;\r\n      let _excelData = [];\r\n      const excelFile = XLSX.read(data, { type: \"binary\" });\r\n      const sheetName = excelFile.SheetNames[0];\r\n      const firstSheet = excelFile.Sheets[sheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet, { defval: \"\" });\r\n\r\n      jsonData.map((item) => {\r\n        _excelData.push({\r\n          item_id: item[\"1\"] === \"\" ? null : item[\"1\"],\r\n          is_crawled: item[\"2\"] === \"\" ? null : item[\"2\"],\r\n          status: item[\"3\"] === \"\" ? null : item[\"3\"],\r\n          doc_thumbnail: item[\"4\"] === \"\" ? null : item[\"4\"],\r\n          doc_file: item[\"5\"] === \"\" ? null : item[\"5\"],\r\n          doc_origin_title: item[\"6\"] === \"\" ? null : item[\"6\"],\r\n          doc_kor_title: item[\"7\"] === \"\" ? null : item[\"7\"],\r\n          doc_kor_summary: item[\"8\"] === \"\" ? null : item[\"8\"],\r\n          doc_publish_date:\r\n            item[\"9\"] === \"\"\r\n              ? null\r\n              : item[\"9\"]\r\n                  .split(\".\")\r\n                  .filter((item) => item !== \"\")\r\n                  .join(\"-\"), // 날짜형식 수정\r\n          doc_write_date:\r\n            item[\"10\"] === \"\"\r\n              ? null\r\n              : item[\"10\"]\r\n                  .split(\".\")\r\n                  .filter((item) => item !== \"\")\r\n                  .join(\"-\"),\r\n          doc_collect_date:\r\n            item[\"11\"] === \"\"\r\n              ? null\r\n              : item[\"11\"]\r\n                  .split(\".\")\r\n                  .filter((item) => item !== \"\")\r\n                  .join(\"-\"),\r\n          doc_url: item[\"12\"] === \"\" ? null : item[\"12\"],\r\n          doc_url_intro: item[\"13\"] === \"\" ? null : item[\"13\"],\r\n          doc_bundle_title: item[\"14\"] === \"\" ? null : item[\"14\"],\r\n          doc_bundle_url: item[\"15\"] === \"\" ? null : item[\"15\"],\r\n          doc_relate_title: item[\"16\"] === \"\" ? null : item[\"16\"],\r\n          doc_relate_url: item[\"17\"] === \"\" ? null : item[\"17\"],\r\n          doc_publisher: item[\"18\"] === \"\" ? null : item[\"18\"],\r\n          doc_page: item[\"19\"] === \"\" ? null : item[\"19\"],\r\n          doc_biblio: item[\"20\"] === \"\" ? null : item[\"20\"],\r\n          doc_content_type: item[\"21\"] === \"\" ? null : item[\"21\"].split(\", \"),\r\n          doc_content_category:\r\n            item[\"22\"] === \"\" ? null : item[\"22\"].split(\", \"),\r\n          doc_language: item[\"23\"] === \"\" ? null : item[\"23\"].split(\", \"),\r\n          doc_publish_country:\r\n            item[\"24\"] === \"\" ? null : item[\"24\"].split(\", \"),\r\n          doc_country: item[\"25\"] === \"\" ? null : item[\"25\"].split(\", \"),\r\n          doc_keyowrd: item[\"26\"] === \"\" ? null : item[\"26\"].split(\", \"),\r\n          doc_content: item[\"27\"] === \"\" ? null : item[\"27\"],\r\n          doc_hit: item[\"28\"] === \"\" ? null : item[\"28\"],\r\n          doc_host: item[\"29\"] === \"\" ? null : item[\"29\"],\r\n          doc_register_date:\r\n            item[\"30\"] === \"\"\r\n              ? null\r\n              : item[\"30\"]\r\n                  .split(\".\")\r\n                  .filter((item) => item !== \"\")\r\n                  .join(\"-\"),\r\n          doc_modify_date:\r\n            item[\"31\"] === \"\"\r\n              ? null\r\n              : item[\"31\"]\r\n                  .split(\".\")\r\n                  .filter((item) => item !== \"\")\r\n                  .join(\"-\"),\r\n          doc_origin_summary: item[\"32\"] === \"\" ? null : item[\"32\"],\r\n          doc_category:\r\n            item[\"33\"] === \"\"\r\n              ? null\r\n              : item[\"33\"].replaceAll('\"', \"\").split(\", \"), // 쌍따옴표 제거\r\n          doc_topic: item[\"34\"] === \"\" ? null : item[\"34\"].split(\", \"),\r\n          doc_project: item[\"35\"] === \"\" ? null : item[\"35\"],\r\n          doc_custom: item[\"36\"] === \"\" ? null : item[\"36\"].split(\", \"),\r\n          doc_publishing: item[\"37\"] === \"\" ? null : item[\"37\"],\r\n          doc_recomment: item[\"38\"] === \"\" ? null : item[\"38\"],\r\n          doc_memo: item[\"39\"] === \"\" ? null : item[\"39\"],\r\n          pdf: item[\"pdf\"] === \"\" ? null : item[\"pdf\"],\r\n        });\r\n      });\r\n      setExcelData(_excelData);\r\n    };\r\n    reader.readAsBinaryString(input.files[0]);\r\n  };\r\n\r\n  const regiExcel = () => {\r\n    if (excelData.length === 0) {\r\n      alert(\"등록할 데이터가 없습니다.\");\r\n    } else {\r\n      alert(\"성공적으로 엑셀 데이터가 로딩되었습니다.\");\r\n    }\r\n  };\r\n  const upload = () => {\r\n    const files = new FormData();\r\n    pdfData.forEach((pdf) => {\r\n      files.append(\"files\", pdf);\r\n    });\r\n    files.append(\"meta\", JSON.stringify(excelData));\r\n    uploadExcelDataApi(files).then((res) => {});\r\n  };\r\n  const nextStep = () => {\r\n    if (step === 1 && excelData.length === 0) {\r\n      alert(\"엑셀 데이터 등록 해주세요.\");\r\n      return;\r\n    }\r\n    if (step === 2 && pdfData.length === 0) {\r\n      alert(\"PDF 파일을 등록 해주세요.\");\r\n      return;\r\n    }\r\n    if (step === 3) {\r\n      upload();\r\n      return;\r\n    }\r\n    setStep((prev) => prev + 1);\r\n  };\r\n  const prevStep = () => {\r\n    if (step === 1) {\r\n      return;\r\n    }\r\n    setStep((prev) => prev - 1);\r\n  };\r\n\r\n  const findCategoryCode = async (\r\n    카테고리타입,\r\n    분류리스트\r\n  ) => {\r\n    let 대분류UpperCode = 0;\r\n    let 중분류UpperCode = 0;\r\n    let 소분류Code = 0;\r\n    if (!분류리스트[0]) {\r\n      // 대분류값을 엑셀에 입력하지 않음\r\n      console.log(\"대분류 입력 값이 없습니다\");\r\n      return null;\r\n    } else {\r\n      // 대분류 값을 엑셀에 입력 하였음\r\n      let 대분류 = await categoryListFetchApi(카테고리타입, 2);\r\n      let 대분류검색결과 = 대분류.data.find((item) => {\r\n        return item.CT_NM === 분류리스트[0];\r\n      });\r\n     // console.log(대분류검색결과)\r\n      if (대분류검색결과) {\r\n        // 검색 결과 대분류가 존재 한다면?\r\n        대분류UpperCode = 대분류검색결과.CODE;\r\n        //console.log(대분류UpperCode);\r\n\r\n        if (!분류리스트[1]) {\r\n          // 중분류 값을 엑셀에 입력하지 않음\r\n          console.log(\"중분류 입력 값이 없습니다\");\r\n          return 대분류UpperCode;\r\n        } else {\r\n          let 중분류 = await categoryListFetchApi(\r\n            카테고리타입,\r\n            4,\r\n            대분류UpperCode\r\n          );\r\n          let 중분류검색결과 = 중분류.data.find((item) => {\r\n            return item.CT_NM === 분류리스트[1];\r\n          });\r\n          //console.log(중분류검색결과)\r\n          if (중분류검색결과) {\r\n            // 검색 결과 대분류가 존재 한다면?\r\n            중분류UpperCode = 중분류검색결과.CODE;\r\n            //console.log(중분류UpperCode);\r\n\r\n            if (!분류리스트[2]) {\r\n              console.log(\"소분류 입력 값이 없습니다\");\r\n              return 중분류UpperCode;\r\n            } else {\r\n              let 소분류 = await categoryListFetchApi(\r\n                카테고리타입,\r\n                6,\r\n                중분류UpperCode\r\n              );\r\n              let 소분류검색결과 = 소분류.data.find((item) => {\r\n                return item.CT_NM === 분류리스트[2];\r\n              });\r\n              if(소분류검색결과){\r\n                소분류Code = 소분류검색결과.CODE;\r\n                //console.log(소분류Code);\r\n                return 소분류Code\r\n              }\r\n              else{\r\n                console.log(\"등록되지 않은 소분류 입니다.\")\r\n                return 중분류UpperCode;\r\n              }\r\n            }\r\n          } else {\r\n            console.log(\"등록되지 않은 중분류 입니다.\");\r\n            return 대분류UpperCode;\r\n          }\r\n        }\r\n      } else {\r\n        // 등록되지 않은 대분류 라면\r\n        console.log(\"등록되지 않은 대분류 입니다\");\r\n        resolve(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect( () => {\r\n    const str = \"기획재정-경제일반-그결과는/국정일반-없는중분류/외교안보\";\r\n    const arr1 = str.split(\"/\")\r\n  }, []);\r\n  return (\r\n    <>\r\n      <ExcelDataRegister\r\n        readPdf={readPdf}\r\n        setExcelData={setExcelData}\r\n        readExcel={readExcel}\r\n        regiExcel={regiExcel}\r\n        nextStep={nextStep}\r\n        prevStep={prevStep}\r\n        step={step}\r\n        pdfMetaData={pdfMetaData}\r\n        deletePdf={deletePdf}\r\n        excelData={excelData}\r\n        pdfData={pdfData}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default ExcelDataRegisterContainer;\r\n","import React from \"react\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  AiOutlineUserDelete,\r\n  AiOutlineUserAdd,\r\n  AiOutlineStop,\r\n  AiOutlineStepForward,\r\n} from \"react-icons/ai\";\r\nimport { RiUserSettingsLine } from \"react-icons/ri\";\r\nfunction UserManagement({\r\n  userData,\r\n  openUserModifyModal,\r\n  deleteUser,\r\n  restrictUser,\r\n  openUserAddModal,\r\n  PERMISSON_DATA\r\n}) {\r\n  return (\r\n    <>\r\n      <FormHeader type={\"view\"} title={\"사용자 관리\"} />\r\n      \r\n      <TableWrapper>\r\n        <CustomTable>\r\n          <colgroup>\r\n            <col style={{ width: \"5%\" }} />\r\n            <col style={{ width: \"10%\" }} />\r\n            <col style={{ width: \"10%\" }} />\r\n            <col style={{ width: \"10%\" }} />\r\n            <col style={{ width: \"10%\" }} />\r\n            <col style={{ width: \"10%\" }} />\r\n            <col style={{ width: \"10%\" }} />\r\n            <col style={{ width: \"12%\" }} />\r\n            <col style={{ width: \"8%\" }} />\r\n            <col style={{ width: \"20%\" }} />\r\n          </colgroup>\r\n\r\n          <thead>\r\n            <tr>\r\n              <th>UID</th>\r\n              <th>사용자 ID</th>\r\n              <th>사용자 이름</th>\r\n              <th>이메일</th>\r\n              <th>연락처</th>\r\n              <th>소속</th>\r\n              <th>직책</th>\r\n              <th>계정 생성일</th>\r\n              <th>사용자 권한</th>\r\n              <th>관리</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userData.map((user, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.userID}</td>\r\n                  <td>{user.Name}</td>\r\n                  <td>{user.Email}</td>\r\n                  <td>{user.Tel}</td>\r\n                  <td>{user.Company}</td>\r\n                  <td>{user.Position}</td>\r\n                  <td>{user.CreateAt.substring(0, 19).replace(\"T\", \" \")}</td>\r\n                  <td>{PERMISSON_DATA[user.Category]}</td>\r\n                  <td>\r\n                    <ButtonWrapper>\r\n                      <Button\r\n                        onClick={() => {\r\n                          openUserModifyModal(user);\r\n                        }}\r\n                      >\r\n                        <RiUserSettingsLine size=\"22\" color=\"white\" />\r\n                        <p>수정</p>\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          deleteUser(user.id);\r\n                        }}\r\n                      >\r\n                        <AiOutlineUserDelete size=\"22\" color=\"white\" />\r\n                        <p>삭제</p>\r\n                      </Button>\r\n                      {user.stat ? (\r\n                        <>\r\n                        <Button\r\n                          onClick={() => {\r\n                            restrictUser(user.id,false);\r\n                          }}\r\n                        >\r\n                        <AiOutlineStepForward size=\"22\" color=\"white\" />\r\n                          <p>재개</p>\r\n                        </Button></>\r\n                      ) : (\r\n                        <>\r\n                        <Button\r\n                          onClick={() => {\r\n                            restrictUser(user.id,true);\r\n                          }}\r\n                        >\r\n                        <AiOutlineStop size=\"22\" color=\"white\" />\r\n                          <p>중지</p>\r\n                        </Button></>\r\n                      )}\r\n                    </ButtonWrapper>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </CustomTable>\r\n      </TableWrapper>\r\n      <Button\r\n        color=\"#435269\"\r\n        onClick={() => {\r\n          openUserAddModal();\r\n        }}\r\n      >\r\n        <AiOutlineUserAdd size=\"22\" color=\"white\" />\r\n        <p>사용자 추가</p>\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.3rem 1rem 0.3rem 1rem;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: ${(props) => props.color || \"grey\"};\r\n  cursor: pointer;\r\n  min-width: 5rem;\r\n  p {\r\n    margin-left: 0.5rem;\r\n    font-size: 12px;\r\n    font-weight: bold;\r\n    color: white;\r\n  }\r\n`;\r\nconst TableWrapper = styled.div`\r\n  width: 100%;\r\n  max-height: 65rem;\r\n  overflow: auto;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n`;\r\nconst CustomTable = styled.table`\r\n  width: 100%;\r\n  text-align: center;\r\n  border-collapse: collapse;\r\n  thead {\r\n    border-bottom: solid 1px #d6d6d6;\r\n    position: sticky;\r\n    top: 0px;\r\n    background-color: white;\r\n  }\r\n  tr {\r\n    height: 2.5rem;\r\n  }\r\n  tr:nth-child(2n) {\r\n    background-color: #eee;\r\n  }\r\n  input[type=\"checkbox\"] {\r\n    width: 20px; /*Desired width*/\r\n    height: 20px; /*Desired height*/\r\n  }\r\n`;\r\n\r\nexport default UserManagement;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  FetchUsersApi,\r\n  deleteUserByIdApi,\r\n  sessionHandler,\r\n  restrictUserApi,\r\n} from \"../../../Utils/api\";\r\nimport UserManagement from \"./UserManagement\";\r\nimport { setModal, setModalData } from \"../../../Modules/modal\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction UserManagementContainer() {\r\n  const [userData, setUserData] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const PERMISSON_DATA = {\r\n    0: \"사용자\",\r\n    1: \"스크리닝 작업자\",\r\n    2: \"정제 작업자\",\r\n    3: \"등록 작업자\",\r\n    4: \"큐레이션 작업자\",\r\n    9: \"관리자\",\r\n  };\r\n\r\n  const openUserModifyModal = (user) => {\r\n    dispatch(setModal(\"UserInfoModal\"));\r\n    dispatch(setModalData({ user, type: false }, \"modal_user\"));\r\n  };\r\n  const openUserAddModal = () => {\r\n    dispatch(setModal(\"UserInfoModal\"));\r\n    dispatch(setModalData({ user: [], type: true }, \"modal_user\"));\r\n  };\r\n\r\n  const getUserList = () => {\r\n    trackPromise(FetchUsersApi()\r\n      .then((res) => {\r\n        setUserData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        sessionHandler(err, dispatch).then((res) => {\r\n          FetchUsersApi().then((res) => {\r\n            setUserData(res.data);\r\n          });\r\n        });\r\n      }));\r\n  };\r\n  const deleteUser = (id) => {\r\n    if (confirm(\"삭제하시겠습니까?\")) {\r\n      deleteUserByIdApi(id)\r\n        .then((res) => {\r\n          alert(\"성공적으로 삭제되었습니다\");\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 400) {\r\n            alert(\"유저 정보 변경 중 오류발생\");\r\n          }\r\n        });\r\n      window.location.reload(); //\r\n    }\r\n  };\r\n  const restrictUser = (id,restrict) => {\r\n    restrictUserApi(id,restrict)\r\n    .then(()=>{\r\n      alert(\"성공적으로 수행되었습니다\");\r\n    })\r\n    .catch((err)=>{\r\n      if (err.response.status === 400) {\r\n        alert(\"유저 정보 변경 중 오류발생\");\r\n      }\r\n    })\r\n    window.location.reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserList();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <UserManagement\r\n        userData={userData}\r\n        openUserModifyModal={openUserModifyModal}\r\n        deleteUser={deleteUser}\r\n        restrictUser={restrictUser}\r\n        openUserAddModal={openUserAddModal}\r\n        PERMISSON_DATA={PERMISSON_DATA}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nfunction TitleCard({ children, title, subtitle }) {\r\n  return (\r\n    <CardWrapper>\r\n      <div className=\"title\">\r\n        <div className=\"title-main\">{title}</div>\r\n        <div className=\"title-sub\">{subtitle}</div>\r\n      </div>\r\n      <div className=\"content\">{children}</div>\r\n    </CardWrapper>\r\n  );\r\n}\r\n\r\nconst CardWrapper = styled.div`\r\n  margin: 1rem 0.5rem 1rem 0.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  background-color: white;\r\n  .title {\r\n    border-bottom: 1px solid #e6e9ed;\r\n    padding: 1rem;\r\n  }\r\n  .title-main {\r\n    font-size: 18px;\r\n    color: rgb(59, 59, 59);\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  .title-sub {\r\n    font-size: 12px;\r\n    color: #939ba2;\r\n  }\r\n  .content {\r\n    height: 100%;\r\n    padding:1rem;\r\n  }\r\n`;\r\nexport default TitleCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction DocumentStatCard({ countryDocumentData }) {\r\n  return (\r\n    <CardWrapper>\r\n      <div className=\"title\">\r\n        {countryDocumentData === null ? (\r\n          <div className=\"title-main\">국가를 지도에서 선택해주세요!</div>\r\n        ) : (\r\n          <>\r\n            <div className=\"title-main\">{countryDocumentData.country}</div>\r\n            <div className=\"title-sub\">의 문서 현황입니다.</div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {countryDocumentData === null ? (\r\n          <div className=\"stat-list\">표시할 값이 없습니다.</div>\r\n        ) : (\r\n          <div className=\"stat-list\">\r\n          <div className=\"stat\">\r\n            <div className=\"stat-title\">수집 문서 수</div>\r\n            <div className=\"stat-count\">{countryDocumentData.data.collect}</div>\r\n          </div>\r\n          <div className=\"stat\">\r\n            <div className=\"stat-title\">스크리닝 완료 (정제) 문서 수</div>\r\n            <div className=\"stat-count\">{countryDocumentData.data.screening}</div>\r\n          </div>\r\n          <div className=\"stat\">\r\n            <div className=\"stat-title\">정제 완료 (등록) 문서 수</div>\r\n            <div className=\"stat-count\">{countryDocumentData.data.refine}</div>\r\n          </div>\r\n          <div className=\"stat\">\r\n            <div className=\"stat-title\">등록 완료 (아카이브) 문서 수</div>\r\n            <div className=\"stat-count\">{countryDocumentData.data.register}</div>\r\n          </div>\r\n          <div className=\"stat\">\r\n            <div className=\"stat-title\">큐레이션 완료 (큐레이션) 문서 수</div>\r\n            <div className=\"stat-count\">{countryDocumentData.data.curation}</div>\r\n          </div>\r\n        </div>\r\n        )}\r\n\r\n     \r\n    </CardWrapper>\r\n  );\r\n}\r\n\r\nconst CardWrapper = styled.div`\r\n  margin: 1rem 0.5rem 1rem 0.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  background-color: white;\r\n  color: rgb(59, 59, 59);\r\n  .title {\r\n    border-bottom: 1px solid #e6e9ed;\r\n    padding: 1rem;\r\n  }\r\n  .title-main {\r\n    font-size: 18px;\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  .title-sub {\r\n    font-size: 12px;\r\n    color: #939ba2;\r\n  }\r\n  .stat {\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .stat-title {\r\n      font-size: 14px;\r\n    }\r\n    .stat-count {\r\n      font-size: 20px;\r\n      font-weight: bold;\r\n      color: #435269;\r\n    }\r\n  }\r\n  .stat-list {\r\n    padding: 1rem;\r\n    min-height:10rem;\r\n  }\r\n`;\r\nexport default DocumentStatCard;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FetchUsersApi } from \"../../Utils/api\";\r\n\r\nfunction UserSelectCard({ currentUserIdHandler,setCurrentUserId}) {\r\n  const [userList, setUserList] = useState([]); // 유저 목록\r\n  const getUserList = () => {\r\n    FetchUsersApi().then((res) => {\r\n      setUserList(\r\n        res.data.filter((user) => {\r\n          return user.Category !== \"0\";\r\n        })\r\n      );\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUserList();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (userList.length !== 0) {\r\n      setCurrentUserId(userList[0].id); // 첫번째 사용자를 초기 사용자로 세팅.\r\n    }\r\n  }, [userList]);\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <div className=\"title\">\r\n        <select className=\"user-select\" onChange={currentUserIdHandler}>\r\n          {userList.map((user, index) => {\r\n            return (\r\n              <option key={index} value={user.id}>\r\n                {user.Name} [ {user.userID} ]\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <div className=\"sub\">의 작업 통계 입니다.</div>\r\n      </div>\r\n    </CardWrapper>\r\n  );\r\n}\r\n\r\nconst CardWrapper = styled.div`\r\n  margin: 1rem 0.5rem 1rem 0.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  background-color: white;\r\n  color: rgb(59, 59, 59);\r\n  display: flex;\r\n  padding: 1rem;\r\n  .title {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .user-select {\r\n    font-size: 18px;\r\n    color: rgb(59, 59, 59);\r\n    margin-right: 0.5rem;\r\n    border: none;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n    & option {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  .sub {\r\n    font-size: 14px;\r\n    color: #939ba2;\r\n  }\r\n  .content {\r\n    height: 100%;\r\n  }\r\n  ul {\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport default UserSelectCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nfunction WorkStatCard({workAllLogData,workAllStatus,workAllStatusHandler}) {\r\n  return (\r\n    <CardWrapper>\r\n      <div className=\"title\">\r\n        <div className=\"title-main\">작업량 통계</div>\r\n        <div className=\"title-sub\">각 단계를 클릭하면 원형 그래프를 확인할 수 있습니다.</div>\r\n        {/* <div className=\"toggle-button\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"date-type\"\r\n            id=\"all\"\r\n            value=\"all\"\r\n            checked={true}\r\n          />\r\n          <label htmlFor=\"all\">전체</label>\r\n          <input type=\"radio\" name=\"date-type\" id=\"today\" value=\"today\" />\r\n          <label htmlFor=\"today\">오늘</label>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"content\">\r\n        <StatContainer onClick={()=>{workAllStatusHandler(-1)}} >\r\n          <div className=\"stat-name\">수집</div>\r\n          <div className=\"stat-count\">{workAllLogData.collect}</div>\r\n        </StatContainer>\r\n        <StatContainer onClick={()=>{workAllStatusHandler(0)}}>\r\n          <div className=\"stat-name\">스크리닝</div>\r\n          <div className=\"stat-count\">{workAllLogData.screening}</div>\r\n        </StatContainer>\r\n        <StatContainer onClick={()=>{workAllStatusHandler(2)}}>\r\n          <div className=\"stat-name\">정제</div>\r\n          <div className=\"stat-count\">{workAllLogData.register}</div>\r\n        </StatContainer>\r\n        <StatContainer onClick={()=>{workAllStatusHandler(4)}}>\r\n          <div className=\"stat-name\">등록(아카이브)</div>\r\n          <div className=\"stat-count\">{workAllLogData.archive}</div>\r\n        </StatContainer>\r\n        <StatContainer onClick={()=>{workAllStatusHandler(6)}}>\r\n          <div className=\"stat-name\">큐레이션</div>\r\n          <div className=\"stat-count\">{workAllLogData.curation}</div>\r\n        </StatContainer>\r\n      </div>\r\n    </CardWrapper>\r\n  );\r\n}\r\nconst CardWrapper = styled.div`\r\n  margin: 1rem 0.5rem 1rem 0.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  background-color: white;\r\n  .title {\r\n    border-bottom: 1px solid #e6e9ed;\r\n    padding: 1rem;\r\n  }\r\n  .title-main {\r\n    font-size: 18px;\r\n    color: rgb(59, 59, 59);\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  .title-sub {\r\n    font-size: 12px;\r\n    color: #939ba2;\r\n  }\r\n  .toggle-button {\r\n    display: inline-block;\r\n    padding: 8px;\r\n    background-color: #eee;\r\n    font-size: 12px;\r\n    border-radius: 0.5rem;\r\n\r\n    label {\r\n      padding: 0.25rem 0.5rem 0.25rem 0.5rem;\r\n      cursor:pointer;\r\n    }\r\n    input[type=\"radio\"] {\r\n      display: none;\r\n    }\r\n    input[type=\"radio\"]:checked + label {\r\n      transition: ease-in-out 0.2s;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n      color: white;\r\n      border-radius: 0.5rem;\r\n    }\r\n  }\r\n  .content {\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\nconst StatContainer = styled.div`\r\ncursor:pointer;\r\n  margin: 0.5rem;\r\n  width: 8rem;\r\n  padding: 1rem;\r\n  border-right: solid 1px #eee;\r\n  &:nth-child(1) {\r\n    border-left: solid 1px #eee;\r\n  }\r\n  .stat-name {\r\n    color: rgb(59, 59, 59);\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n  }\r\n  .stat-count {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #435269;\r\n  }\r\n`;\r\nexport default WorkStatCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ChartCard({ children }) {\r\n  return (\r\n    <CardWrapper>\r\n      <div className=\"title\">\r\n        <div className=\"title-main\">세계 문서 비율</div>\r\n        <div className=\"title-sub\">공정별 세계 비율 입니다.</div>\r\n      </div>\r\n      <div className=\"chart\">{children}</div>\r\n    </CardWrapper>\r\n  );\r\n}\r\n\r\nconst CardWrapper = styled.div`\r\n  margin: 1rem 0.5rem 1rem 0.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  background-color: white;\r\n  color: rgb(59, 59, 59);\r\n  .title {\r\n    border-bottom: 1px solid #e6e9ed;\r\n    padding: 1rem;\r\n  }\r\n  .title-main {\r\n    font-size: 18px;\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  .title-sub {\r\n    font-size: 12px;\r\n    color: #939ba2;\r\n  }\r\n  .chart {\r\n    height: 20rem;\r\n  }\r\n`;\r\nexport default ChartCard;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nfunction ProcessMenu({process,processHandler}) {\r\n  \r\n  const _processHandler = (value) => {\r\n    processHandler(value);\r\n  };\r\n  return (\r\n    <CardWrapper>\r\n      <div className=\"title\">\r\n        <div className=\"title-main\">단계 선택</div>\r\n        <div className=\"title-sub\">통계를 확인할 단계를 선택하세요.</div>\r\n      </div>\r\n      <ul>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            _processHandler(1);\r\n          }}\r\n          active={process === 1}\r\n        >\r\n          스크리닝\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            _processHandler(2);\r\n          }}\r\n          active={process === 2}\r\n        >\r\n          정제\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            _processHandler(4);\r\n          }}\r\n          active={process === 4}\r\n        >\r\n          등록(아카이브)\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            _processHandler(6);\r\n          }}\r\n          active={process === 6}\r\n        >\r\n          큐레이션\r\n        </MenuItem>\r\n      </ul>\r\n    </CardWrapper>\r\n  );\r\n}\r\nconst CardWrapper = styled.div`\r\n  margin: 1rem 0.5rem 0 0.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  background-color: white;\r\n  .title {\r\n    border-bottom: 1px solid #e6e9ed;\r\n    padding: 1rem;\r\n  }\r\n  .title-main {\r\n    font-size: 18px;\r\n    color: rgb(59, 59, 59);\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  .title-sub {\r\n    font-size: 12px;\r\n    color: #939ba2;\r\n  }\r\n  ul {\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\nconst MenuItem = styled.li`\r\n  height: 100%;\r\n  text-align: center;\r\n  min-width: 150px;\r\n  list-style-type: none;\r\n  padding: 1rem 1.5rem 1rem 1.5rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #435269;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: ${(props) => (props.active ? \"#435269\" : \"white\")};\r\n      color: white;\r\n      font-weight: bold;\r\n    `};\r\n`;\r\n\r\nexport default ProcessMenu;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction DateRange({setDateGte}) {\r\n  /* \r\n    all : 전체 범위\r\n    past_week : 최근 1주\r\n    past_month : 최근 1달\r\n    past_3_month : 최근 3달\r\n    past_6_month : 최근 6달\r\n    past_year : 최근 1년\r\n    past_3_year : 최근 3년\r\n    custom_range : 직접 설정\r\n  */\r\n  const [dateRange, setDateRange] = useState(\"past_3_month\");\r\n\r\n  const dateRangeHandler = (e) => {\r\n    setDateRange(e.target.value);\r\n  };\r\n  useEffect(()=>{\r\n    const _dateGte = new Date(); // 오늘 날짜\r\n    if(dateRange === \"all\"){\r\n      _dateGte.setFullYear(_dateGte.getFullYear() - 30); // 30년 전\r\n    }\r\n    if(dateRange === \"past_week\"){\r\n      _dateGte.setDate(_dateGte.getDate() - 7); // 7일. 1주일 전\r\n    }\r\n    else if(dateRange === \"past_month\"){\r\n      _dateGte.setMonth(_dateGte.getMonth() - 1); // 1달 전\r\n    }\r\n    else if(dateRange === \"past_3_month\"){\r\n      _dateGte.setMonth(_dateGte.getMonth() - 3); // 3달 전\r\n    }\r\n    else if(dateRange === \"past_6_month\"){\r\n      _dateGte.setMonth(_dateGte.getMonth() - 6); // 6달 전\r\n    }\r\n    else if(dateRange === \"past_year\"){\r\n      _dateGte.setFullYear(_dateGte.getFullYear() - 1); // 1년 전\r\n    }\r\n    else if(dateRange === \"past_3_year\"){\r\n      _dateGte.setFullYear(_dateGte.getFullYear() - 3); // 3년 전\r\n    }\r\n    setDateGte(_dateGte.toISOString().substring(0,10));\r\n  },[dateRange])\r\n  return (\r\n    <DateRangeContainer>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"range\"\r\n        id=\"all\"\r\n        value=\"all\"\r\n        onChange={dateRangeHandler}\r\n        checked={dateRange===\"all\"}\r\n      ></input>\r\n      <label htmlFor=\"all\">전체</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"range\"\r\n        id=\"past_week\"\r\n        value=\"past_week\"\r\n        onChange={dateRangeHandler}\r\n        checked={dateRange===\"past_week\"}\r\n      ></input>\r\n      <label htmlFor=\"past_week\">최근 1주일</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"range\"\r\n        id=\"past_month\"\r\n        value=\"past_month\"\r\n        onChange={dateRangeHandler}\r\n        checked={dateRange===\"past_month\"}\r\n      ></input>\r\n      <label htmlFor=\"past_month\">최근 1달</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"range\"\r\n        id=\"past_3_month\"\r\n        value=\"past_3_month\"\r\n        onChange={dateRangeHandler}\r\n        checked={dateRange===\"past_3_month\"}\r\n      ></input>\r\n      <label htmlFor=\"past_3_month\">최근 3달</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"range\"\r\n        id=\"past_6_month\"\r\n        value=\"past_6_month\"\r\n        onChange={dateRangeHandler}\r\n        checked={dateRange===\"past_6_month\"}\r\n      ></input>\r\n      <label htmlFor=\"past_6_month\">최근 6달</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"range\"\r\n        id=\"past_year\"\r\n        value=\"past_year\"\r\n        onChange={dateRangeHandler}\r\n        checked={dateRange===\"past_year\"}\r\n      ></input>\r\n      <label htmlFor=\"past_year\">최근 1년</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"range\"\r\n        id=\"past_3_year\"\r\n        value=\"past_3_year\"\r\n        onChange={dateRangeHandler}\r\n        checked={dateRange===\"past_3_year\"}\r\n      ></input>\r\n      <label htmlFor=\"past_3_year\">최근 3년</label>\r\n    </DateRangeContainer>\r\n  );\r\n}\r\n\r\nconst DateRangeContainer = styled.div`\r\n  display: inline-block;\r\n  padding: 8px;\r\n  background-color: #eee;\r\n  font-size: 12px;\r\n  border-radius: 0.5rem;\r\n\r\n  label {\r\n    padding: 0.25rem 0.5rem 0.25rem 0.5rem;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"radio\"] {\r\n    display: none;\r\n  }\r\n  input[type=\"radio\"]:checked + label {\r\n    transition: ease-in-out 0.2s;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n    color: white;\r\n    border-radius: 0.5rem;\r\n  }\r\n`;\r\nexport default DateRange;\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5map from \"@amcharts/amcharts5/map\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nimport am5geodata_worldLow from \"@amcharts/amcharts5-geodata/worldLow\";\r\nimport am5geodata_lang_KO from \"@amcharts/amcharts5-geodata/lang/KO\";\r\nfunction Map({getCountryMapChartData}) {\r\n  useLayoutEffect(() => {\r\n    let root = am5.Root.new(\"chartdiv\");\r\n\r\n    root.setThemes([am5themes_Animated.new(root)]);\r\n    let chart = root.container.children.push(\r\n      am5map.MapChart.new(root, {\r\n        //panX: \"rotateX\",\r\n        projection: am5map.geoEquirectangular(),\r\n      })\r\n    );\r\n    // let polygonSeries = chart.series.push(\r\n    //   am5map.MapPolygonSeries.new(root, {\r\n    //     geoJSON: am5geodata_worldLow,\r\n    //     geodataNames: am5geodata_lang_KO,\r\n    //     exclude: [\"AQ\"],\r\n    //   })\r\n    // );\r\n\r\n    // Create polygon series\r\n    var polygonSeries = chart.series.push(\r\n      am5map.MapPolygonSeries.new(root, {\r\n        geoJSON: am5geodata_worldLow,\r\n        geodataNames: am5geodata_lang_KO,\r\n        exclude: [\"AQ\"],\r\n      })\r\n    );\r\n\r\n    polygonSeries.mapPolygons.template.setAll({\r\n      tooltipText: \"{name}\",\r\n      interactive: true,\r\n    });\r\n    polygonSeries.mapPolygons.template.states.create(\"hover\", {\r\n      fill: am5.color(0x435269),\r\n    });\r\n\r\n    polygonSeries.mapPolygons.template.states.create(\"country-select\", {\r\n      fill: am5.color(0x297373),\r\n      stroke: am5.color(0x297373),\r\n    });\r\n\r\n    let selectedColumn;\r\n    polygonSeries.mapPolygons.template.events.on(\"click\", function (ev) {\r\n      console.log(\"Clicked on a column\", ev.target);\r\n      /*\r\n        let country = ev.target;\r\n\r\n        if (selectedColumn) {\r\n          country.states.applyAnimate(\"default\");\r\n          selectedColumn = undefined;\r\n        }\r\n        \r\n        country.states.applyAnimate(\"country-select\");\r\n        selectedColumn = country;\r\n*/\r\n      var country = ev.target.dataItem.dataContext.name;\r\n      var map;\r\n      console.log(country);\r\n      polygonSeries.zoomToDataItem(ev.target.dataItem);\r\n      polygonSeries.hide();\r\n      polygonSeries.show();\r\n      getCountryMapChartData(country)\r\n    });\r\n\r\n    chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>;\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nfunction LineGraph({ lineGraphData, duration, divName }) {\r\n  const [graphDuration, setGraphDuration] = useState(\"day\");\r\n  useEffect(() => {\r\n    switch (duration) {\r\n      case \"daily\":\r\n        setGraphDuration(\"day\");\r\n        break;\r\n      case \"weekly\":\r\n        setGraphDuration(\"week\");\r\n        break;\r\n      case \"month\":\r\n        setGraphDuration(\"month\");\r\n        break;\r\n    }\r\n  }, [duration]);\r\n\r\n  useLayoutEffect(() => {\r\n    var root = am5.Root.new(divName);\r\n    root.setThemes([am5themes_Animated.new(root)]);\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        maxTooltipDistance: 0,\r\n      })\r\n    );\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraMax: 0.1,\r\n        maxDeviation: 0.1,\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {}),\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        \r\n        renderer: am5xy.AxisRendererX.new(root, { minGridDistance: 30 }),\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MMMM\";\r\n\r\n    var series = chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        name: \"작업량\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        valueXField: \"date\",\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      })\r\n    );\r\n\r\n    series.bullets.push(function () {\r\n      return am5.Bullet.new(root, {\r\n        sprite: am5.Circle.new(root, {\r\n          radius: 5,\r\n          fill: am5.color(0x435269),\r\n        }),\r\n      });\r\n    });\r\n\r\n    series.strokes.template.set(\"strokeWidth\", 5);\r\n\r\n    series\r\n      .get(\"tooltip\")\r\n      .label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\");\r\n    series.data.setAll(lineGraphData); // 데이터 적용\r\n\r\n    // Pre-zoom X axis\r\n   /* series.events.once(\"datavalidated\", (ev, target) => {\r\n      xAxis.zoomToDates(new Date(2021, 0, 1), new Date(2022, 0, 1));\r\n    });*/\r\n\r\n    // Add legend\r\n    var legend = chart.children.push(am5.Legend.new(root, {}));\r\n    legend.data.setAll(chart.series.values);\r\n\r\n    // Add cursor\r\n    // chart.set(\r\n    //   \"cursor\",\r\n    //   am5xy.XYCursor.new(root, {\r\n    //     behavior: \"zoomXY\",\r\n    //     xAxis: xAxis,\r\n    //   })\r\n    // );\r\n\r\n    // xAxis.set(\r\n    //   \"tooltip\",\r\n    //   am5.Tooltip.new(root, {\r\n    //     themeTags: [\"axis\"],\r\n    //   })\r\n    // );\r\n\r\n    // yAxis.set(\r\n    //   \"tooltip\",\r\n    //   am5.Tooltip.new(root, {\r\n    //     themeTags: [\"axis\"],\r\n    //   })\r\n    // );\r\n    // Add cursor\r\n    var cursor = chart.set(\r\n      \"cursor\",\r\n      am5xy.XYCursor.new(root, {\r\n        xAxis: xAxis,\r\n      })\r\n    );\r\n    cursor.lineY.set(\"visible\", false);\r\n\r\n    cursor.events.on(\"cursormoved\", function (ev) {\r\n      var x = ev.target.getPrivate(\"positionX\");\r\n      var y = ev.target.getPrivate(\"positionY\");\r\n\r\n      var dateX = xAxis.positionToDate(x);\r\n      var valueY = xAxis.positionToValue(y);\r\n    });\r\n\r\n    // add scrollbar\r\n    chart.set(\r\n      \"scrollbarX\",\r\n      am5.Scrollbar.new(root, {\r\n        orientation: \"horizontal\",\r\n      })\r\n    );\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [lineGraphData, graphDuration]);\r\n\r\n  return <div id={divName} style={{ width: \"100%\", height: \"500px\" }}></div>;\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Duration({setDuration}) {\r\n  /* \r\n    daily : 일간\r\n    weekly : 주간\r\n    month : 월간\r\n  */\r\n  const [currentDuration, setCurrentDuration] = useState(\"weekly\");\r\n\r\n  const currentDurationHandler = (e) => {\r\n    setCurrentDuration(e.target.value);\r\n  };\r\n  useEffect(()=>{\r\n    setDuration(currentDuration)\r\n  },[currentDuration])\r\n\r\n  return (\r\n    <DateRangeContainer>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"duration\"\r\n        id=\"daily\"\r\n        value=\"daily\"\r\n        onChange={currentDurationHandler}\r\n        checked={currentDuration===\"daily\"}\r\n      ></input>\r\n      <label htmlFor=\"daily\">일간</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"duration\"\r\n        id=\"weekly\"\r\n        value=\"weekly\"\r\n        onChange={currentDurationHandler}\r\n        checked={currentDuration===\"weekly\"}\r\n      ></input>\r\n      <label htmlFor=\"weekly\">주간</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"duration\"\r\n        id=\"month\"\r\n        value=\"month\"\r\n        onChange={currentDurationHandler}\r\n        checked={currentDuration===\"month\"}\r\n      ></input>\r\n      <label htmlFor=\"month\">월간</label>\r\n    </DateRangeContainer>\r\n  );\r\n}\r\n\r\nconst DateRangeContainer = styled.div`\r\n  display: inline-block;\r\n  padding: 8px;\r\n  background-color: #eee;\r\n  font-size: 12px;\r\n  border-radius: 0.5rem;\r\n  margin-left:1rem;\r\n\r\n  label {\r\n    padding: 0.25rem 0.5rem 0.25rem 0.5rem;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"radio\"] {\r\n    display: none;\r\n  }\r\n  input[type=\"radio\"]:checked + label {\r\n    transition: ease-in-out 0.2s;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n    color: white;\r\n    border-radius: 0.5rem;\r\n  }\r\n`;\r\nexport default Duration;\r\n","import React from \"react\";\r\n\r\nimport TitleCard from \"../../../Components/DashboardComponents/TitleCard\";\r\nimport DocumentStatCard from \"../../../Components/DashboardComponents/DocumentStatCard\";\r\n\r\nimport UserSelectCard from \"../../../Components/DashboardComponents/UserSelectCard\";\r\nimport WorkStatCard from \"../../../Components/DashboardComponents/WorkStatCard\";\r\nimport ChartCard from \"../../../Components/DashboardComponents/ChartCard\";\r\nimport ProcessMenu from \"../../../Components/DashboardComponents/ProcessMenu\";\r\nimport DateRange from \"../../../Components/DashboardComponents/DateRange\";\r\nimport Map from \"./Map\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport styled from \"styled-components\";\r\nimport Duration from \"../../../Components/DashboardComponents/Duration\";\r\nimport { ResponsivePie } from \"@nivo/pie\"; // 원형차트 임시...\r\nimport {FaSort} from \"react-icons/fa\"\r\n\r\nfunction Dashboard({\r\n  countryPieChartData,\r\n  menuType,\r\n  menuHandler,\r\n  process,\r\n  processHandler,\r\n  rowClickHandler,\r\n  crawlHostList,\r\n  selectedHostId,\r\n  currentCrawlHostLog,\r\n  crawlSum,\r\n  setCurrentUserId,\r\n  currentUserIdHandler,\r\n  setDateGte,\r\n  lineGraphData,\r\n  setDuration,\r\n  duration,\r\n  curationWorkModalOpen,\r\n  curationWorkList,\r\n  userWorkAllData,\r\n  workAllLogData,\r\n  workAllStatus,\r\n  workAllStatusHandler,\r\n  processTitle,\r\n  countryDocumentData,\r\n  getCountryMapChartData,\r\n  crawlCountSort,\r\n}) {\r\n  return (\r\n    <>\r\n      <Tab>\r\n        <div className=\"button-group\">\r\n          <TabButton\r\n            active={menuType === \"docs_country\"}\r\n            value=\"docs_country\"\r\n            onClick={menuHandler}\r\n          >\r\n            문서 전체 통계 & 국가별 통계\r\n          </TabButton>\r\n          <TabButton\r\n            active={menuType === \"docs_worker\"}\r\n            value=\"docs_worker\"\r\n            onClick={menuHandler}\r\n          >\r\n            작업자별 작업 통계 및 현황\r\n          </TabButton>\r\n          <TabButton\r\n            active={menuType === \"crawl\"}\r\n            value=\"crawl\"\r\n            onClick={menuHandler}\r\n          >\r\n            크롤러 작동 현황\r\n          </TabButton>\r\n          {/*\r\n                    <TabButton\r\n            active={menuType === \"system_access\"}\r\n            value=\"system_access\"\r\n            onClick={menuHandler}\r\n          >\r\n            시스템 접속 통계\r\n          </TabButton>\r\n          */}\r\n        </div>\r\n      </Tab>\r\n      <Wrapper>\r\n        {menuType === \"docs_country\" && (\r\n          <>\r\n            <>\r\n              <WorkStatCard\r\n                workAllLogData={workAllLogData}\r\n                workAllStatus={workAllStatus}\r\n                workAllStatusHandler={workAllStatusHandler}\r\n              />\r\n\r\n              <CountryContentWrapper>\r\n                <TitleCard\r\n                  title={\"국가별 문서 현황\"}\r\n                  subtitle={\r\n                    \"국가를 클릭하면 해당 국가에 대한 문서 작업 현황을 확인할 수 있습니다.\"\r\n                  }\r\n                >\r\n                  <Map getCountryMapChartData={getCountryMapChartData} />\r\n                </TitleCard>\r\n                <div>\r\n                  <ChartCard>\r\n                    <ResponsivePie\r\n                      data={countryPieChartData}\r\n                      margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n                      innerRadius={0.5}\r\n                      padAngle={0.7}\r\n                      cornerRadius={3}\r\n                      activeOuterRadiusOffset={8}\r\n                      borderWidth={1}\r\n                      borderColor={{\r\n                        from: \"color\",\r\n                        modifiers: [[\"darker\", 0.2]],\r\n                      }}\r\n                      arcLinkLabelsSkipAngle={10}\r\n                      arcLinkLabelsTextColor=\"#333333\"\r\n                      arcLinkLabelsThickness={2}\r\n                      colors={{ scheme: \"set3\" }}\r\n                      arcLinkLabelsColor={{ from: \"color\" }}\r\n                      arcLabelsSkipAngle={10}\r\n                      arcLabelsTextColor={{\r\n                        from: \"color\",\r\n                        modifiers: [[\"darker\", 2]],\r\n                      }}\r\n                      defs={[\r\n                        {\r\n                          id: \"dots\",\r\n                          type: \"patternDots\",\r\n                          background: \"inherit\",\r\n                          color: \"rgba(255, 255, 255, 0.3)\",\r\n                          size: 4,\r\n                          padding: 1,\r\n                          stagger: true,\r\n                        },\r\n                        {\r\n                          id: \"lines\",\r\n                          type: \"patternLines\",\r\n                          background: \"inherit\",\r\n                          color: \"rgba(255, 255, 255, 0.3)\",\r\n                          rotation: -45,\r\n                          lineWidth: 6,\r\n                          spacing: 10,\r\n                        },\r\n                      ]}\r\n                      legends={[\r\n                        {\r\n                          anchor: \"right\",\r\n                          direction: \"column\",\r\n                          justify: false,\r\n                          translateX: 180,\r\n                          translateY: 0,\r\n                          itemsSpacing: 3,\r\n                          itemWidth: 180,\r\n                          itemHeight: 18,\r\n                          itemTextColor: \"#999\",\r\n                          itemDirection: \"left-to-right\",\r\n                          itemOpacity: 1,\r\n                          symbolSize: 11,\r\n                          symbolShape: \"circle\",\r\n                          effects: [\r\n                            {\r\n                              on: \"hover\",\r\n                              style: {\r\n                                itemTextColor: \"#000\",\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </ChartCard>\r\n                  <DocumentStatCard\r\n                    countryDocumentData={countryDocumentData}\r\n                  ></DocumentStatCard>\r\n                </div>\r\n              </CountryContentWrapper>\r\n              <TitleCard\r\n                title={\"기간별 통계\"}\r\n                subtitle={\r\n                  \"전체 사용자의 단계별, 기간별 작업량 통계를 확인하세요.\"\r\n                }\r\n              >\r\n                <DateRange setDateGte={setDateGte} />\r\n                <Duration setDuration={setDuration} />\r\n                <LineGraphWrapper>\r\n                  {userWorkAllData.map((item, index) => {\r\n                    return (\r\n                      <div className=\"graph-title-container\">\r\n                        <div className=\"graph-title\">{processTitle[index]}</div>\r\n                        <LineGraph\r\n                          divName={\"chartdiv\" + index}\r\n                          lineGraphData={item}\r\n                          duration={duration}\r\n                          key={index}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </LineGraphWrapper>\r\n              </TitleCard>\r\n            </>\r\n          </>\r\n        )}\r\n        {menuType === \"docs_worker\" && (\r\n          <>\r\n            <UserSelectCard\r\n              currentUserIdHandler={currentUserIdHandler}\r\n              setCurrentUserId={setCurrentUserId}\r\n            />\r\n\r\n            <ProcessMenu processHandler={processHandler} process={process} />\r\n            <TitleCard\r\n              title={\"기간별 통계\"}\r\n              subtitle={\r\n                \"해당 사용자의 단계별, 기간별 작업량 통계를 확인하세요.\"\r\n              }\r\n            >\r\n              <DateRange setDateGte={setDateGte} />\r\n              <Duration setDuration={setDuration} />\r\n              <LineGraphOnlyOneWrapper>\r\n                <LineGraph\r\n                  divName={\"chartdiv\"}\r\n                  lineGraphData={lineGraphData}\r\n                  duration={duration}\r\n                />\r\n              </LineGraphOnlyOneWrapper>\r\n            </TitleCard>\r\n            <TitleCard\r\n              title={\"큐레이션 작업 내역\"}\r\n              subtitle={\r\n                \"해당 작업자의 큐레이션 작업 내역을 문서별로 확인하세요. 작업 전/후 를 비교할 수 있습니다.\"\r\n              }\r\n            >\r\n              <CrawlStatusTable>\r\n                <colgroup>\r\n                  <col width=\"50%\" />\r\n                  <col width=\"20%\" />\r\n                  <col width=\"10%\" />\r\n                  <col width=\"10%\" />\r\n                  <col width=\"10%\" />\r\n                </colgroup>\r\n                <thead>\r\n                  <tr>\r\n                    <th>작업 문서 ID</th>\r\n                    <th>작업 일시</th>\r\n                    <th>컨텐츠 품질</th>\r\n                    <th>작업 전</th>\r\n                    <th>작업 후</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {curationWorkList.map((item, index) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{item.ES_ID}</td>\r\n                        <td>{item.DT}</td>\r\n                        <td>{item.QUALITY}</td>\r\n                        <td>\r\n                          <button\r\n                            onClick={() => {\r\n                              curationWorkModalOpen(item.CONTENT_BEF || \"\");\r\n                            }}\r\n                          >\r\n                            조회\r\n                          </button>\r\n                        </td>\r\n                        <td>\r\n                          <button\r\n                            onClick={() => {\r\n                              curationWorkModalOpen(item.CONTENT_CUR);\r\n                            }}\r\n                          >\r\n                            조회\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </CrawlStatusTable>\r\n            </TitleCard>\r\n            <TitleCard\r\n              title={\"단계별 상세 로그\"}\r\n              subtitle={\r\n                \"단계별 작업 상세 로그를 확인하세요. 작업문서 ID, 작업 일시 등이 표시됩니다.\"\r\n              }\r\n            >\r\n              {/*\r\n                            <CrawlStatusTable>\r\n                <thead>\r\n                  <tr>\r\n                    <th>작업 문서 ID</th>\r\n                    <th>작업 일시</th>\r\n                    <th>작업 단계</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>_abcdefghijklmnop</td>\r\n                    <td>2022-04-07 13:36:00</td>\r\n                    <td>스크리닝 완료</td>\r\n                  </tr>\r\n                </tbody>\r\n              </CrawlStatusTable>\r\n              */}\r\n            </TitleCard>\r\n          </>\r\n        )}\r\n        {menuType === \"crawl\" && (\r\n          <>\r\n            <TitleCard\r\n              title={\"파일 형태 별 수집 현황\"}\r\n              subtitle={\r\n                \"URL, HTML, PDF, WORD, EXCEL, PPT 등 다양한 문서 형태의 전체 수집 현황입니다.\"\r\n              }\r\n            >\r\n              <CrawlFileTypeWrapper>\r\n                <CrawlFileTypeStatCard color=\"#435269\">\r\n                  <div className=\"file-type\">URL</div>\r\n                  <div className=\"file-status\">{crawlSum.url}</div>\r\n                </CrawlFileTypeStatCard>\r\n                <CrawlFileTypeStatCard color=\"#fccb00\">\r\n                  <div className=\"file-type\">HTML</div>\r\n                  <div className=\"file-status\">{crawlSum.html}</div>\r\n                </CrawlFileTypeStatCard>\r\n                <CrawlFileTypeStatCard color=\"#b80000\">\r\n                  <div className=\"file-type\">PDF</div>\r\n                  <div className=\"file-status\">{crawlSum.pdf}</div>\r\n                </CrawlFileTypeStatCard>\r\n                <CrawlFileTypeStatCard color=\"#3f51b5\">\r\n                  <div className=\"file-type\">WORD</div>\r\n                  <div className=\"file-status\">{crawlSum.word}</div>\r\n                </CrawlFileTypeStatCard>\r\n                <CrawlFileTypeStatCard color=\"#4caf50\">\r\n                  <div className=\"file-type\">EXCEL</div>\r\n                  <div className=\"file-status\">{crawlSum.excel}</div>\r\n                </CrawlFileTypeStatCard>\r\n                <CrawlFileTypeStatCard color=\"#db3e00\">\r\n                  <div className=\"file-type\">PPT</div>\r\n                  <div className=\"file-status\">{crawlSum.ppt}</div>\r\n                </CrawlFileTypeStatCard>\r\n                <CrawlFileTypeStatCard color=\"#d6d6d6\">\r\n                  <div className=\"file-type\">ETC</div>\r\n                  <div className=\"file-status\">{crawlSum.etc}</div>\r\n                </CrawlFileTypeStatCard>\r\n              </CrawlFileTypeWrapper>\r\n            </TitleCard>\r\n            <TitleCard\r\n              title={\"작업 목록\"}\r\n              subtitle={\r\n                \"크롤러 작업 대상 HOST 목록과 그 대상의 작업 현황을 볼 수 있습니다. HOST별 크롤링 작업 현황은 해당 컬럼을 클릭하면 확인할 수 있습니다. host 검색은 ctrl+F 로 가능합니다.\"\r\n              }\r\n            >\r\n              <CrawlStatusTable>\r\n                <colgroup>\r\n                  <col width=\"10%\"/>\r\n                  <col width=\"30%\"/>\r\n                  <col width=\"5%\"/>\r\n                  <col width=\"5%\"/>\r\n                  <col width=\"5%\"/>\r\n                  <col width=\"5%\"/>\r\n                  <col width=\"5%\"/>\r\n                  <col width=\"5%\"/>\r\n                  <col width=\"5%\"/>\r\n                  <col width=\"15%\"/>\r\n                  <col width=\"10%\"/>\r\n                </colgroup> \r\n                <thead>\r\n                  <tr>\r\n                    <th rowSpan={2}>HOST ID</th>\r\n                    <th rowSpan={2}>HOST 도메인</th>\r\n                    <th colSpan={7}>작업 총량</th>\r\n                    <th rowSpan={2}>작업 생성일</th>\r\n                    <th rowSpan={2}>크롤링 상태</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>URL<FaSort className=\"sort-btn\" onClick={()=>{crawlCountSort(\"url\")}}/></th>\r\n                    <th>HTML<FaSort className=\"sort-btn\" onClick={()=>{crawlCountSort(\"html\")}}/></th>\r\n                    <th>PDF<FaSort className=\"sort-btn\" onClick={()=>{crawlCountSort(\"pdf\")}}/></th>\r\n                    <th>WORD<FaSort className=\"sort-btn\" onClick={()=>{crawlCountSort(\"word\")}}/></th>\r\n                    <th>EXCEL<FaSort className=\"sort-btn\" onClick={()=>{crawlCountSort(\"excel\")}}/></th>\r\n                    <th>PPT<FaSort className=\"sort-btn\" onClick={()=>{crawlCountSort(\"ppt\")}}/></th>\r\n                    <th>ETC<FaSort className=\"sort-btn\" onClick={()=>{crawlCountSort(\"etc\")}}/></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {crawlHostList.map((item, index) => {\r\n                    return (\r\n                      <>\r\n                        <tr\r\n                          key={index}\r\n                          onClick={() => {\r\n                            rowClickHandler(item.job_id);\r\n                          }}\r\n                        >\r\n                          <td>{item.job_id}</td>\r\n                          <td>{item.host}</td>\r\n                          <td>{item.url}</td>\r\n                          <td>{item.html}</td>\r\n                          <td>{item.pdf}</td>\r\n                          <td>{item.word}</td>\r\n                          <td>{item.excel}</td>\r\n                          <td>{item.ppt}</td>\r\n                          <td>{item.etc}</td>\r\n                          <td>{item.created_at}</td>\r\n                          <td style={{fontWeight:\"bold\"}}>{item.status.toUpperCase()}</td>\r\n                        </tr>\r\n                        {selectedHostId === item.job_id && (\r\n                          <tr key={index + 999}>\r\n                            <td colSpan=\"11\">\r\n                              <div className=\"work-log-wrapper\">\r\n                                {currentCrawlHostLog.length === 0 ? (\r\n                                  <div>작업 로그가 없습니다.</div>\r\n                                ) : (\r\n                                  currentCrawlHostLog.map((log, index) => {\r\n                                    return (\r\n                                      <div key={index} className=\"work-log\">\r\n                                        <div>[시작일] {log.start_time}</div>\r\n                                        <div>[종료일] {log.end_time}</div>\r\n                                        <div>[url] {log.url}</div>\r\n                                        <div>[html] {log.html}</div>\r\n                                        <div>[pdf] {log.pdf}</div>\r\n                                        <div>[word] {log.word}</div>\r\n                                        <div>[excel] {log.excel}</div>\r\n                                        <div>[ppt] {log.ppt}</div>\r\n                                      </div>\r\n                                    );\r\n                                  })\r\n                                )}\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        )}\r\n                      </>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </CrawlStatusTable>\r\n            </TitleCard>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #eee;\r\n  padding: 1rem;\r\n  min-height: 1280px;\r\n`;\r\n\r\nconst CountryContentWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 7fr 3fr;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  height: 4rem;\r\n  border-bottom: solid 1px rgba(0, 0, 0, 0.1);\r\n  align-items: bottom;\r\n  display: flex;\r\n  align-items: end;\r\n  padding: 0 1.5rem 0 1.5rem;\r\n  .button-group {\r\n  }\r\n`;\r\nconst TabButton = styled.button`\r\n  color: ${(props) => (props.active ? \"#435269\" : \"rgb(59,59,59)\")};\r\n  border: none;\r\n  border-bottom: ${(props) => (props.active ? \"solid 3px #435269;\" : \"none\")};\r\n  font-weight: bold;\r\n  background-color: white;\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst CrawlFileTypeWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nconst CrawlFileTypeStatCard = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  border-radius: 4px;\r\n  box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n  padding: 1rem;\r\n\r\n  border-left: ${(props) => `solid 5px ${props.color}` || \"solid 5px #eee\"};\r\n  margin: 1rem;\r\n  min-width: 7rem;\r\n\r\n  .file-type {\r\n    color: #435269;\r\n    font-size: 12px;\r\n  }\r\n  .file-status {\r\n    color: #5a5c69;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst CrawlStatusTable = styled.table`\r\n  width: 100%;\r\n  table-layout: fixed;\r\n  border-collapse: collapse;\r\n  text-align: left;\r\n  font-size: 14px;\r\n  color: rgb(59, 59, 59);\r\n  th {\r\n    color: #323d4d;\r\n    background-color: #d8dee6;\r\n  }\r\n  th,\r\n  td {\r\n    border-bottom: 1px solid #d6d6d6;\r\n    padding: 10px;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  tr:first-child,\r\n  tr:last-child {\r\n    border: none;\r\n  }\r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n  }\r\n  .work-log-wrapper {\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    overflow-x: auto;\r\n  }\r\n  .work-log {\r\n    margin: 10px;\r\n    border: solid 1px #d6d6d6;\r\n    border-radius: 4px;\r\n    box-shadow: rgb(9 30 66 / 25%) 0px 1px 1px;\r\n    padding: 1rem;\r\n    min-width: 190px;\r\n  }\r\n  .sort-btn{\r\n    cursor:pointer;\r\n  }\r\n`;\r\n\r\nconst LineGraphOnlyOneWrapper = styled.div`\r\n  padding: 3rem;\r\n`;\r\n\r\nconst LineGraphWrapper = styled.div`\r\n  padding: 3rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n\r\n  .graph-title-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    .graph-title {\r\n      display: flex;\r\n      padding-left: 3rem;\r\n      font-size: 14px;\r\n      font-weight: bold;\r\n      color: #435269;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setModal, setModalData } from \"../../../Modules/modal\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport {\r\n  crawlHostDataFetchApi,\r\n  crawlSumDataFetchApi,\r\n  userWorkLogFetchApi,\r\n  curationWorkListFetchApi,\r\n  sessionHandler,\r\n  countryWorkListFetchApi,\r\n  workAllLogFetchApi,\r\n} from \"../../../Utils/api\";\r\n\r\nfunction DashboardContainer() {\r\n  // docs 문서 통계\r\n  // work 작업자 작업 통계\r\n  // crawl 크롤러 현황\r\n  const dispatch = useDispatch();\r\n  const [menuType, setMenuType] = useState(\"docs_country\");\r\n\r\n  const [crawlHostList, setCrawlHostList] = useState([]); // 크롤 호스트 전체 목록\r\n  const [currentCrawlHostLog, setCurrentCrawlHostLog] = useState([]); // 선택한 호스트의 크롤링 작업 로그 목록\r\n  const [selectedHostId, setSelectedHostId] = useState(null); // 현태 선택한 호스트\r\n  const [crawlSum, setCrawlSum] = useState(null); // 현재 크롤링 총 작업 현황\r\n  const [process, setProcess] = useState(1);\r\n\r\n  const [currentUserId, setCurrentUserId] = useState(null); // 현재 선택된 유저의 id\r\n\r\n  const [dateGte, setDateGte] = useState(\"2022-01-01\"); // 현재 시각 기준 3년 전으로 설정 할 예정...\r\n  const [lineGraphData, setLineGraphData] = useState([]); // 기간별 통계 꺾은선 그래프 데이터\r\n\r\n  const [duration, setDuration] = useState(\"daily\");\r\n\r\n  const [curationWorkList, setCurationWorkList] = useState([]); // 해당 작업자의 큐레이션 내역 목록\r\n\r\n  const [userWorkAllData, setUserWorkAllData] = useState([]); // 해당 작업자의 총 작업량\r\n  const [countryPieChartData, setCountryPieChartData] = useState([]); // 세계 국가 문서 현황\r\n  const [countryDocumentData , setCountryDocumentData] = useState(null); // 특정 국가 문서 현황 \r\n  const [workAllLogData, setWorkAllLogData] = useState({});\r\n  const [workAllStatus, setWorkAllStatus] = useState(-1); // 전체 작업에서 통계를 확인할 단계\r\n\r\n  const [sortType,setSortType] = useState(\"asc\");\r\n  const [sortDataType,setSortDataType] = useState(null);\r\n  const processTitle = {\r\n    0: \"스크리닝\",\r\n    1: \"정제\",\r\n    2: \"등록\",\r\n    3: \"큐레이션\",\r\n  };\r\n  const menuHandler = (e) => {\r\n    setMenuType(e.target.value);\r\n  };\r\n  const processHandler = (select) => {\r\n    setProcess(select);\r\n  };\r\n  const rowClickHandler = (host_id) => {\r\n    // 현재 선택된 host_id 새로 보고자 하는 host_id 같을경우 이미 오픈된 목록을 닫는걸로 생각\r\n    if (selectedHostId === host_id) {\r\n      setSelectedHostId(null);\r\n    } else {\r\n      setSelectedHostId(host_id);\r\n    }\r\n  };\r\n  const workAllStatusHandler = (status) => {\r\n    setWorkAllStatus(status);\r\n  };\r\n  const currentUserIdHandler = (e) => {\r\n    setCurrentUserId(e.target.value);\r\n  };\r\n  const curationWorkModalOpen = (data) => {\r\n    dispatch(setModal(\"CurationWorkContentModal\"));\r\n    dispatch(setModalData(data, \"curation_work_content\"));\r\n  };\r\n\r\n  function getRandomColor() {\r\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n  }\r\n\r\n  const crawlCountSort = (dataType) => {\r\n    setSortDataType(dataType);\r\n    if(sortType===\"asc\"){\r\n      setSortType(\"desc\")\r\n    }\r\n    else{\r\n      setSortType(\"asc\")\r\n    }\r\n  }\r\n  const getCrawlHostList = () => {\r\n    trackPromise(\r\n      crawlHostDataFetchApi()\r\n        .then((res) => {\r\n          console.log(res.data)\r\n          setCrawlHostList(res.data);\r\n          crawlSumDataFetchApi().then((res) => {\r\n            setCrawlSum(res.data[0]);\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            crawlHostDataFetchApi().then((res) => {\r\n              setCrawlHostList(res.data);\r\n              crawlSumDataFetchApi().then((res) => {\r\n                setCrawlSum(res.data[0]);\r\n              });\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  const getCrawlHostLogList = () => {\r\n    trackPromise(\r\n      crawlHostDataFetchApi(selectedHostId)\r\n        .then((res) => {\r\n          setCurrentCrawlHostLog(res.data.reverse()); // 최신순\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            crawlHostDataFetchApi(selectedHostId).then((res) => {\r\n              setCurrentCrawlHostLog(res.data.reverse()); // 최신순\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n  const graphDataCleansing = (rawData) => {\r\n    setLineGraphData(\r\n      rawData.map((item, index) => {\r\n        return { date: new Date(item.start).getTime(), value: item.cnt };\r\n      })\r\n    );\r\n  };\r\n  const getUserWorkLog = () => {\r\n    const dataObj = {\r\n      status: process,\r\n      wid: Number(currentUserId),\r\n      duration: duration,\r\n      dateLte: new Date().toISOString().substring(0, 10),\r\n      dateGte: dateGte,\r\n    };\r\n    trackPromise(\r\n      userWorkLogFetchApi(dataObj)\r\n        .then((res) => {\r\n          graphDataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            userWorkLogFetchApi(dataObj).then((res) => {\r\n              graphDataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n  const _getUserWorkAllLog = async (process) => {\r\n    const dataObj = {\r\n      status: process,\r\n      duration: duration,\r\n      dateLte: new Date().toISOString().substring(0, 10),\r\n      dateGte: dateGte,\r\n    };\r\n    const _rawData = await userWorkLogFetchApi(dataObj);\r\n    const _tmp = _rawData.data.map((item, index) => {\r\n      return { date: new Date(item.start).getTime(), value: item.cnt };\r\n    });\r\n    return _tmp;\r\n  };\r\n\r\n  const getUserWorkAllLog = async () => {\r\n    const screeningResult = await _getUserWorkAllLog(0);\r\n    const refineResult = await _getUserWorkAllLog(2);\r\n    const registerResult = await _getUserWorkAllLog(4);\r\n    const curationResult = await _getUserWorkAllLog(6);\r\n    let _tmp = [\r\n      [...screeningResult],\r\n      [...refineResult],\r\n      [...registerResult],\r\n      [...curationResult],\r\n    ];\r\n    setUserWorkAllData(_tmp);\r\n  };\r\n  const getCurationWorkList = () => {\r\n    const dataObj = {\r\n      wid: Number(currentUserId),\r\n      dateLte: new Date().toISOString().substring(0, 10),\r\n      dateGte: \"1970-01-01\",\r\n    };\r\n    trackPromise(\r\n      curationWorkListFetchApi(dataObj)\r\n        .then((res) => {\r\n          setCurationWorkList(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            curationWorkListFetchApi(dataObj).then((res) => {\r\n              setCurationWorkList(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  const pieChartDataCleansing = (rawData) => {\r\n    let _pieChart = [];\r\n\r\n    for (var key in rawData) {\r\n      let obj = {\r\n        id: key,\r\n        label: key,\r\n        value: rawData[key],\r\n        color: getRandomColor(),\r\n      };\r\n      _pieChart.push(obj);\r\n    }\r\n    setCountryPieChartData(_pieChart);\r\n  };\r\n\r\n  const getCountryWorkList = () => {\r\n    trackPromise(\r\n      countryWorkListFetchApi(workAllStatus)\r\n        .then((res) => {\r\n          pieChartDataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            countryWorkListFetchApi(workAllStatus).then((res) => {\r\n              pieChartDataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  const getWorkAllLogData = () => {\r\n    trackPromise(\r\n      workAllLogFetchApi()\r\n        .then((res) => {\r\n          setWorkAllLogData(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            workAllLogFetchApi().then((res) => {\r\n              setWorkAllLogData(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  const getCountryMapChartData = async (countryName) => {\r\n    const _collect = await countryWorkListFetchApi(-1);\r\n    const _screening = await countryWorkListFetchApi(0);\r\n    const _refine = await countryWorkListFetchApi(2);\r\n    const _register = await countryWorkListFetchApi(4);\r\n    const _curation = await countryWorkListFetchApi(6);\r\n    const _data = {\r\n      collect:_collect.data[countryName] || 0,\r\n      screening:_screening.data[countryName] || 0,\r\n      refine:_refine.data[countryName] || 0,\r\n      register:_register.data[countryName] || 0,\r\n      curation: _curation.data[countryName] || 0\r\n    };\r\n    console.log(_data)\r\n    setCountryDocumentData({country:countryName,data:_data});\r\n  };\r\n  useEffect(() => {\r\n    getCrawlHostList(); // 크롤 호스트 목록 불러오기\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (menuType === \"docs_country\") {\r\n      getUserWorkAllLog();\r\n      getCountryWorkList();\r\n      getWorkAllLogData();\r\n    }\r\n    if (!!currentUserId) {\r\n      getUserWorkLog();\r\n    }\r\n  }, [currentUserId, dateGte, process, duration, workAllStatus]);\r\n  useEffect(() => {\r\n    if (!!currentUserId) {\r\n      getCurationWorkList();\r\n    }\r\n  }, [currentUserId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedHostId !== null) {\r\n      getCrawlHostLogList();\r\n    }\r\n  }, [selectedHostId]);\r\n\r\n  useEffect(()=>{\r\n    if(sortDataType !==null){\r\n      if(sortType===\"asc\"){\r\n        const sortResult = crawlHostList.sort((a, b) => a[sortDataType] - b[sortDataType]);\r\n        setCrawlHostList(sortResult);\r\n      }\r\n      else{\r\n        const sortResult = crawlHostList.sort((a, b) => b[sortDataType] - a[sortDataType]);\r\n        setCrawlHostList(sortResult);\r\n      }\r\n      \r\n    }\r\n  },[sortType,sortDataType])\r\n  return (\r\n    <>\r\n      <Dashboard\r\n        countryPieChartData={countryPieChartData}\r\n        menuHandler={menuHandler}\r\n        menuType={menuType}\r\n        processHandler={processHandler}\r\n        rowClickHandler={rowClickHandler}\r\n        process={process}\r\n        crawlHostList={crawlHostList}\r\n        selectedHostId={selectedHostId}\r\n        currentCrawlHostLog={currentCrawlHostLog}\r\n        crawlSum={crawlSum}\r\n        currentUserIdHandler={currentUserIdHandler}\r\n        setCurrentUserId={setCurrentUserId}\r\n        setDateGte={setDateGte}\r\n        lineGraphData={lineGraphData}\r\n        setDuration={setDuration}\r\n        duration={duration}\r\n        curationWorkModalOpen={curationWorkModalOpen}\r\n        curationWorkList={curationWorkList}\r\n        userWorkAllData={userWorkAllData}\r\n        workAllLogData={workAllLogData}\r\n        workAllStatusHandler={workAllStatusHandler}\r\n        workAllStatus={workAllStatus}\r\n        processTitle={processTitle}\r\n        countryDocumentData={countryDocumentData}\r\n        getCountryMapChartData={getCountryMapChartData}\r\n        crawlCountSort={crawlCountSort}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default DashboardContainer;\r\n","import React from \"react\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport styled, { css } from \"styled-components\";\r\nimport {\r\n  MdOutlineModeEditOutline,\r\n  MdOutlineDeleteOutline,\r\n  MdOutlineCheck,\r\n  MdClose,\r\n} from \"react-icons/md\";\r\nfunction CategoryManagement({\r\n  CATEGOROY_CODE_LIST,\r\n  categoryList,\r\n  type,\r\n  typeHandler,\r\n  editableCode,\r\n  editCategoryName,\r\n  categoryEdit,\r\n  categoryEditConfirm,\r\n  categoryEditCancel,\r\n  onChangeEditInput,\r\n  upperCodeHandler,\r\n  lengthHandler,\r\n  onChangeAddInput,\r\n  categoryAdd,\r\n  categoryDelete,\r\n  upperCode\r\n}) {\r\n  return (\r\n    <>\r\n      <FormHeader type={\"view\"} title={\"카테고리 관리\"} />\r\n      <Wrapper>\r\n        <MenuContainer>\r\n          <Menu>\r\n            <li\r\n              onClick={() => {\r\n                typeHandler(CATEGOROY_CODE_LIST.정책분류);\r\n              }}\r\n              className={\r\n                type === CATEGOROY_CODE_LIST.정책분류 ? \"active\" : null\r\n              }\r\n            >\r\n              정책 분류\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                typeHandler(CATEGOROY_CODE_LIST.유형분류);\r\n              }}\r\n              className={\r\n                type === CATEGOROY_CODE_LIST.유형분류 ? \"active\" : null\r\n              }\r\n            >\r\n              유형 분류\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                typeHandler(CATEGOROY_CODE_LIST.국가분류);\r\n              }}\r\n              className={\r\n                type === CATEGOROY_CODE_LIST.국가분류 ? \"active\" : null\r\n              }\r\n            >\r\n              국가 분류\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                typeHandler(CATEGOROY_CODE_LIST.언어);\r\n              }}\r\n              className={type === CATEGOROY_CODE_LIST.언어 ? \"active\" : null}\r\n            >\r\n              언어\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                typeHandler(CATEGOROY_CODE_LIST.토픽분류);\r\n              }}\r\n              className={type === CATEGOROY_CODE_LIST.토픽분류 ? \"active\" : null}\r\n            >\r\n              토픽분류\r\n            </li>\r\n\r\n            <li\r\n              onClick={() => {\r\n                typeHandler(CATEGOROY_CODE_LIST.기관맞춤형분류);\r\n              }}\r\n              className={type === CATEGOROY_CODE_LIST.기관맞춤형분류 ? \"active\" : null}\r\n            >\r\n              기관맞춤형분류\r\n            </li>\r\n          </Menu>\r\n        </MenuContainer>\r\n        <ContentContainer>\r\n          <div className=\"content-title\">\r\n            <div className=\"main-title\">상위분류를 클릭하면 하위분류가 나타납니다.</div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div>\r\n              <ListBody>\r\n                <ListHeader>\r\n                  <div>대분류</div>\r\n                  <div>중분류</div>\r\n                  <div>소분류</div>\r\n                </ListHeader>\r\n                <ListHeader>\r\n                  <AddItem>\r\n                    <input\r\n                      placeholder=\"등록할 카테고리의 이름을 입력해주세요.\"\r\n                      onChange={onChangeAddInput}\r\n                    />\r\n                    <button\r\n                      onClick={() => {\r\n                        categoryAdd(2);\r\n                      }}\r\n                    >\r\n                      등록\r\n                    </button>\r\n                  </AddItem>\r\n                  <AddItem>\r\n                    <input\r\n                      placeholder=\"등록할 카테고리의 이름을 입력해주세요.\"\r\n                      onChange={onChangeAddInput}\r\n                    />\r\n                    <button\r\n                      onClick={() => {\r\n                        categoryAdd(4);\r\n                      }}\r\n                    >\r\n                      등록\r\n                    </button>\r\n                  </AddItem>\r\n                  <AddItem>\r\n                    <input\r\n                      placeholder=\"등록할 카테고리의 이름을 입력해주세요.\"\r\n                      onChange={onChangeAddInput}\r\n                    />\r\n                    <button\r\n                      onClick={() => {\r\n                        categoryAdd(6);\r\n                      }}\r\n                    >\r\n                      등록\r\n                    </button>\r\n                  </AddItem>\r\n                </ListHeader>\r\n                <ListContainer>\r\n                  {categoryList.map((category, index) => {\r\n                    return (\r\n                      <ListWrapper key={index}>\r\n                        {category.list.map((item, index2) => {\r\n                          return (\r\n                            <div key={index2}>\r\n                              {editableCode === item.CODE ? (\r\n                                <EditItem>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    onChange={onChangeEditInput}\r\n                                    value={editCategoryName}\r\n                                  />\r\n                                  <div className=\"actions\">\r\n                                    <button\r\n                                      className=\"confirm\"\r\n                                      onClick={() => {\r\n                                        categoryEditConfirm(item.CODE);\r\n                                      }}\r\n                                    >\r\n                                      <MdOutlineCheck />\r\n                                    </button>\r\n                                    <button\r\n                                      className=\"cancel\"\r\n                                      onClick={categoryEditCancel}\r\n                                    >\r\n                                      <MdClose />\r\n                                    </button>\r\n                                  </div>\r\n                                </EditItem>\r\n                              ) : (\r\n                                <ViewItem active={upperCode[index+(2+index)] === item.CODE}>\r\n                                  <div\r\n                                    className=\"title\"\r\n                                    value={item.CODE}\r\n                                    onClick={() => {\r\n                                      upperCodeHandler(\r\n                                        item.CODE,\r\n                                        category.length\r\n                                      );\r\n                                      lengthHandler(category.length + 2);\r\n                                    }}\r\n                                  >\r\n                                    {item.CT_NM} ({item.CODE}) \r\n                                  </div>\r\n                                  <div className=\"actions\">\r\n                                    <button\r\n                                      className=\"edit\"\r\n                                      onClick={() => {\r\n                                        categoryEdit(item);\r\n                                      }}\r\n                                    >\r\n                                      <MdOutlineModeEditOutline />\r\n                                    </button>\r\n                                    <button\r\n                                      className=\"delete\"\r\n                                      onClick={() => {\r\n                                        categoryDelete(item.CODE);\r\n                                      }}\r\n                                    >\r\n                                      <MdOutlineDeleteOutline />\r\n                                    </button>\r\n                                  </div>\r\n                                </ViewItem>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </ListWrapper>\r\n                    );\r\n                  })}\r\n                </ListContainer>\r\n              </ListBody>\r\n            </div>\r\n          </div>\r\n        </ContentContainer>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  color: rgb(59, 59, 59);\r\n  background-color: #eee;\r\n`;\r\n\r\nconst LineBox = styled.div`\r\n  /* border: solid 1px #d6d6d6;\r\n  border-radius: 4px; */\r\n  background-color: white;\r\n  margin: 1rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n`;\r\n\r\nconst MenuContainer = styled(LineBox)`\r\n  width: 15%;\r\n`;\r\nconst Menu = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  li {\r\n    padding: 1rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: solid 1px #d6d6d6;\r\n  }\r\n  li:hover,\r\n  .active {\r\n    border-left: solid 5px #435269;\r\n    color: #435269;\r\n    font-weight: bold;\r\n    background-color: rgba(67, 82, 105, 0.05);\r\n  }\r\n`;\r\nconst ContentContainer = styled(LineBox)`\r\n  width: 85%;\r\n  .content-title {\r\n    border-bottom: 1px solid #d6d6d6;\r\n    padding: 1rem;\r\n    .main-title {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n      margin-bottom:8px;\r\n    }\r\n    .sub-title{\r\n      /*font-size:14px;*/\r\n    }\r\n  }\r\n  .content-body {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nconst ListBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n`;\r\nconst ListHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  background-color: #435269;\r\n  div {\r\n    padding: 0.5rem 0 0.5rem 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst ListWrapper = styled.ul`\r\n  width: 100%;\r\n  list-style-type: none;\r\n  height: 30rem;\r\n  overflow: auto;\r\n  margin: 0;\r\n  padding: 0;\r\n  border: solid 1px #eeeeee;\r\n  overflow-x: hidden;\r\n`;\r\nconst ListItem = styled.li`\r\n  background-color: white;\r\n  display: flex;\r\n  min-height: 1.5rem;\r\n  border-bottom: dotted 1px #eeeeee;\r\n  justify-content: space-between;\r\n  padding: 1rem;\r\n\r\n  .actions {\r\n    display: flex;\r\n    align-items: center;\r\n    button {\r\n      width: 2rem;\r\n      height: 2rem;\r\n      margin-left: 0.5rem;\r\n      font-size: 18px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border: solid 1px rgba(0, 0, 0, 0.1);\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ViewItem = styled(ListItem)`\r\n  .title {\r\n    cursor: pointer;\r\n  }\r\n  .delete {\r\n    background-color: #b80000;\r\n    color: white;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: rgba(67,82,105,0.1);\r\n      font-weight:bold;\r\n    `};\r\n\r\n`;\r\nconst EditItem = styled(ListItem)`\r\n  input {\r\n    display: flex;\r\n    align-items: center;\r\n    border: solid 1px #d6d6d6;\r\n    padding-left: 0.5rem;\r\n    max-width: 13rem;\r\n    border-radius: 4px;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  .confirm {\r\n    background-color: #435269;\r\n    color: white;\r\n  }\r\n`;\r\nconst AddItem = styled(ListItem)`\r\n  width: 100%;\r\n  display: flex;\r\n  border-bottom: solid 1px #d6d6d6;\r\n  input {\r\n    width: 100%;\r\n    align-items: center;\r\n    border: solid 1px #d6d6d6;\r\n    padding-left: 0.5rem;\r\n    border-radius: 4px;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    min-width: 5rem;\r\n    margin-left: 0.5rem;\r\n    background-color: #435269;\r\n    color: white;\r\n    border: solid 1px rgba(0, 0, 0, 0.1);\r\n    padding: 0.5rem 1rem 0.5rem 1rem;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nexport default CategoryManagement;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CategoryManagement from \"./CategoryManagement\";\r\nimport {\r\n  categoryListFetchApi,\r\n  categoryItemAddApi,\r\n  categoryItemDeleteApi,\r\n  categoryItemEditApi,\r\n  sessionHandler,\r\n} from \"../../../Utils/api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nfunction CategoryManagementContainer() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [editableCode, setEditableCode] = useState(0);\r\n  /* 수정할 항목의 코드를 저장한다.\r\n  0일 경우 수정 할 항목이 지정되지 않은 상태이다.\r\n  그러므로, 수정 확인 또는 수정 취소 시 해당 값을 0으로 다시 지정해 주어야 한다.\r\n  */\r\n\r\n  const CATEGOROY_CODE_LIST = {\r\n    정책분류: 1,\r\n    유형분류: 2,\r\n    국가분류: 3,\r\n    언어: 4,\r\n    토픽분류:5,\r\n    기관맞춤형분류:6,\r\n  };\r\n\r\n  const [addCategoryName, setAddCategoryName] = useState(\"\"); // 새롭게 등록할 카테고리 이름\r\n  const [editCategoryName, setEditCategoryName] = useState(\"\"); // 수정할 카테고리 이름\r\n\r\n  const [type, setType] = useState(1); // 정책분류 , 유형구분 , 국가 분류, 언어\r\n  const [categoryList, setCategoryList] = useState([\r\n    { length: 2, list: [] },\r\n    { length: 4, list: [] },\r\n    { length: 6, list: [] },\r\n  ]);\r\n  const [upperCode, setUpperCode] = useState({ 2: null, 4: null, 6: null });\r\n  const [length, setLength] = useState(2); // 대분류 (2) 중분류 (4) 소분류 (6)\r\n\r\n  const typeHandler = (type) => {\r\n    setCategoryList([\r\n      { length: 2, list: [] },\r\n      { length: 4, list: [] },\r\n      { length: 6, list: [] },\r\n    ]);\r\n    setUpperCode({ 2: null, 4: null, 6: null });\r\n    setLength(2);\r\n    setType(type);\r\n  };\r\n  const onChangeEditInput = (e) => {\r\n    setEditCategoryName(e.target.value);\r\n  };\r\n  const onChangeAddInput = (e) => {\r\n    setAddCategoryName(e.target.value);\r\n  };\r\n\r\n  const upperCodeHandler = (code, length) => {\r\n    let _upperCode = { ...upperCode };\r\n    _upperCode[length] = code;\r\n    setUpperCode(_upperCode);\r\n  };\r\n  const lengthHandler = (length) => {\r\n    setLength(length);\r\n  };\r\n\r\n  const categoryEdit = (item) => {\r\n    setEditableCode(item.CODE);\r\n    setEditCategoryName(item.CT_NM);\r\n  };\r\n  const categoryEditConfirm = (code) => {\r\n    categoryItemEditApi(type, code, editCategoryName).then((res) => {\r\n      if (res.status === 200) {\r\n        alert(\"성공적으로 수정되었습니다.\");\r\n        dataFetch();\r\n        categoryEditCancel();\r\n      }\r\n    });\r\n  };\r\n  const categoryEditCancel = () => {\r\n    setEditableCode(0);\r\n    setEditCategoryName(\"\");\r\n  };\r\n  const categoryAdd = (length) => {\r\n    if (addCategoryName === \"\") {\r\n      alert(\"카테고리 이름을 입력해주세요\");\r\n      return;\r\n    }\r\n    if (length === 4 && upperCode[2] === null) {\r\n      alert(\"대분류를 먼저 선택해주세요.\");\r\n      return;\r\n    } else if (length === 6 && upperCode[4] === null) {\r\n      alert(\"중분류를 먼저 선택해주세요.\");\r\n      return;\r\n    } else {\r\n      const code = length === 2 ? null : upperCode[length - 2];\r\n      categoryItemAddApi(type, length, addCategoryName, code).then((res) => {\r\n        if (res.status === 200) {\r\n          alert(\"성공적으로 등록되었습니다.\");\r\n          dataFetch();\r\n          // setAddCategoryName(\"\"); input 초기화 왜 안되는거지 \r\n        }\r\n      });\r\n    }\r\n  };\r\n  const categoryDelete = (code) => {\r\n    if (confirm(\"해당 카테고리를 삭제하시겠습니까? 연관된 문서에서 카테고리 설정이 삭제됩니다.\")) {\r\n      categoryItemDeleteApi(type, code).then((res) => {\r\n        if (res.status === 200) {\r\n          alert(\"성공적으로 삭제되었습니다.\");\r\n          dataFetch();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  /* 데이터 불러오기 */\r\n  const dataFetch = () => {\r\n    trackPromise(\r\n      categoryListFetchApi(type, length, upperCode[length - 2])\r\n        .then((res) => {\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            categoryListFetchApi(type, length, upperCode[length - 2]).then(\r\n              (res) => {\r\n                dataCleansing(res.data);\r\n              }\r\n            );\r\n          });\r\n        })\r\n    );\r\n  };\r\n  const dataCleansing = (rawData) => {\r\n    const index = categoryList.findIndex((i) => i.length == length);\r\n    let _categoryList = [...categoryList];\r\n    _categoryList[index] = { length, list: rawData };\r\n    setCategoryList(_categoryList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataFetch();\r\n    console.log(upperCode[2])\r\n  }, [type, length, upperCode]);\r\n\r\n  return (\r\n    <>\r\n      <CategoryManagement\r\n        CATEGOROY_CODE_LIST={CATEGOROY_CODE_LIST}\r\n        categoryList={categoryList}\r\n        type={type}\r\n        typeHandler={typeHandler}\r\n        editableCode={editableCode}\r\n        editCategoryName={editCategoryName}\r\n        categoryEdit={categoryEdit}\r\n        categoryEditConfirm={categoryEditConfirm}\r\n        categoryEditCancel={categoryEditCancel}\r\n        onChangeEditInput={onChangeEditInput}\r\n        upperCodeHandler={upperCodeHandler}\r\n        lengthHandler={lengthHandler}\r\n        onChangeAddInput={onChangeAddInput}\r\n        categoryAdd={categoryAdd}\r\n        categoryDelete={categoryDelete}\r\n        upperCode={upperCode}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CategoryManagementContainer;\r\n","import React from \"react\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport SearchBar from \"../../../Components/SearchBar\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  MdUpload,\r\n  MdDownload,\r\n  MdOutlineModeEditOutline,\r\n  MdOutlineDeleteOutline,\r\n  MdOutlineCheck,\r\n  MdClose,\r\n  MdSettings,\r\n  MdOutlineSearch,\r\n  MdSync,\r\n} from \"react-icons/md\";\r\nfunction HostManagement({\r\n  currentHostList,\r\n  filterOpen,\r\n  _filterOpenHandler,\r\n  _filterInputsHandler,\r\n  _registerHostOpenHandler,\r\n  filterSearch,\r\n  excelDownload,\r\n  excelUpload,\r\n  selectedHost,\r\n  _openCategoryModal,\r\n  docCategory,\r\n  docLanguage,\r\n  docCountry,\r\n  hostRegisterUpload,\r\n  _hostPublisherHandler,\r\n  _hostWorkCycleHandler,\r\n  hostWorkCycle,\r\n  hostPublisher,\r\n  nextrendSync,\r\n  hostTestList,\r\n}) {\r\n  return (\r\n    <>\r\n      <FormHeader type={\"view\"} title={\"HOST 목록 관리\"} />\r\n      <Wrapper>\r\n        <ContentContainer>\r\n          <div className=\"content-title\">\r\n            <div className=\"main-title\">크롤링 HOST 테스트 등록 / 결과</div>\r\n            <div className=\"sub-title\">\r\n              엑셀로 HOST 데이터를 업로드하여 크롤링 가능 여부를 테스트 합니다.\r\n              테스트 목록에 HOST가 등록되어 있을때는 데이터 추가 등록이 불가능\r\n              합니다. 테스트가 완료되면 완료 결과에 따라 HOST를 선택하여 실제로\r\n              작동할 HOST를 선택하여 등록할 수 있습니다.\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <DictionaryFunctionWrapper>\r\n              <DictionaryFunctionBtnWrapper>\r\n                <input\r\n                  id=\"excel-upload\"\r\n                  type=\"file\"\r\n                  accept=\".xlsx\"\r\n                  onChange={excelUpload}\r\n                />\r\n                <label htmlFor=\"excel-upload\">\r\n                  <MdUpload size=\"20\" />\r\n                  테스트 HOST 목록 엑셀 업로드\r\n                </label>\r\n              </DictionaryFunctionBtnWrapper>\r\n            </DictionaryFunctionWrapper>\r\n            <DictonaryDataTable>\r\n              <colgroup>\r\n                <col width=\"25%\" />\r\n                <col width=\"10%\" />\r\n                <col width=\"10%\" />\r\n                <col width=\"8%\" />\r\n                <col width=\"4%\" />\r\n                <col width=\"4%\" />\r\n                <col width=\"4%\" />\r\n                <col width=\"4%\" />\r\n                <col width=\"4%\" />\r\n                <col width=\"4%\" />\r\n                <col width=\"4%\" />\r\n                <col width=\"5%\" />\r\n                <col width=\"5%\" />\r\n              </colgroup>\r\n              <thead>\r\n                <tr>\r\n                  <th rowSpan={2}>HOST 도메인</th>\r\n                  <th colSpan={3}>시간</th>\r\n                  <th colSpan={7}>결과</th>\r\n                  <th rowSpan={2}>등록</th>\r\n                  <th rowSpan={2}>삭제</th>\r\n                </tr>\r\n                <tr>\r\n                  <th>작업 시작 시간</th>\r\n                  <th>작업 종료 시간</th>\r\n                  <th>러닝 타임</th>\r\n                  <th>URL</th>\r\n                  <th>HTML</th>\r\n                  <th>PDF</th>\r\n                  <th>WORD</th>\r\n                  <th>EXCEL</th>\r\n                  <th>PPT</th>\r\n                  <th>ETC</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {hostTestList.map((host, index) => {\r\n                  return (\r\n                    <>\r\n                      <tr key={index}>\r\n                        <td>{host.host}</td>\r\n                        <td>{host.start_time}</td>\r\n                        <td>{host.end_time}</td>\r\n                        <td>{host.running_time}</td>\r\n                        {host.test_end ? (\r\n                          <>\r\n                            <td>{host.url}</td>\r\n                            <td>{host.html}</td>\r\n                            <td>{host.pdf}</td>\r\n                            <td>{host.word}</td>\r\n                            <td>{host.excel}</td>\r\n                            <td>{host.ppt}</td>\r\n                            <td>{host.etc}</td>\r\n                          </>\r\n                        ) : (\r\n                          <td colSpan={7} className=\"crawl-test\">\r\n                            크롤링 테스트 중입니다\r\n                          </td>\r\n                        )}\r\n                        {host.is_registered ? (\r\n                          <td className=\"registered\">기등록됨</td>\r\n                        ) : (\r\n                          <td>\r\n                            <ActionButton\r\n                              onClick={() => {\r\n                                _registerHostOpenHandler(host);\r\n                              }}\r\n                            >\r\n                              등록\r\n                            </ActionButton>\r\n                          </td>\r\n                        )}\r\n                        <td>\r\n                          <ActionButton>버리기</ActionButton>\r\n                        </td>\r\n                      </tr>\r\n                      {selectedHost && selectedHost.idx === host.idx && (\r\n                        <tr>\r\n                          <td colSpan={12}>\r\n                            <div>\r\n                              아래의 값을 모두 채워 등록해주세요. 언어, 국가,\r\n                              정책분류는 각 1개씩만 설정가능 합니다.\r\n                            </div>\r\n                            <HostRegisterContainer>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">HOST 도메인</div>\r\n                                <div>{host.host}</div>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">발급기관명</div>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  onChange={_hostPublisherHandler}\r\n                                />\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  HOST 해당 언어\r\n                                </div>\r\n                                <ActionButton\r\n                                  onClick={() => {\r\n                                    _openCategoryModal(\"doc_language\");\r\n                                  }}\r\n                                >\r\n                                  <MdSettings />\r\n                                  선택\r\n                                </ActionButton>\r\n                                <CustomList>\r\n                                  {docLanguage.map((item, index) => {\r\n                                    return (\r\n                                      <Chip key={index}>{item.CT_NM}</Chip>\r\n                                    );\r\n                                  })}\r\n                                </CustomList>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  HOST 해당 국가\r\n                                </div>\r\n                                <ActionButton\r\n                                  onClick={() => {\r\n                                    _openCategoryModal(\"doc_country\");\r\n                                  }}\r\n                                >\r\n                                  <MdSettings />\r\n                                  선택\r\n                                </ActionButton>\r\n                                <CustomList>\r\n                                  {docCountry.map((item, index) => {\r\n                                    return (\r\n                                      <Chip key={index}>{item.CT_NM}</Chip>\r\n                                    );\r\n                                  })}\r\n                                </CustomList>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  HOST 정책 분류\r\n                                </div>\r\n                                <ActionButton\r\n                                  onClick={() => {\r\n                                    _openCategoryModal(\"doc_category\");\r\n                                  }}\r\n                                >\r\n                                  <MdSettings />\r\n                                  선택\r\n                                </ActionButton>\r\n                                <CustomList>\r\n                                  {docCategory.map((item, index) => {\r\n                                    return (\r\n                                      <Chip key={index}>{item.CT_NM}</Chip>\r\n                                    );\r\n                                  })}\r\n                                </CustomList>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  크롤러 수집주기 (day)\r\n                                </div>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  onChange={_hostWorkCycleHandler}\r\n                                />\r\n                              </div>\r\n                              <ActionButton onClick={hostRegisterUpload}>\r\n                                등록\r\n                              </ActionButton>\r\n                            </HostRegisterContainer>\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </DictonaryDataTable>\r\n          </div>\r\n        </ContentContainer>\r\n        <ContentContainer>\r\n          <div className=\"content-title\">\r\n            <div className=\"main-title\">현재 작동중인 크롤링 HOST 목록</div>\r\n            <div className=\"sub-title\">\r\n              엑셀로 데이터를 업로드하고 관리할 수 있습니다. 업로드한 데이터는\r\n              기존의 데이터를 덮어씌웁니다.\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <DictionaryFunctionWrapper>\r\n              <DictionaryFunctionBtnWrapper>\r\n                <button onClick={_filterOpenHandler}>\r\n                  <MdOutlineSearch size=\"20\" />\r\n                  조건 검색 여닫기\r\n                </button>\r\n                <button onClick={nextrendSync}>\r\n                  <MdSync size=\"20\" />\r\n                  nextrend 서비스와 크롤러 동기화\r\n                </button>\r\n              </DictionaryFunctionBtnWrapper>\r\n\r\n            </DictionaryFunctionWrapper>\r\n            {filterOpen && (\r\n              <FilterWrapper>\r\n                <div className=\"filter-title\">\r\n                  <FaFilter />\r\n                  <div>검색 필터 설정</div>\r\n                </div>\r\n                <div className=\"filter-body\">\r\n                  <div className=\"filter-item\">\r\n                    <div>HOST 도메인</div>\r\n                    <input\r\n                      placeholder=\"입력값을 포함하여 검색됩니다.\"\r\n                      name=\"host\"\r\n                      onChange={_filterInputsHandler}\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"filter-item\">\r\n                    <div>HOST 언어</div>\r\n                    <input\r\n                      placeholder=\"언어명 입력\"\r\n                      name=\"lang\"\r\n                      onChange={_filterInputsHandler}\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"filter-item\">\r\n                    <div>HOST 해당 국가</div>\r\n                    <input\r\n                      placeholder=\"국가명 입력\"\r\n                      name=\"country\"\r\n                      onChange={_filterInputsHandler}\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"filter-item\">\r\n                    <div>발급 기관 명</div>\r\n                    <input\r\n                      placeholder=\"입력값을 포함하여 검색됩니다\"\r\n                      name=\"name\"\r\n                      onChange={_filterInputsHandler}\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"filter-item\">\r\n                    <div>HOST 정책 분류</div>\r\n                    <input\r\n                      placeholder=\"분류명 입력\"\r\n                      name=\"category\"\r\n                      onChange={_filterInputsHandler}\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"filter-item\">\r\n                    <div className=\"item-title\">크롤링 수집주기</div>\r\n                    <input\r\n                      placeholder=\"숫자 입력\"\r\n                      name=\"workCycle\"\r\n                      onChange={_filterInputsHandler}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"filter-action\">\r\n                  <button onClick={filterSearch}>검색</button>\r\n                </div>\r\n              </FilterWrapper>\r\n            )}\r\n            <DictonaryDataTable>\r\n              <colgroup>\r\n                <col width=\"30%\" />\r\n                <col width=\"15%\" />\r\n                <col width=\"15%\" />\r\n                <col width=\"10%\" />\r\n                <col width=\"10%\" />\r\n                <col width=\"10%\" />\r\n                <col width=\"10%\" />\r\n              </colgroup>\r\n              <thead>\r\n                <tr>\r\n                  <th>HOST 도메인</th>\r\n                  <th>HOST 해당 언어</th>\r\n                  <th>HOST 해당 국가</th>\r\n                  <th>발급 기관 명</th>\r\n                  <th>HOST 정책 분류</th>\r\n                  <th className=\"crawl-setting\">크롤링 수집주기(일 단위)</th>\r\n                  <th>관리</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentHostList.map((host, index) => {\r\n                  return (\r\n                    <>\r\n                      <tr>\r\n                        <td>{host.host}</td>\r\n                        <td>{host.lang.length!==0 && host.lang[0].CT_NM}</td>\r\n                        <td>{host.country.length!==0 && host.country[0].CT_NM}</td>\r\n                        <td>{host.name}</td>\r\n                        <td>{host.category.length!==0 && host.category[0].CT_NM}</td>\r\n                        <td>{host.workCycle}</td>\r\n                        <td>\r\n                          <ActionButton\r\n                            onClick={() => {\r\n                              _registerHostOpenHandler(host);\r\n                            }}\r\n                          >\r\n                            <MdSettings/>관리\r\n                          </ActionButton>\r\n                        </td>\r\n                      </tr>\r\n                      {selectedHost && selectedHost.idx === host.idx && (\r\n                        <tr>\r\n                          <td colSpan={12}>\r\n                            <div>\r\n                              아래의 값을 모두 채워 등록해주세요. 언어, 국가,\r\n                              정책분류는 각 1개씩만 설정가능 합니다.\r\n                            </div>\r\n                            <HostRegisterContainer>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">HOST 도메인</div>\r\n                                <div>{host.host}</div>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">발급기관명</div>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  value={hostPublisher}\r\n                                  onChange={_hostPublisherHandler}\r\n                                />\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  HOST 해당 언어\r\n                                </div>\r\n                                <ActionButton\r\n                                  onClick={() => {\r\n                                    _openCategoryModal(\"doc_language\");\r\n                                  }}\r\n                                >\r\n                                  <MdSettings />\r\n                                  선택\r\n                                </ActionButton>\r\n                                <CustomList>\r\n                                  {docLanguage.map((item, index) => {\r\n                                    return (\r\n                                      <Chip key={index}>{item.CT_NM}</Chip>\r\n                                    );\r\n                                  })}\r\n                                </CustomList>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  HOST 해당 국가\r\n                                </div>\r\n                                <ActionButton\r\n                                  onClick={() => {\r\n                                    _openCategoryModal(\"doc_country\");\r\n                                  }}\r\n                                >\r\n                                  <MdSettings />\r\n                                  선택\r\n                                </ActionButton>\r\n                                <CustomList>\r\n                                  {docCountry.map((item, index) => {\r\n                                    return (\r\n                                      <Chip key={index}>{item.CT_NM}</Chip>\r\n                                    );\r\n                                  })}\r\n                                </CustomList>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  HOST 정책 분류\r\n                                </div>\r\n                                <ActionButton\r\n                                  onClick={() => {\r\n                                    _openCategoryModal(\"doc_category\");\r\n                                  }}\r\n                                >\r\n                                  <MdSettings />\r\n                                  선택\r\n                                </ActionButton>\r\n                                <CustomList>\r\n                                  {docCategory.map((item, index) => {\r\n                                    return (\r\n                                      <Chip key={index}>{item.CT_NM}</Chip>\r\n                                    );\r\n                                  })}\r\n                                </CustomList>\r\n                              </div>\r\n                              <div className=\"input-wrapper\">\r\n                                <div className=\"input-title\">\r\n                                  크롤러 수집주기 (day)\r\n                                </div>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  value={hostWorkCycle}\r\n                                  onChange={_hostWorkCycleHandler}\r\n                                />\r\n                              </div>\r\n                              <ActionButton onClick={hostRegisterUpload}>\r\n                                등록\r\n                              </ActionButton>\r\n                            </HostRegisterContainer>\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </DictonaryDataTable>\r\n          </div>\r\n        </ContentContainer>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  font-size: 14px;\r\n  min-height: 1280px;\r\n  background-color: #eee;\r\n  color: rgb(59, 59, 59);\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst LineBox = styled.div`\r\n  /* border: solid 1px #d6d6d6;\r\n  border-radius: 4px; */\r\n  background-color: white;\r\n  margin: 1rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n`;\r\n\r\nconst ContentContainer = styled(LineBox)`\r\n  .content-title {\r\n    border-bottom: 1px solid #d6d6d6;\r\n    padding: 1rem;\r\n    .main-title {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n    .sub-title {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  .content-body {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nconst DictionaryFunctionWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  min-height: 3rem;\r\n`;\r\nconst DictionaryFunctionBtnWrapper = styled.div`\r\n  display: flex;\r\n  input[type=\"file\"] {\r\n    display: none;\r\n  }\r\n  button,\r\n  label {\r\n    cursor: pointer;\r\n    margin: 0.5rem;\r\n    font-size: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #435269;\r\n    color: white;\r\n    border: solid 1px rgba(0, 0, 0, 0.1);\r\n    border-radius: 4px;\r\n    padding: 0 0.5rem 0 0.5rem;\r\n  }\r\n`;\r\nconst DictonaryDataTable = styled.table`\r\n  width: 100%;\r\n  table-layout: fixed;\r\n  border-collapse: collapse;\r\n  text-align: left;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  thead {\r\n    background-color: #d8dee6;\r\n    color: #323d4d;\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n  }\r\n  th,\r\n  td {\r\n    border-bottom: solid 1px #eee;\r\n    padding: 10px;\r\n    word-break: normal; word-wrap: break-word;\r\n  }\r\n  tbody {\r\n    tr:nth-child(even) {\r\n      background-color: #f4f5f8;\r\n    }\r\n  }\r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n  }\r\n  .crawl-setting {\r\n    width: 10rem;\r\n  }\r\n  .crawl-test {\r\n    color: #009999;\r\n    font-weight: bold;\r\n  }\r\n  .registered {\r\n    font-weight: bold;\r\n    color: #b80000;\r\n  }\r\n  .actions {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n      height: 2rem;\r\n      width: 2rem;\r\n      margin-left: 0.5rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border: solid 1px rgba(0, 0, 0, 0.1);\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n    .delete {\r\n      background-color: #b80000;\r\n      color: white;\r\n    }\r\n    .confirm {\r\n      background-color: #435269;\r\n      color: white;\r\n    }\r\n  }\r\n  .setting {\r\n    text-align: center;\r\n  }\r\n  input[type=\"text\"] {\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  border: solid 1px #d6d6d6;\r\n  border-radius: 4px;\r\n  padding: 1rem;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n\r\n  .filter-title {\r\n    color: #435269;\r\n    font-weight: bold;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .filter-body {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n  .filter-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    height: 30px;\r\n    div {\r\n      min-width: 10rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n      background-color: #d6d6d6;\r\n      font-size: 12px;\r\n      margin-right: 0.5rem;\r\n      padding-left: 5px;\r\n      padding-right: 5px;\r\n      text-align: center;\r\n      word-wrap: break-word;\r\n    }\r\n    input,\r\n    select {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 100%;\r\n      width: 100%;\r\n      border: solid 1px #d6d6d6;\r\n      margin: 0 0.5rem 0 0.5rem;\r\n      padding-left: 0.5rem;\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n  .filter-action {\r\n    display: flex;\r\n    justify-content: end;\r\n    button {\r\n      cursor: pointer;\r\n      border-radius: 4px;\r\n      border: none;\r\n      background-color: #435269;\r\n      color: white;\r\n      padding: 0.5rem 1rem 0.5rem 1rem;\r\n    }\r\n  }\r\n`;\r\nconst ActionButton = styled.button`\r\n  margin: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: solid 1px rgba(0, 0, 0, 0.1);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  .delete {\r\n    background-color: #b80000;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst HostRegisterContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  .input-wrapper {\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    height: 2rem;\r\n    align-items: center;\r\n    .input-title {\r\n      min-width: 100px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 30px;\r\n      background-color: #d6d6d6;\r\n      font-size: 12px;\r\n      margin-right: 0.5rem;\r\n      padding-left: 5px;\r\n      padding-right: 5px;\r\n      text-align: center;\r\n      word-wrap: break-word;\r\n    }\r\n    input {\r\n      max-width: 100px;\r\n      border: solid 1px #d6d6d6;\r\n      margin: 0 0.5rem 0 0.5rem;\r\n      padding: 0.5rem;\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CustomList = styled.div`\r\n  display: flex;\r\n`;\r\nconst Chip = styled.div`\r\n  font-size: 12px;\r\n  padding: 0.25rem 0.5rem;\r\n  margin: 0.25rem;\r\n  background-color: #eee;\r\n  min-width: 2rem;\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport default HostManagement;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport HostManagement from \"./HostManagement\";\r\nimport XLSX from \"xlsx\";\r\nimport {\r\n  HostManagementApi,\r\n  hostSyncApi,\r\n  HostTestApi,\r\n  sessionHandler,\r\n} from \"../../../Utils/api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setModal,\r\n  setModalData,\r\n  setCategoryModalType,\r\n} from \"../../../Modules/modal\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction HostManagementContainer() {\r\n  const dispatch = useDispatch();\r\n  const [hostList, setHostList] = useState([]);\r\n  const [hostTestList, setHostTestList] = useState([]);\r\n\r\n  const [currentHostList, setCurrentHostList] = useState([]);\r\n  const [selectedHost, setSelectedHost] = useState(null);\r\n  /* 검색 필터 변수 */\r\n  const [filterInputs, setFilterInputs] = useState({\r\n    host: \"\",\r\n    lang: \"\",\r\n    country: \"\",\r\n    name: \"\",\r\n    category: \"\",\r\n    workCycle: \"\",\r\n  });\r\n  const { host, lang, country, name, category, workCycle } = filterInputs; // 비구조화 할당을 통해 값 추출\r\n  const [filterOpen, setFilterOpen] = useState(true);\r\n\r\n  /* crawlDataForm 과 공유하여 사용. 어차피 각 화면은 독립적이기 때문에. */\r\n  const [hostPublisher, setHostPublisher] = useState(\"\");\r\n  const [hostWorkCycle, setHostWorkCycle] = useState(\"\");\r\n  const docLanguage = useSelector(\r\n    (state) => state.modal.modalData.doc_language\r\n  ); // doc_language HOST 언어\r\n  const docCountry = useSelector((state) => state.modal.modalData.doc_country); // doc_country HOST 국가\r\n  const docCategory = useSelector(\r\n    (state) => state.modal.modalData.doc_category\r\n  ); // doc_category HOST 정책 분류\r\n\r\n  const _hostPublisherHandler = (e) => {\r\n    setHostPublisher(e.target.value);\r\n  };\r\n  const _hostWorkCycleHandler = (e) => {\r\n    setHostWorkCycle(e.target.value);\r\n  };\r\n  const _registerHostOpenHandler = (host) => {\r\n    //현재 선택된 host_id 새로 보고자 하는 host_id 같을경우 이미 오픈된 목록을 닫는걸로 생각\r\n    if (selectedHost) {\r\n      if (selectedHost.idx === host.idx) {\r\n        setSelectedHost(null);\r\n      } else {\r\n        setSelectedHost(host);\r\n      }\r\n    } else {\r\n      setSelectedHost(host);\r\n    }\r\n  };\r\n  const _openCategoryModal = (categoryModalType) => {\r\n    dispatch(setModal(\"CategoryModal\"));\r\n    dispatch(setCategoryModalType(categoryModalType));\r\n  };\r\n  const _filterInputsHandler = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n    setFilterInputs({\r\n      ...filterInputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value, // name 키를 가진 값을 value 로 설정\r\n    });\r\n  };\r\n  const filterSearch = () => {\r\n    let _result = [...hostList];\r\n    for (let key in filterInputs) {\r\n      // host와 name은 포함검색되어야하기에\r\n      if (key === \"host\" || key === \"name\") {\r\n        _result = _result.filter((item) => {\r\n          return item[key].includes(filterInputs[key]);\r\n        });\r\n      } else {\r\n        if (filterInputs[key] !== \"\") {\r\n          // 빈 값이 filter에 걸리면 값이 걸러지지 않기 때문..\r\n          if (key === \"workCycle\") {\r\n            _result = _result.filter((item) => {\r\n              return item[key] == filterInputs[key];\r\n            });\r\n          } else {\r\n            _result = _result.filter((item) => {\r\n              if (item[key].length === 0) {\r\n                return false;\r\n              } else {\r\n                return item[key][0].CT_NM === filterInputs[key];\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setCurrentHostList(_result);\r\n  };\r\n  const _filterOpenHandler = () => {\r\n    setFilterOpen(!filterOpen);\r\n  };\r\n\r\n  const excelUpload = (e) => {\r\n    let _excelData = [];\r\n    let input = e.target;\r\n    let reader = new FileReader();\r\n    reader.onload = function () {\r\n      let data = reader.result;\r\n      const excelFile = XLSX.read(data, { type: \"binary\" });\r\n      const sheetName = excelFile.SheetNames[0];\r\n      const firstSheet = excelFile.Sheets[sheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet, { defval: \"\" });\r\n      jsonData.map((item) => {\r\n        // _excelData.push({\r\n        //   host: item[\"HOST 도메인\"],\r\n        //   country: item[\"HOST 해당 국가\"],\r\n        //   lang: item[\"HOST 해당 언어\"],\r\n        //   name: item[\"발급 기관 명\"],\r\n        //   category: item[\"HOST 정책 분류\"],\r\n        //   workCycle: item[\"크롤링 수집주기\"],\r\n        // });\r\n        _excelData.push(item[\"HOST 도메인\"]);\r\n      });\r\n      console.log(_excelData)\r\n      //hostTestUpload(_excelData);\r\n    };\r\n    reader.readAsBinaryString(input.files[0]);\r\n  };\r\n  const excelDownload = () => {\r\n    // 새 엑셀 임시 새 문서 생성\r\n    const book = XLSX.utils.book_new();\r\n    // 값 생성\r\n    let _arr = [\r\n      [\r\n        \"HOST 도메인\",\r\n        \"HOST 해당 언어\",\r\n        \"HOST 해당 국가\",\r\n        \"발급 기관 명\",\r\n        \"HOST 정책 분류\",\r\n        \"크롤링 수집주기\",\r\n      ],\r\n    ];\r\n    hostList.map((item) => {\r\n      _arr.push([\r\n        item.host,\r\n        item.lang,\r\n        item.country,\r\n        item.name,\r\n        item.category,\r\n        item.workCycle,\r\n      ]);\r\n    });\r\n    const _hostArray = XLSX.utils.aoa_to_sheet(_arr);\r\n    // 첫번째 시트에 생성한 데이터를 넣는다.\r\n    XLSX.utils.book_append_sheet(book, _hostArray, \"HOST 목록\");\r\n    // 엑셀파일을 생성하고 저장한다.\r\n    XLSX.writeFile(book, `host_list.xlsx`);\r\n  };\r\n\r\n  const hostTestUpload = (excel_data) => {\r\n    HostTestApi({ list: excel_data }, \"POST\").then((res) => {\r\n      if (res.status === 200) {\r\n        alert(\"성공적으로 업로드되었습니다\");\r\n        dataFetch();\r\n      }\r\n    });\r\n  };\r\n\r\n  const eachHostModify = (host) => {\r\n    HostManagementApi({ list: host }, \"POST\").then((res) => {\r\n      if (res.status === 200) {\r\n        alert(\"성공적으로 수정 되었습니다\");\r\n        dataFetch();\r\n      }\r\n    });\r\n  };\r\n\r\n  const nextrendSync = () => {\r\n    hostSyncApi().then((res) => {\r\n      if (res.status === 200) {\r\n        alert(\"성공적으로 동기화 되었습니다.\");\r\n        dataFetch();\r\n        //testDataFetch();\r\n      }\r\n    });\r\n  };\r\n  const hostRegisterUpload = () => {\r\n    if (selectedHost) {\r\n      if (\r\n        hostPublisher === \"\" ||\r\n        docCountry.length === 0 ||\r\n        docCategory.length === 0 ||\r\n        docLanguage.length === 0 ||\r\n        hostWorkCycle === \"\"\r\n      ) {\r\n        alert(\"모든 값을 채워주세요\");\r\n        return;\r\n      } else if (docCountry.length > 1) {\r\n        alert(\"국가는 하나만 선택 가능합니다.\");\r\n      } else if (docCategory.length > 1) {\r\n        alert(\"정책 분류는 하나만 선택 가능합니다.\");\r\n      } else if (docLanguage.length > 1) {\r\n        alert(\"언어는 하나만 선택 가능합니다.\");\r\n      } else {\r\n        const hostObj = {\r\n          category: docCategory[0].CODE,\r\n          country: docCountry[0].CODE,\r\n          lang: docLanguage[0].CODE,\r\n          name: hostPublisher,\r\n          host: selectedHost.host,\r\n          workCycle: hostWorkCycle,\r\n        };\r\n        eachHostModify([hostObj]);\r\n      }\r\n    } else {\r\n      alert(\"host를 선택해주세요.\");\r\n    }\r\n  };\r\n\r\n  const testDataFetch = () => {\r\n    trackPromise(\r\n      HostTestApi(null, \"GET\")\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          testDataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            HostTestApi(null, \"GET\").then((res) => {\r\n              testDataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n  const dataFetch = () => {\r\n    trackPromise(\r\n      HostManagementApi(null, \"GET\")\r\n        .then((res) => {\r\n          dataCleansing(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            HostManagementApi(null, \"GET\").then((res) => {\r\n              dataCleansing(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n  const dataCleansing = (rawData) => {\r\n    const _arr = rawData.map((item) => {\r\n      let _obj = {};\r\n      _obj[\"idx\"] = item.IDX;\r\n      _obj[\"host\"] = item.HOST || \"\";\r\n      _obj[\"lang\"] = item.LANG;\r\n      _obj[\"name\"] = item.NAME || \"\";\r\n      _obj[\"country\"] = item.COUNTRY;\r\n      _obj[\"category\"] = item.CATEGORY;\r\n      _obj[\"workCycle\"] = item.WORK_CYCLE || \"\";\r\n      return _obj;\r\n    });\r\n    setHostList(_arr);\r\n  };\r\n\r\n  const testDataCleansing = (rawData) => {\r\n    const _arr = rawData.map((item,index) => {\r\n      let _obj = { ...item };\r\n      _obj[\"idx\"]=index;\r\n      _obj[\"test_end\"] = true;\r\n      _obj[\"is_registered\"] =\r\n        hostList.filter((host) => host.host === \"https://www.worldbank.org/\")\r\n          .length === 1;\r\n      return _obj;\r\n    });\r\n    setHostTestList(_arr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataFetch();\r\n    //testDataFetch();\r\n  }, []);\r\n  useEffect(() => {\r\n    setCurrentHostList(hostList);\r\n  }, [hostList]);\r\n  useEffect(() => {\r\n    if (!!selectedHost) {\r\n      console.log(selectedHost);\r\n      setHostPublisher(selectedHost.name);\r\n      setHostWorkCycle(selectedHost.workCycle);\r\n      dispatch(setModalData(selectedHost.category, \"doc_category\")); // 값 세팅\r\n      dispatch(setModalData(selectedHost.country, \"doc_country\")); // 값 세팅\r\n      dispatch(setModalData(selectedHost.lang, \"doc_language\")); // 값 세팅\r\n    }\r\n  }, [selectedHost]);\r\n  return (\r\n    <>\r\n      <HostManagement\r\n        currentHostList={currentHostList}\r\n        filterOpen={filterOpen}\r\n        _filterOpenHandler={_filterOpenHandler}\r\n        _filterInputsHandler={_filterInputsHandler}\r\n        filterSearch={filterSearch}\r\n        excelDownload={excelDownload}\r\n        excelUpload={excelUpload}\r\n        _registerHostOpenHandler={_registerHostOpenHandler}\r\n        selectedHost={selectedHost}\r\n        _openCategoryModal={_openCategoryModal}\r\n        docCountry={docCountry}\r\n        docCategory={docCategory}\r\n        docLanguage={docLanguage}\r\n        hostRegisterUpload={hostRegisterUpload}\r\n        _hostPublisherHandler={_hostPublisherHandler}\r\n        _hostWorkCycleHandler={_hostWorkCycleHandler}\r\n        hostWorkCycle={hostWorkCycle}\r\n        hostPublisher={hostPublisher}\r\n        nextrendSync={nextrendSync}\r\n        hostTestList={hostTestList}\r\n        \r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default HostManagementContainer;\r\n","import React from \"react\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nimport SearchBar from \"../../../Components/SearchBar\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  MdUpload,\r\n  MdDownload,\r\n  MdOutlineModeEditOutline,\r\n  MdOutlineDeleteOutline,\r\n  MdOutlineCheck,\r\n  MdClose,\r\n} from \"react-icons/md\";\r\nfunction MultilingualDictionary({\r\n  dataAddOpen,\r\n  dataAddOpenHandler,\r\n  currentWordData,\r\n  editWordIndex,\r\n  editWordData,\r\n  editWordOpen,\r\n  editWordCancel,\r\n  editWordHandler,\r\n  saveWord,\r\n  deleteWord,\r\n  keywordHandler,\r\n  search,\r\n  addWord,\r\n  addWordDataHandler,\r\n  wordDataUpload,\r\n  wordDataDownload\r\n}) {\r\n  return (\r\n    <>\r\n      <FormHeader type={\"view\"} title={\"다국어 사전 관리\"} />\r\n      <Wrapper>\r\n        <ContentContainer>\r\n          <div className=\"content-title\">\r\n            <div className=\"main-title\">\r\n              검색에 사용할 다국어 단어 정의를 추가해주세요. 검색은 검색어를 포함한 결과를 표출합니다.\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <DictionaryFunctionWrapper>\r\n              <ShortSearchBar>\r\n                <SearchBar keywordHandler={keywordHandler} searchAction={search}/>\r\n              </ShortSearchBar>\r\n              <DictionaryFunctionBtnWrapper>\r\n                <label htmlFor=\"excel-upload\">\r\n                  <MdUpload size=\"20\" />\r\n                  사전 데이터 일괄 업로드\r\n                </label>\r\n                <input id=\"excel-upload\" type=\"file\" accept=\".xlsx\" onChange={wordDataUpload}/>\r\n                <button onClick={wordDataDownload}>\r\n                  <MdDownload size=\"20\" />\r\n                  사전 데이터 다운로드\r\n                </button>\r\n                <button>\r\n                  <MdOutlineDeleteOutline size=\"20\" />\r\n                  선택 데이터 일괄 삭제\r\n                </button>\r\n              </DictionaryFunctionBtnWrapper>\r\n            </DictionaryFunctionWrapper>\r\n            <DictonaryDataTable>\r\n              <colgroup>\r\n                <col width=\"5%\" />\r\n                <col width=\"85%\" />\r\n                <col width=\"10%\" />\r\n              </colgroup>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"select\">\r\n                    <input type=\"checkbox\" />\r\n                  </th>\r\n                  <th>\r\n                    다국어 단어 정의\r\n                  </th>\r\n                  <th className=\"setting\">관리</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentWordData.map((word, index) => {\r\n                  return editWordIndex === word.IDX ? (\r\n                    <tr>\r\n                      <td className=\"select\">\r\n                        <input type=\"checkbox\" />\r\n                      </td>\r\n                      <td className=\"data\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={editWordData}\r\n                          onChange={editWordHandler}\r\n                        />\r\n                      </td>\r\n                      <td className=\"setting\">\r\n                        <div className=\"actions\">\r\n                          <button\r\n                            className=\"confirm\"\r\n                            onClick={() => {\r\n                              saveWord(word);\r\n                            }}\r\n                          >\r\n                            <MdOutlineCheck />\r\n                          </button>\r\n                          <button onClick={editWordCancel}>\r\n                            <MdClose />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    <tr>\r\n                      <td className=\"select\">\r\n                        <input type=\"checkbox\" />\r\n                      </td>\r\n                      <td className=\"data\">{word.MULTI_TEXT}</td>\r\n                      <td className=\"setting\">\r\n                        <div className=\"actions\">\r\n                          <button\r\n                            onClick={() => {\r\n                              editWordOpen(word);\r\n                            }}\r\n                          >\r\n                            <MdOutlineModeEditOutline />\r\n                          </button>\r\n                          <button\r\n                            className=\"delete\"\r\n                            onClick={() => {\r\n                              deleteWord(word);\r\n                            }}\r\n                          >\r\n                            <MdOutlineDeleteOutline />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </DictonaryDataTable>\r\n            <DataAddContainer>\r\n              <button onClick={dataAddOpenHandler}>+ 새 데이터 추가</button>\r\n              {dataAddOpen && (\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"다국어 동의어를 입력해주세요.\"\r\n                    onChange={addWordDataHandler}\r\n                  />\r\n                  <button onClick={addWord}>추가</button>\r\n                </div>\r\n              )}\r\n            </DataAddContainer>\r\n          </div>\r\n        </ContentContainer>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n  min-height: 1280px;\r\n  background-color: #eee;\r\n  color: rgb(59, 59, 59);\r\n`;\r\n\r\nconst ShortSearchBar = styled.div`\r\n  width: 500px;\r\n`;\r\nconst LineBox = styled.div`\r\n  /* border: solid 1px #d6d6d6;\r\n  border-radius: 4px; */\r\n  background-color: white;\r\n  margin: 1rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n`;\r\n\r\nconst ContentContainer = styled(LineBox)`\r\n  width: 100%;\r\n  .content-title {\r\n    border-bottom: 1px solid #d6d6d6;\r\n    padding: 1rem;\r\n    .main-title {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  .content-body {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nconst DictionaryFunctionWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 1rem;\r\n`;\r\nconst DictionaryFunctionBtnWrapper = styled.div`\r\n  display: flex;\r\n  input[type=file]{\r\n    display:none;\r\n  }\r\n  button,label {\r\n    cursor:pointer;\r\n    margin: 0.5rem;\r\n    font-size: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #435269;\r\n    color: white;\r\n    border: solid 1px rgba(0, 0, 0, 0.1);\r\n    border-radius: 4px;\r\n    padding: 0 0.5rem 0 0.5rem;\r\n  }\r\n`;\r\nconst DictonaryDataTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  text-align: left;\r\n  th,\r\n  td {\r\n    border-bottom: 1px solid #d6d6d6;\r\n    padding: 10px;\r\n  }\r\n  tr:first-child,\r\n  tr:last-child {\r\n    border: none;\r\n  }\r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n  }\r\n  .sort-btn {\r\n    background-color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  .actions {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n      height: 2rem;\r\n      width: 2rem;\r\n      margin-left: 0.5rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border: solid 1px rgba(0, 0, 0, 0.1);\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n    .delete {\r\n      background-color: #b80000;\r\n      color: white;\r\n    }\r\n    .confirm {\r\n      background-color: #435269;\r\n      color: white;\r\n    }\r\n  }\r\n  .setting {\r\n    text-align: center;\r\n  }\r\n  input[type=\"text\"] {\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DataAddContainer = styled.div`\r\n  display: flex;\r\n  margin:1rem;\r\n  & *{\r\n    margin-right:1rem;\r\n  }\r\n  button {\r\n    padding:0.5rem;\r\n    font-size: 12px;\r\n    background-color: #435269;\r\n    color: white;\r\n    border: solid 1px rgba(0, 0, 0, 0.1);\r\n    border-radius: 4px;\r\n    cursor:pointer;\r\n  }\r\n  input[type=text]{\r\n    height:85%;\r\n    min-width:300px;\r\n    padding-left:0.5rem;\r\n    &:focus{\r\n      outline:none;\r\n    }\r\n  }\r\n`;\r\nexport default MultilingualDictionary;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MultilingualDictionary from \"./MultilingualDictionary\";\r\nimport { MultilingualDictionaryApi, sessionHandler } from \"../../../Utils/api\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport XLSX from \"xlsx\";\r\nfunction MultilingualDictionaryContainer() {\r\n  const dispatch = useDispatch();\r\n  const [wordData, setWordData] = useState([]); // 단어 데이터\r\n  const [currentWordData, setCurrentWordData] = useState([]); // 현재 보여질 결과\r\n  const [dataAddOpen, setDataAddOpen] = useState(false);\r\n  const [editWordIndex, setEditWordIndex] = useState(-1); // 수정할 다국어 단어의 index\r\n  const [editWordData, setEditWordData] = useState(\"\"); // 수정할 다국어 단어의 data\r\n  const [keyword, setKeyword] = useState(\"\"); // 검색어\r\n  const [addWordData, setAddWordData] = useState(\"\"); // 추가할 데이터\r\n  const dataAddOpenHandler = () => {\r\n    setDataAddOpen(!dataAddOpen);\r\n  };\r\n  const addWordDataHandler = (e) => {\r\n    setAddWordData(e.target.value);\r\n  };\r\n  const addWord = () => {\r\n    if (addWordData === \"\") {\r\n      alert(\"추가할 단어를 입력해주세요\");\r\n      return;\r\n    } else {\r\n      const data = { multi_text: addWordData };\r\n      MultilingualDictionaryApi(data, \"POST\").then((res) => {\r\n        if (res.status === 200) {\r\n          alert(\"성공적으로 등록되었습니다.\");\r\n          dataFetch();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const editWordOpen = (word) => {\r\n    setEditWordIndex(word.IDX);\r\n    setEditWordData(word.MULTI_TEXT);\r\n  };\r\n  const editWordCancel = () => {\r\n    setEditWordIndex(-1);\r\n    setEditWordData(\"\");\r\n  };\r\n  const editWordHandler = (e) => {\r\n    setEditWordData(e.target.value);\r\n  };\r\n\r\n  const wordDataUpload = (e) => {\r\n    let _excelData = [];\r\n    let input = e.target;\r\n    let reader = new FileReader();\r\n    reader.onload = function () {\r\n      let data = reader.result;\r\n      const excelFile = XLSX.read(data, { type: \"binary\" });\r\n      const sheetName = excelFile.SheetNames[0];\r\n      const firstSheet = excelFile.Sheets[sheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet, { defval: \"\" });\r\n      jsonData.map((word, index) => {\r\n        _excelData.push({\r\n          multi_text: Object.values(word)\r\n            .slice(1)\r\n            .map((item) => item.split(\", \"))\r\n            .flat(Infinity)\r\n            .filter((item) => item !== \"\")\r\n            .join(\", \"),\r\n        });\r\n      });\r\n      const list = { list: _excelData };\r\n      MultilingualDictionaryApi(list, \"POST\").then((res) => {\r\n        if (res.status === 200) {\r\n          alert(\"성공적으로 등록되었습니다.\");\r\n          dataFetch();\r\n        }\r\n      });\r\n    };\r\n    reader.readAsBinaryString(input.files[0]);\r\n  };\r\n\r\n  const wordDataDownload = (e) => {\r\n    // 새 엑셀 임시 새 문서 생성\r\n    const book = XLSX.utils.book_new();\r\n    // 값 생성. 언어 구분 없어도 가능.\r\n    let _arr = [[\"id\",\"다국어 유사어, 관련어를 (, )로 구분 또는 셀로 구분하여 입력하세요.\"]];\r\n    wordData.map((item) => {\r\n      _arr.push([item.IDX,...item.MULTI_TEXT.split(\", \")]);\r\n    });\r\n    const _hostArray = XLSX.utils.aoa_to_sheet(_arr);\r\n    // 첫번째 시트에 생성한 데이터를 넣는다.\r\n    XLSX.utils.book_append_sheet(book, _hostArray, \"다국어 사전 목록\");\r\n    // 엑셀파일을 생성하고 저장한다.\r\n    XLSX.writeFile(book, \"multilingual_dictionary_list.xlsx\");\r\n  };\r\n  const saveWord = (word) => {\r\n    const data = { idx: word.IDX, multi_text: editWordData };\r\n    MultilingualDictionaryApi(data, \"PUT\").then((res) => {\r\n      if (res.status === 200) {\r\n        alert(\"성공적으로 수정되었습니다.\");\r\n        editWordCancel();\r\n        dataFetch();\r\n      }\r\n    });\r\n  };\r\n  const deleteWord = (word) => {\r\n    const data = { idx: word.IDX };\r\n    MultilingualDictionaryApi(data, \"DELETE\").then((res) => {\r\n      if (res.status === 200) {\r\n        alert(\"성공적으로 삭제되었습니다.\");\r\n        dataFetch();\r\n      }\r\n    });\r\n  };\r\n  const keywordHandler = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n\r\n  const search = () => {\r\n    setCurrentWordData(\r\n      wordData.filter((word) => {\r\n        return word.MULTI_TEXT.includes(keyword);\r\n      })\r\n    );\r\n  };\r\n\r\n  const dataFetch = () => {\r\n    trackPromise(\r\n      MultilingualDictionaryApi(null, \"GET\")\r\n        .then((res) => {\r\n          setWordData(res.data);\r\n          setCurrentWordData(res.data);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            MultilingualDictionaryApi(null, \"GET\").then((res) => {\r\n              setWordData(res.data);\r\n              setCurrentWordData(res.data);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataFetch();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentWordData.length !== 0) {\r\n      setCurrentWordData(\r\n        wordData.filter((word) => {\r\n          return word.MULTI_TEXT.includes(keyword);\r\n        })\r\n      );\r\n    }\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <>\r\n      <MultilingualDictionary\r\n        dataAddOpen={dataAddOpen}\r\n        dataAddOpenHandler={dataAddOpenHandler}\r\n        currentWordData={currentWordData}\r\n        editWordIndex={editWordIndex}\r\n        editWordData={editWordData}\r\n        editWordOpen={editWordOpen}\r\n        editWordCancel={editWordCancel}\r\n        editWordHandler={editWordHandler}\r\n        saveWord={saveWord}\r\n        deleteWord={deleteWord}\r\n        keywordHandler={keywordHandler}\r\n        search={search}\r\n        addWord={addWord}\r\n        addWordDataHandler={addWordDataHandler}\r\n        wordDataUpload={wordDataUpload}\r\n        wordDataDownload={wordDataDownload}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default MultilingualDictionaryContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FormHeader from \"../../../Components/FormHeader\";\r\nfunction UserCustomMenu({\r\n  userList,\r\n  currentUserId,\r\n  setCurrentUserId,\r\n  openCategoryModal,\r\n  previewAxisMenu,\r\n  axisCategoryInfo,\r\n  saveUserAxisData\r\n}) {\r\n  return (\r\n    <>\r\n      <FormHeader type={\"view\"} title={\"맞춤형 화면 생성\"} />\r\n      <Wrapper>\r\n        <UserListCard>\r\n          <div className=\"title\">\r\n            <div className=\"title-main\">사용자 목록</div>\r\n            <div className=\"title-sub\">\r\n              사용자 맞춤형 화면을 생성 또는 수정하시려면 사용자 목록에서\r\n              사용자를 클릭하세요.\r\n            </div>\r\n          </div>\r\n          <div className=\"content\">\r\n            {userList.map((user, index) => {\r\n              return (\r\n                <UserCard\r\n                  key={index}\r\n                  active={user.id === currentUserId}\r\n                  onClick={() => {\r\n                    setCurrentUserId(user.id);\r\n                  }}\r\n                >\r\n                  <div className=\"name-and-id\">\r\n                    <div className=\"name\">{user.Name}</div>\r\n                    <div className=\"id\">{user.userID}</div>\r\n                  </div>\r\n                  <div className=\"company\">\r\n                    {user.Company || \"소속 없음\"} /{\" \"}\r\n                    {user.Position || \"직책 없음\"}\r\n                  </div>\r\n                </UserCard>\r\n              );\r\n            })}\r\n          </div>\r\n        </UserListCard>\r\n        <MenuCustomCard>\r\n          <div className=\"title\">\r\n            <div className=\"title-main\">사용자 맞춤형 X축 및 Y축 설정</div>\r\n            <div className=\"title-sub\">\r\n              해당 축에 표시할 분류를 선택하세요. 선택한 분류의 하위 분류가 해당\r\n              축의 메뉴로 표출됩니다. 클릭시 모달창이 뜹니다. X축과 Y축이 동일한 카테고리 타입을 가질 수 없습니다.\r\n            </div>\r\n          </div>\r\n          <div className=\"content\">\r\n            <AxisCardWrapper>\r\n              <AxisCard>\r\n                <button\r\n                  className=\"axis-setting\"\r\n                  onClick={() => {\r\n                    openCategoryModal(\"X\");\r\n                  }}\r\n                >\r\n                  X축 설정\r\n                </button>\r\n                <div className=\"axis-contents\">\r\n                  <div className=\"category-info\">{axisCategoryInfo.X.category_type || \"선택없음\"}</div>\r\n                  <div>{`>`}</div>\r\n                  <div className=\"category-code\">{axisCategoryInfo.X.select_category_name || \"선택없음\"}</div>\r\n                </div>\r\n              </AxisCard>\r\n              <AxisCard>\r\n                <button\r\n                  className=\"axis-setting\"\r\n                  onClick={() => {\r\n                    openCategoryModal(\"Y\");\r\n                  }}\r\n                >\r\n                  Y축 설정\r\n                </button>\r\n                <div className=\"axis-contents\">\r\n                  <div className=\"category-info\">{axisCategoryInfo.Y.category_type || \"선택없음\"}</div>\r\n                  <div>{`>`}</div>\r\n                  <div className=\"category-code\">{axisCategoryInfo.Y.select_category_name || \"선택없음\"}</div>\r\n                </div>\r\n              </AxisCard>\r\n            </AxisCardWrapper>\r\n            <PreviewMenuWrapper>\r\n              <div className=\"axis-title\">미리보기</div>\r\n              <div className=\"axis-x-menu\">\r\n                {previewAxisMenu.X.map((item,index) => {\r\n                  return <div key={index}>{item.ct_nm}</div>;\r\n                })}\r\n              </div>\r\n              <div className=\"axis-y-menu\">\r\n              {previewAxisMenu.Y.map((item,index) => {\r\n                  return <div key={index}>{item.ct_nm}</div>;\r\n                })}\r\n              </div>\r\n              <div className=\"contents-body\">해당 위치에 조건에 맞는 자료가 표출됩니다.</div>\r\n            </PreviewMenuWrapper>\r\n            <div className=\"action\">\r\n              <SaveButton onClick={saveUserAxisData}>저장</SaveButton>\r\n            </div>\r\n          </div>\r\n        </MenuCustomCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  font-size: 14px;\r\n  min-height: 1280px;\r\n  background-color: #eee;\r\n  color: rgb(59, 59, 59);\r\n`;\r\n\r\nconst PreviewMenuWrapper = styled.div`\r\n  padding: 0.5rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 8fr;\r\n  grid-template-rows: 50px minmax(200px, auto);\r\n  .axis-title {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: white;\r\n    grid-column: 1 / 2;\r\n    grid-row: 1 / 2;\r\n    color: #009999;\r\n    font-weight:bold;\r\n  }\r\n  .axis-x-menu {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    color: white;\r\n    background-color: #435269;\r\n    grid-column: 2 / 3;\r\n    grid-row: 1 / 2;\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 100%;\r\n      padding-left: 1.5rem;\r\n      padding-right: 1.5rem;\r\n      text-align: center;\r\n      &:hover {\r\n        background-color: rgba(255, 255, 255, 0.2);\r\n      }\r\n    }\r\n  }\r\n  .axis-y-menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #eee;\r\n    grid-column: 1 / 2;\r\n    grid-row: 2 / 3;\r\n    div {\r\n      padding: 0.5rem;\r\n      text-align: center;\r\n      &:hover {\r\n        background-color: #d6d6d6;\r\n      }\r\n    }\r\n  }\r\n  .contents-body {\r\n    grid-column: 2 / 3;\r\n    grid-row: 2 / 3;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n  }\r\n`;\r\nconst CardWrapper = styled.div`\r\n  margin: 1rem 0.5rem 1rem 0.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  background-color: white;\r\n  height: 100%;\r\n  .title {\r\n    font-weight: bold;\r\n    border-bottom: 1px solid #e6e9ed;\r\n    padding: 1rem;\r\n  }\r\n  .title-main {\r\n    font-size: 18px;\r\n    color: rgb(59, 59, 59);\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  .title-sub {\r\n    font-size: 12px;\r\n    color: #939ba2;\r\n  }\r\n  .content {\r\n    padding: 1rem;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst MenuCustomCard = styled(CardWrapper)`\r\n  width: 80%;\r\n  .content {\r\n    min-height: 35rem;\r\n  }\r\n`;\r\nconst SaveButton = styled.button`\r\n  margin: 0.5rem;\r\n  height: 2rem;\r\n  border: none;\r\n  padding: 0 1rem 0 1rem;\r\n  border-radius: 5px;\r\n  background-color: #435269;\r\n  color: white;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\nconst UserListCard = styled(CardWrapper)`\r\n  width: 20%;\r\n  .content {\r\n    background-color: #f6f6f6;\r\n    height: 35rem;\r\n    overflow: scroll;\r\n  }\r\n`;\r\nconst UserCard = styled.div`\r\n  background-color: ${(props) =>\r\n    props.active ? \"rgba(67,82,105,0.05)\" : \"white\"};\r\n\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 0.875rem 0 rgba(33, 37, 41, 0.05);\r\n  padding: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  border-left: ${(props) => (props.active ? \"solid 5px #435269\" : null)};\r\n  &:hover {\r\n    transform: scale(1.02);\r\n    cursor: pointer;\r\n  }\r\n  .name-and-id {\r\n    display: flex;\r\n  }\r\n  .name {\r\n    color: #009999;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    margin-right: 1rem;\r\n  }\r\n  .id {\r\n    color: #939ba2;\r\n  }\r\n  .company {\r\n    font-size: 12px;\r\n    margin-top: 0.25rem;\r\n  }\r\n`;\r\nconst AxisCardWrapper = styled.div`\r\n  display: flex;\r\n`;\r\nconst AxisCard = styled.div`\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  .axis-setting {\r\n    cursor: pointer;\r\n    border: none;\r\n    display: flex;\r\n    background-color: #435269;\r\n    color: white;\r\n    font-weight: bold;\r\n    border-radius: 4px;\r\n    padding: 0.5rem 1rem 0.5rem 1rem;\r\n    align-items: center;\r\n    margin-right: 0.5rem;\r\n  }\r\n  .axis-contents {\r\n    display: flex;\r\n    border: 1px solid #e6e9ed;\r\n    border-radius: 4px;\r\n    padding: 0.5rem 1rem 0.5rem 1rem;\r\n    align-items: center;\r\n    .category-info {\r\n      color: #435269;\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n      padding: 4px;\r\n    }\r\n    .category-code {\r\n      padding: 4px;\r\n    }\r\n  }\r\n`;\r\nexport default UserCustomMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UserCustomMenu from \"./UserCustomMenu\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport {\r\n  FetchUsersApi,\r\n  sessionHandler,\r\n  axisMenuPreviewFetchApi,\r\n  userAxisMenuSettingFetchApi,\r\n  userAxisMenuSaveApi,\r\n} from \"../../../Utils/api\";\r\nimport { setModal} from \"../../../Modules/modal\";\r\nfunction UserCustomMenuContainer() {\r\n  const CATEGORY_TYPE_LIST = {\r\n    1: \"정책 분류\",\r\n    2: \"유형 분류\",\r\n    3: \"국가 분류\",\r\n    4: \"언어 분류\",\r\n    5: \"토픽 분류\",\r\n    6: \"기관 맞춤형 분류\",\r\n  };\r\n  const dispatch = useDispatch();\r\n  const [userList, setUserList] = useState([]);\r\n  const [isNewSetting, setIsNewSetting] = useState(false); // 신규 세팅 여부 . true일 경우 신규 생성, false일 경우 기존 세팅 수정\r\n  const [currentUserId, setCurrentUserId] = useState(null); // 현재 선택된 유저의 id\r\n  const [currentAxis, setCurrentAxis] = useState(\"X\"); // 현재 수정중인 축\r\n  const currentCategory = useSelector(\r\n    (state) => state.modal.modalData.axis_category\r\n  ); // 현재 수정중인 축의 카테고리\r\n\r\n  const [axisCategoryInfo, setAxisCategoryInfo] = useState({\r\n    X: { category_type: null, select_category_name: null },\r\n    Y: { category_type: null, select_category_name: null },\r\n  }); // 선택된 값을 미리 보여주기 위한 state\r\n  const [axisMenuData, setAxisMenuData] = useState({ X: null, Y: null }); // 현재 세팅된 축 메뉴\r\n  const [previewAxisMenu, setPreviewAxisMenu] = useState({ X: [], Y: [] }); // 미리보기용 하위 메뉴\r\n  const openCategoryModal = (axis) => {\r\n    setCurrentAxis(axis);\r\n    dispatch(setModal(\"AxisCategoryModal\"));\r\n  };\r\n  const getUserList = () => {\r\n    trackPromise(\r\n      FetchUsersApi()\r\n        .then((res) => {\r\n          const _userList = res.data.filter((user) => {\r\n            return user.Category === \"0\";\r\n          });\r\n          setUserList(_userList);\r\n        })\r\n        .catch((err) => {\r\n          sessionHandler(err, dispatch).then((res) => {\r\n            FetchUsersApi().then((res) => {\r\n              const _userList = res.data.filter((user) => {\r\n                return user.Category === \"0\"; // 일반 사용자만 출력...\r\n              });\r\n              setUserList(_userList);\r\n            });\r\n          });\r\n        })\r\n    );\r\n  };\r\n  const getAxisMenuUserSetting = (uid) => {\r\n    trackPromise(\r\n      userAxisMenuSettingFetchApi(uid).then((res) => {\r\n        if (res.data.length !== 0) {\r\n          setIsNewSetting(false);\r\n          // 값이 존재할 경우\r\n          const userSettingObj = res.data[0];\r\n          setAxisCategoryInfo((prev) => ({\r\n            ...prev,\r\n            X: {\r\n              category_type: CATEGORY_TYPE_LIST[userSettingObj.x_type],\r\n              select_category_name: userSettingObj.x_name,\r\n            },\r\n            Y: {\r\n              category_type: CATEGORY_TYPE_LIST[userSettingObj.y_type],\r\n              select_category_name: userSettingObj.y_name,\r\n            },\r\n          }));\r\n          setAxisMenuData((prev) => ({\r\n            ...prev,\r\n            X: userSettingObj.x_cid !== null?{\r\n              IDX: userSettingObj.x_cid,\r\n              CODE: userSettingObj.x_code,\r\n              CT_NM: userSettingObj.x_name,\r\n              TYPE: userSettingObj.x_type,\r\n            }:null,\r\n            Y: userSettingObj.y_cid !== null?{\r\n              IDX: userSettingObj.y_cid,\r\n              CODE: userSettingObj.y_code,\r\n              CT_NM: userSettingObj.y_name,\r\n              TYPE: userSettingObj.y_type,\r\n            }:null,\r\n          }));\r\n        } else {\r\n          // 값이 존재하지 않을 경우\r\n          setIsNewSetting(true);\r\n          setAxisCategoryInfo({\r\n            X: { category_type: null, select_category_name: null },\r\n            Y: { category_type: null, select_category_name: null },\r\n          });\r\n          setAxisMenuData({ X: null, Y: null });\r\n        }\r\n      })\r\n    );\r\n  };\r\n  const previewSetting = (axis) => {\r\n    trackPromise(\r\n      axisMenuPreviewFetchApi(axisMenuData[axis].IDX).then((res) => {\r\n        setPreviewAxisMenu((prev) => ({\r\n          ...prev,\r\n          [axis]: res.data,\r\n        }));\r\n        setAxisCategoryInfo((prev) => ({\r\n          ...prev,\r\n          [axis]: {\r\n            category_type: CATEGORY_TYPE_LIST[res.data[0].type],\r\n            select_category_name: axisMenuData[axis].CT_NM,\r\n          },\r\n        }));\r\n      })\r\n    );\r\n  };\r\n  const saveUserAxisData = () => {\r\n    if (axisMenuData.X === null || axisMenuData.Y === null) {\r\n      alert(\"X축과 Y축 모두 카테고리를 설정하여야 합니다.\");\r\n      return;\r\n    }\r\n    if (axisCategoryInfo.X.category_type === axisCategoryInfo.Y.category_type) {\r\n      alert(\r\n        \"X축과 Y축이 동일한 카테고리 타입을 가질 수 없습니다. 다시 설정해주세요.\"\r\n      );\r\n      return;\r\n    } else {\r\n      const axisSetObj = {\r\n        uid: currentUserId,\r\n        xaxis: axisMenuData.X.IDX,\r\n        yaxis: axisMenuData.Y.IDX,\r\n      };\r\n      const _isNewSetting = isNewSetting ? \"create\" : \"update\";\r\n      userAxisMenuSaveApi(axisSetObj, _isNewSetting).then((res) => {\r\n        if (res.status === 200) {\r\n          alert(\"성공적으로 저장되었습니다.\");\r\n          getAxisMenuUserSetting(currentUserId); // 리로드\r\n        }\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getUserList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userList.length !== 0) {\r\n      setCurrentUserId(userList[0].id); // 첫번째 사용자를 초기 사용자로 세팅.\r\n    }\r\n  }, [userList]);\r\n\r\n  useEffect(() => {\r\n    // 현재 사용자가 변경되었을 때\r\n    if (currentUserId !== null) {\r\n      getAxisMenuUserSetting(currentUserId);\r\n    }\r\n  }, [currentUserId]);\r\n\r\n  useEffect(() => {\r\n    setAxisMenuData((prev) => ({\r\n      ...prev,\r\n      [currentAxis]: currentCategory,\r\n    }));\r\n  }, [currentCategory]);\r\n\r\n  useEffect(() => {\r\n    // 해당 유저의 세팅정보가 없거나 X축 또는 Y축의 세팅 정보가 없을 때\r\n    if(axisMenuData.X === null){\r\n      setPreviewAxisMenu((prev)=>({...prev,X:[]}))\r\n    }\r\n    if(axisMenuData.Y === null){\r\n      setPreviewAxisMenu((prev)=>({...prev,Y:[]}))\r\n    }\r\n    if(axisMenuData.X !== null){\r\n      previewSetting(\"X\");\r\n    }\r\n    if(axisMenuData.Y !== null){\r\n      previewSetting(\"Y\");\r\n    }\r\n  }, [axisMenuData]);\r\n  return (\r\n    <>\r\n      <UserCustomMenu\r\n        userList={userList}\r\n        currentUserId={currentUserId}\r\n        setCurrentUserId={setCurrentUserId}\r\n        openCategoryModal={openCategoryModal}\r\n        previewAxisMenu={previewAxisMenu}\r\n        axisCategoryInfo={axisCategoryInfo}\r\n        saveUserAxisData={saveUserAxisData}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserCustomMenuContainer;\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"../../Route/PrivateRoute\";\r\n\r\nimport ExcelDataRegisterContainer from \"../Manager/ExcelDataRegister/ExcelDataRegisterContainer\";\r\nimport UserManagementContainer from \"../Manager/UserManagement/UserManagementContainer\";\r\nimport DashboardContainer from \"./Dashboard/DashboardContainer\";\r\nimport CategoryManagementContainer from \"./CategoryManagement/CategoryManagementContainer\";\r\nimport HostManagementContainer from \"./HostManagement/HostManagementContainer\";\r\nimport MultilingualDictionaryContainer from \"./MultilingualDictionary/MultilingualDictionaryContainer\";\r\nimport UserCustomMenuContainer from \"./UserCustomMenu/UserCustomMenuContainer\";\r\nfunction UserSection() {\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute path=\"/user\" component={UserManagementContainer} exact />\r\n      <PrivateRoute path=\"/dashboard\" component={DashboardContainer} exact />\r\n      <PrivateRoute\r\n        path=\"/excel/register\"\r\n        component={ExcelDataRegisterContainer}\r\n        exact\r\n      />\r\n      <PrivateRoute\r\n        path=\"/category\"\r\n        component={CategoryManagementContainer}\r\n        exact\r\n      />\r\n      <PrivateRoute path=\"/host\" component={HostManagementContainer} exact />\r\n      <PrivateRoute\r\n        path=\"/dictionary\"\r\n        component={MultilingualDictionaryContainer}\r\n        exact\r\n      />\r\n      <PrivateRoute\r\n        path=\"/user-custom-menu\"\r\n        component={UserCustomMenuContainer}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default UserSection;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n/* \r\n    restricted 는 로그인 한 상태에서는 접근할 수 없는 사이트이며, \r\n    로그인 상태에서 해당 페이지에 접근하려 하면 메인페이지로 리다이렉트 시킨다.\r\n*/\r\nfunction PublicRoute({ component: Component, restricted, ...rest }) {\r\n\r\n  const isLogin = useSelector((state) => state.login.isLogin);\r\n  const userInfo = useSelector((state) => state.user.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isLogin && restricted ? (\r\n          <Redirect to={userInfo!==null ? userInfo.permission !== 0 ? \"/home\" : \"/library\" : \"/\"} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\nexport default PublicRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n/* components */\r\nimport Header from \"./Components/Header\";\r\nimport MainPage from \"./Pages/Common/MainPage\";\r\nimport AsideMenuBar from \"./Components/AsideMenuBar\";\r\nimport Footer from \"./Components/Footer\";\r\nimport GlobalModal from \"./Components/ModalComponents/GlobalModal\";\r\nimport TopButton from \"./Components/TopButton\";\r\n\r\n/* body */\r\nimport LoginContainer from \"./Pages/Common/Login/LoginContainer\";\r\nimport WorkerSection from \"./Pages/Worker/WorkerSection\";\r\nimport UserSection from \"./Pages/User/UserSection\";\r\nimport ManagerSection from \"./Pages/Manager/ManagerSection\";\r\n\r\n/* route components */\r\nimport PublicRoute from \"./Route/PublicRoute\";\r\nimport PrivateRoute from \"./Route/PrivateRoute\";\r\n\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { userAuthApi, sessionHandler } from \"./Utils/api\";\r\nimport { setUser } from \"./Modules/user\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nfunction App() {\r\n  const isLogin = useSelector((state) => state.login.isLogin, shallowEqual);\r\n  const userInfo = useSelector((state) => state.user.user, shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      trackPromise(\r\n        userAuthApi()\r\n          .then((res) => {\r\n            dispatch(\r\n              setUser({\r\n                name: res.data.Name,\r\n                permission: Number(res.data.Category),\r\n                id: res.data.id,\r\n              })\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            sessionHandler(err, dispatch);\r\n          })\r\n      );\r\n    }\r\n  }, [isLogin]);\r\n\r\n  return (\r\n    <>\r\n      <PublicRoute\r\n        restricted={true}\r\n        path=\"/\"\r\n        component={LoginContainer}\r\n        exact\r\n      />\r\n      {isLogin && userInfo !== null && (\r\n        <>\r\n          <Header name={userInfo.name} />\r\n          {userInfo.permission !== 0 ? (\r\n            <AdminBody isLogin={isLogin}>\r\n              <AsideMenuBar permission={userInfo.permission} />\r\n              <Section>\r\n                {userInfo.permission === 1 && <WorkerSection />}\r\n                {userInfo.permission === 2 && <WorkerSection />}\r\n                {userInfo.permission === 3 && <WorkerSection />}\r\n                {userInfo.permission === 4 && <WorkerSection />}\r\n                {userInfo.permission === 9 && (\r\n                  <>\r\n                    <WorkerSection />\r\n                    <ManagerSection />\r\n                  </>\r\n                )}\r\n                <PrivateRoute path=\"/home\" exact>\r\n                  <MainPage />\r\n                </PrivateRoute>\r\n              </Section>\r\n            </AdminBody>\r\n          ) : (\r\n            <UserBody isLogin={isLogin}>\r\n              <UserSection />\r\n            </UserBody>\r\n          )}\r\n          <Footer />\r\n        </>\r\n      )}\r\n      <GlobalModal /> {/* 모달 전역 제어 */}\r\n      <TopButton/> {/* 전역 탑 버튼 */}\r\n    </>\r\n  );\r\n}\r\n\r\nconst AdminBody = styled.div`\r\n  display: ${(props) => (props.isLogin ? \"grid\" : \"none\")};\r\n  padding-top: ${(props) => (!props.isLogin ? \"0rem\" : \"6.5rem\")};\r\n  grid-template-columns: minmax(260px, 1fr) 8fr;\r\n  min-height: 1280px;\r\n  overflow-x:hidden;\r\n`;\r\nconst UserBody = styled.div`\r\n  padding-top: ${(props) => (!props.isLogin ? \"0rem\" : \"6.5rem\")};\r\n  min-height: 1280px;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  width:calc(100vw - 260px);\r\n`;\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport login from \"./login\";\r\nimport modal from \"./modal\";\r\nimport user from \"./user\";\r\nimport custom from \"./custom\"\r\n\r\nconst rootReducer = combineReducers({ login, modal, user,custom });\r\n\r\nexport default rootReducer;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n\r\n  return null;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport styled from \"styled-components\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nfunction Loading() {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  return (\r\n    <>\r\n      {promiseInProgress && (\r\n        <>\r\n          <Background>\r\n            <LoaderContainer>\r\n              <BeatLoader margin={7} size={20} color={\"#435269\"}/>\r\n            </LoaderContainer>\r\n          </Background>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Background = styled.div`\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 9999;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n  display: block;\r\n  z-index: 9999;\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n`;\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n/* react router dom */\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n/* redux, react-redux */\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./Modules\";\r\n\r\n/* scroll to top */\r\nimport ScrollToTop from \"./Components/ScrollToTop\";\r\n\r\n/* loading Page */\r\nimport Loading from \"./Components/Loading\";\r\n/* redux setting */\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Loading />\r\n        <ScrollToTop />\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}